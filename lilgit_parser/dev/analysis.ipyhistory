{"notebook":{"vers":[{"created":0,"cells":["m.0.0","c.1.0","c.0.0"]},{"created":1,"cells":["m.0.0","c.1.1","c.0.0"]},{"created":5,"cells":["m.0.0","c.1.2","c.0.0"]},{"created":6,"cells":["m.0.0","c.1.3","c.0.0"]},{"created":7,"cells":["m.0.0","c.1.4","c.0.0"]},{"created":10,"cells":["m.0.0","c.2.0","*.c.1","c.0.0"]},{"created":11,"cells":["m.0.0","c.2.1","c.1.5","c.0.0"]},{"created":14,"cells":["m.0.0","c.2.1","c.1.6","c.0.0"]},{"created":15,"cells":["m.0.0","c.2.1","c.1.7","c.0.0"]},{"created":17,"cells":["m.0.0","c.2.2","c.1.8","c.0.0"]},{"created":20,"cells":["m.0.0","c.2.2","c.1.8","*.c.0","c.3.0"]},{"created":21,"cells":["m.0.0","c.2.3","c.1.8","c.0.1","c.3.0"]},{"created":25,"cells":["m.0.0","c.2.3","c.4.0","c.1.8","c.0.1","c.3.0"]},{"created":26,"cells":["m.0.0","c.2.3","c.4.1","c.1.8","c.0.2","c.3.0"]},{"created":30,"cells":["m.0.0","c.2.3","c.4.1","c.1.9","c.0.2","c.3.0"]},{"created":31,"cells":["m.0.0","c.5.0","c.2.3","c.4.1","c.1.9","c.0.2","c.3.0"]},{"created":33,"cells":["m.0.0","c.5.1","c.2.3","c.4.1","c.1.9","c.0.2","c.3.0"]},{"created":34,"cells":["m.0.0","c.5.2","c.2.3","c.4.1","c.1.9","c.0.2","c.3.0"]},{"created":35,"cells":["m.0.0","c.5.2","c.2.4","c.4.1","c.1.9","c.0.2","c.3.0"]},{"created":38,"cells":["m.0.0","c.2.4","c.4.1","c.1.9","c.0.2","c.3.0"]},{"created":41,"cells":["m.0.0","c.2.4","c.6.0","c.4.1","c.1.9","c.0.2","c.3.0"]},{"created":42,"cells":["m.0.0","c.2.4","c.6.1","c.4.1","c.1.9","c.0.2","c.3.0"]},{"created":43,"cells":["m.0.0","c.2.4","c.6.1","c.4.2","c.1.9","c.0.2","c.3.0"]},{"created":44,"cells":["m.0.0","c.2.5","c.6.1","*.c.4","c.1.9","c.0.2","c.3.0"]},{"created":45,"cells":["m.0.0","c.2.6","*.c.6","*.c.4","c.1.9","c.0.2","c.3.0"]},{"created":46,"cells":["m.0.0","c.2.6","c.4.3","c.1.9","c.0.2","c.3.0"]},{"created":49,"cells":["m.0.0","c.2.6","c.4.4","c.1.9","c.0.2","c.3.0"]},{"created":53,"cells":["m.0.0","c.2.7","c.4.4","c.1.9","c.0.2","c.3.0"]},{"created":54,"cells":["m.0.0","c.2.7","c.4.5","*.c.1","c.0.2","c.3.0"]},{"created":56,"cells":["m.0.0","c.2.7","c.4.5","c.1.10","c.0.3","c.3.0"]},{"created":58,"cells":["m.0.0","c.2.7","c.4.5","c.1.10","c.0.4","c.3.0"]},{"created":60,"cells":["m.0.0","c.2.7","c.4.5","c.1.10","c.0.5","c.3.0"]},{"created":61,"cells":["m.0.0","c.2.7","c.4.5","c.1.10","c.0.6","c.3.0"]},{"created":69,"cells":["m.0.0","c.2.7","c.4.5","c.1.11","c.0.6","c.3.0"]},{"created":71,"cells":["m.0.0","c.2.7","c.4.5","c.1.12","c.0.7","c.3.0"]},{"created":72,"cells":["m.0.0","c.2.7","c.4.5","c.1.12","c.0.8","c.3.0"]},{"created":75,"cells":["m.0.0","c.2.7","c.4.5","c.1.12","c.0.9","c.3.0"]},{"created":76,"cells":["m.0.0","c.2.7","c.4.5","c.1.12","c.0.10","c.3.0"]},{"created":77,"cells":["m.0.0","c.2.7","c.4.5","c.1.12","c.0.11","c.3.0"]},{"created":78,"cells":["m.0.0","c.2.7","c.4.5","c.1.12","c.0.12","c.3.0"]},{"created":79,"cells":["m.0.0","c.2.7","c.4.5","c.1.12","c.0.13","c.3.0"]},{"created":80,"cells":["m.0.0","c.2.7","c.4.5","c.1.12","c.0.14","c.3.0"]},{"created":81,"cells":["m.0.0","c.2.7","c.4.5","c.1.12","c.0.15","c.3.0"]},{"created":82,"cells":["m.0.0","c.2.7","c.4.5","c.1.12","c.0.16","c.3.0"]},{"created":83,"cells":["m.0.0","c.2.7","c.4.5","c.1.12","c.0.17","c.3.0"]},{"created":84,"cells":["m.0.0","c.2.7","c.4.5","c.1.12","c.0.18","c.3.0"]},{"created":85,"cells":["m.0.0","c.2.7","c.4.5","c.1.12","c.0.19","c.3.0"]},{"created":86,"cells":["m.0.0","c.2.7","c.4.5","*.c.1","c.0.20","c.3.0"]},{"created":87,"cells":["m.0.0","c.2.7","c.4.5","*.c.1","c.0.21","c.3.0"]},{"created":88,"cells":["m.0.0","c.2.7","c.4.5","c.1.12","c.0.22","c.3.0"]},{"created":89,"cells":["m.0.0","c.2.7","c.4.5","c.1.12","c.0.23","c.3.0"]},{"created":94,"cells":["m.0.0","c.2.7","c.4.5","*.c.1","c.0.23","c.3.0"]},{"created":95,"cells":["m.0.0","c.2.7","c.4.5","c.1.13","c.0.24","c.3.0"]},{"created":96,"cells":["m.0.0","c.2.7","c.4.5","c.1.13","c.0.25","c.3.0"]},{"created":97,"cells":["m.0.0","c.2.7","c.4.5","c.1.13","c.0.26","c.3.0"]},{"created":98,"cells":["m.0.0","c.2.7","c.4.5","c.1.13","c.0.26","c.3.0"]},{"created":100,"cells":["m.0.0","c.2.7","c.4.5","*.c.1","*.c.0","c.3.1","c.7.0"]},{"created":104,"cells":["m.0.1","c.2.7","c.4.5","c.1.13","c.0.27","c.3.1","c.7.0"]},{"created":105,"cells":["m.0.2","c.2.7","c.4.5","c.1.13","c.0.27","c.3.1","c.7.0"]},{"created":106,"cells":["m.0.3","c.2.7","c.4.5","c.1.13","c.0.27","c.3.1","c.7.0"]},{"created":107,"cells":["m.0.4","c.2.7","c.4.5","c.1.13","c.0.27","c.3.1","c.7.0"]},{"created":108,"cells":["m.0.5","c.2.7","c.4.5","c.1.13","c.0.27","c.3.1","c.7.0"]},{"created":109,"cells":["m.0.6","c.2.7","c.4.5","c.1.13","c.0.27","c.3.1","c.7.0"]},{"created":110,"cells":["m.0.7","c.2.7","c.4.5","c.1.13","c.0.27","c.3.1","c.7.0"]},{"created":111,"cells":["m.0.8","c.2.7","c.4.5","c.1.13","c.0.27","c.3.1","c.7.0"]},{"created":112,"cells":["m.0.9","c.2.7","c.4.5","c.1.13","c.0.27","c.3.1","c.7.0"]},{"created":113,"cells":["m.0.10","c.2.7","c.4.5","c.1.13","c.0.27","c.3.1","c.7.0"]},{"created":114,"cells":["m.0.11","c.2.7","c.4.5","c.1.13","c.0.27","c.3.1","c.7.0"]},{"created":115,"cells":["m.0.12","c.2.7","c.4.5","c.1.13","c.0.27","c.3.1","c.7.0"]},{"created":117,"cells":["m.0.13","c.2.7","c.4.5","c.1.13","c.0.27","c.3.1","c.7.0"]},{"created":118,"cells":["m.0.14","c.2.7","c.4.5","c.1.13","c.0.27","c.3.1","c.7.0"]},{"created":119,"cells":["m.0.15","c.2.7","c.4.5","c.1.13","c.0.27","c.3.1","c.7.0"]},{"created":120,"cells":["m.0.16","c.2.7","c.4.5","c.1.13","c.0.27","c.3.1","c.7.0"]},{"created":121,"cells":["m.0.17","c.2.7","c.4.5","c.1.13","c.0.27","c.3.1","c.7.0"]},{"created":122,"cells":["m.0.18","c.2.7","c.4.5","c.1.13","c.0.27","c.3.1","c.7.0"]},{"created":125,"cells":["m.0.18","c.2.7","c.8.0","c.4.5","c.1.13","c.0.27","c.3.1","c.7.0"]},{"created":126,"cells":["m.0.18","c.2.7","c.8.1","c.4.5","c.1.13","c.0.27","c.3.1","c.7.0"]},{"created":127,"cells":["m.0.18","c.2.7","c.9.0","c.8.1","c.4.5","c.1.13","c.0.27","c.3.1","c.7.0"]},{"created":128,"cells":["m.0.18","c.2.7","c.9.1","c.8.1","c.4.5","c.1.13","c.0.27","c.3.1","c.7.0"]},{"created":129,"cells":["m.0.18","c.2.7","c.9.2","c.8.1","c.4.5","c.1.13","c.0.27","c.3.1","c.7.0"]},{"created":130,"cells":["m.0.18","c.2.7","c.9.3","c.8.2","c.4.5","c.1.13","c.0.27","c.3.1","c.7.0"]},{"created":132,"cells":["m.0.18","c.2.7","c.9.3","c.8.3","c.4.5","c.1.13","c.0.27","c.3.1","c.7.0"]},{"created":133,"cells":["m.0.18","c.2.7","c.9.3","c.8.4","c.4.5","c.1.13","c.0.27","c.3.1","c.7.0"]},{"created":134,"cells":["m.0.18","c.2.7","c.9.3","c.8.5","c.4.5","c.1.13","c.0.27","c.3.1","c.7.0"]},{"created":135,"cells":["m.0.18","c.2.7","c.9.3","c.8.6","c.4.5","c.1.13","c.0.27","c.3.1","c.7.0"]},{"created":136,"cells":["m.0.18","c.2.7","c.9.3","c.8.7","c.4.5","c.1.13","c.0.27","c.3.1","c.7.0"]},{"created":138,"cells":["m.0.18","c.2.7","c.9.3","c.8.8","c.4.5","c.1.13","c.0.27","c.3.1","c.7.0"]},{"created":139,"cells":["m.0.18","c.2.7","c.9.3","c.8.9","c.4.5","c.1.13","c.0.27","c.3.1","c.7.0"]},{"created":141,"cells":["m.0.18","c.2.7","c.9.3","c.8.10","c.4.5","c.1.13","c.0.27","c.3.1","c.7.0"]},{"created":142,"cells":["m.0.18","c.2.7","c.9.3","c.8.11","c.4.5","c.1.13","c.0.27","c.3.1","c.7.0"]},{"created":143,"cells":["m.0.18","c.2.7","c.9.3","c.8.11","c.10.0","c.4.5","c.1.13","c.0.27","c.3.1","c.7.0"]},{"created":144,"cells":["m.0.18","c.2.7","c.9.3","c.8.11","c.10.1","c.4.5","c.1.13","c.0.27","c.3.1","c.7.0"]},{"created":145,"cells":["m.0.18","c.2.7","c.9.3","c.8.11","c.10.2","c.4.5","c.1.13","c.0.27","c.3.1","c.7.0"]},{"created":146,"cells":["m.0.18","c.2.7","c.9.3","c.8.11","c.10.3","c.4.5","c.1.13","c.0.27","c.3.1","c.7.0"]},{"created":147,"cells":["m.0.18","c.2.7","c.9.3","c.8.11","c.10.4","c.4.5","c.1.13","c.0.27","c.3.1","c.7.0"]},{"created":148,"cells":["m.0.18","c.2.7","c.9.3","c.8.11","c.10.5","c.4.5","c.1.13","c.0.27","c.3.1","c.7.0"]},{"created":149,"cells":["m.0.18","c.2.7","c.9.3","c.8.11","c.10.6","c.4.5","c.1.13","c.0.27","c.3.1","c.7.0"]},{"created":150,"cells":["m.0.18","c.2.7","c.9.3","c.8.11","c.10.7","c.4.5","c.1.13","c.0.27","c.3.1","c.7.0"]},{"created":151,"cells":["m.0.18","c.2.7","c.9.3","c.8.11","c.10.8","c.4.5","c.1.13","c.0.27","c.3.1","c.7.0"]},{"created":152,"cells":["m.0.18","c.2.7","c.9.3","c.8.11","c.11.0","c.10.8","c.4.5","c.1.13","c.0.27","c.3.1","c.7.0"]},{"created":153,"cells":["m.0.18","c.2.7","c.9.3","c.8.11","c.11.1","c.10.8","c.4.5","c.1.13","c.0.27","c.3.1","c.7.0"]},{"created":154,"cells":["m.0.18","c.2.7","c.9.3","c.8.11","c.10.8","c.4.5","c.1.13","c.0.27","c.3.1","c.7.0"]},{"created":155,"cells":["m.0.18","c.2.7","c.9.3","c.8.11","c.10.9","c.4.5","c.1.13","c.0.27","c.3.1","c.7.0"]},{"created":156,"cells":["m.0.18","c.2.7","c.9.3","c.8.11","c.10.10","c.4.5","c.1.13","c.0.27","c.3.1","c.7.0"]},{"created":157,"cells":["m.0.18","c.2.7","c.9.3","c.8.12","c.10.10","c.4.5","c.1.13","c.0.27","c.3.1","c.7.0"]},{"created":158,"cells":["m.0.18","c.2.7","c.9.3","c.8.12","c.10.11","c.4.5","c.1.13","c.0.27","c.3.1","c.7.0"]},{"created":159,"cells":["m.0.18","c.2.7","c.9.3","c.8.12","c.10.12","c.4.5","c.1.13","c.0.27","c.3.1","c.7.0"]},{"created":160,"cells":["m.0.18","c.2.7","c.9.3","c.8.12","c.10.13","c.4.5","c.1.13","c.0.27","c.3.1","c.7.0"]},{"created":161,"cells":["m.0.18","c.2.7","c.9.3","c.8.12","c.10.14","c.4.5","c.1.13","c.0.27","c.3.1","c.7.0"]},{"created":162,"cells":["m.0.18","c.2.7","c.9.3","c.8.12","c.10.15","c.4.5","c.1.13","c.0.27","c.3.1","c.7.0"]},{"created":163,"cells":["m.0.18","c.2.7","c.9.3","c.8.13","c.10.15","c.4.5","c.1.13","c.0.27","c.3.1","c.7.0"]},{"created":164,"cells":["m.0.18","c.2.7","c.9.3","c.8.13","c.10.16","c.4.5","c.1.13","c.0.27","c.3.1","c.7.0"]},{"created":165,"cells":["m.0.18","c.12.0","c.2.7","c.9.3","c.8.13","c.10.16","c.4.5","c.1.13","c.0.27","c.3.1","c.7.0"]},{"created":166,"cells":["m.0.18","m.1.0","c.2.7","c.9.3","c.8.13","c.10.16","c.4.5","c.1.13","c.0.27","c.3.1","c.7.0"]},{"created":167,"cells":["m.0.18","m.1.1","c.2.7","c.9.3","c.8.13","c.10.16","c.4.5","c.1.13","c.0.27","c.3.1","c.7.0"]},{"created":168,"cells":["m.0.18","c.2.7","c.9.3","c.8.13","c.10.16","c.4.5","c.1.13","c.0.27","c.3.1","c.7.0"]},{"created":170,"cells":["m.0.18","c.2.7","c.9.3","c.8.13","c.10.17","c.4.5","c.1.13","c.0.27","c.3.1","c.7.0"]},{"created":171,"cells":["m.0.18","c.2.7","c.9.3","c.8.13","c.10.18","c.4.5","c.1.13","c.0.27","c.3.1","c.7.0"]},{"created":172,"cells":["m.0.18","c.2.7","c.9.3","c.8.13","c.10.18","c.13.0","c.4.5","c.1.13","c.0.27","c.3.1","c.7.0"]},{"created":173,"cells":["m.0.18","c.2.7","c.9.3","c.8.13","c.10.18","c.13.1","c.4.5","c.1.13","c.0.27","c.3.1","c.7.0"]},{"created":174,"cells":["m.0.18","c.2.7","c.9.3","c.8.13","c.10.18","c.13.2","c.4.5","c.1.13","c.0.27","c.3.1","c.7.0"]},{"created":176,"cells":["m.0.18","c.2.7","c.9.3","c.8.13","c.10.18","c.13.3","c.4.5","c.1.13","c.0.27","c.3.1","c.7.0"]},{"created":177,"cells":["m.0.18","c.2.7","c.9.3","c.8.13","c.10.18","c.13.4","c.4.5","c.1.13","c.0.27","c.3.1","c.7.0"]},{"created":178,"cells":["m.0.18","c.2.7","c.9.3","c.8.13","c.10.18","c.13.5","c.4.5","c.1.13","c.0.27","c.3.1","c.7.0"]},{"created":179,"cells":["m.0.18","c.2.7","c.9.3","c.8.13","c.10.18","c.13.6","c.4.5","c.1.13","c.0.27","c.3.1","c.7.0"]},{"created":180,"cells":["m.0.18","c.2.7","c.9.3","c.8.13","c.10.18","c.13.7","c.4.5","c.1.13","c.0.27","c.3.1","c.7.0"]},{"created":181,"cells":["m.0.18","c.2.8","c.9.3","c.8.13","c.10.18","c.13.7","c.4.5","c.1.13","c.0.27","c.3.1","c.7.0"]},{"created":186,"cells":["m.0.18","c.2.8","c.9.3","c.8.13","c.10.18","c.13.8","c.4.5","c.1.13","c.0.27","c.3.1","c.7.0"]},{"created":188,"cells":["m.0.18","c.2.8","c.9.3","c.8.13","c.10.18","c.13.9","c.4.5","c.1.13","c.0.27","c.3.1","c.7.0"]},{"created":189,"cells":["m.0.18","c.2.8","c.9.3","c.8.13","c.10.18","c.14.0","c.13.9","c.4.5","c.1.13","c.0.27","c.3.1","c.7.0"]},{"created":190,"cells":["m.0.18","c.2.8","c.9.3","c.8.13","c.10.18","c.14.1","c.13.9","c.4.5","c.1.13","c.0.27","c.3.1","c.7.0"]},{"created":191,"cells":["m.0.18","c.2.8","c.9.3","c.8.13","c.10.18","c.14.2","c.13.9","c.4.5","c.1.13","c.0.27","c.3.1","c.7.0"]},{"created":192,"cells":["m.0.18","c.2.8","c.9.3","c.8.13","c.10.18","c.14.3","c.13.9","c.4.5","c.1.13","c.0.27","c.3.1","c.7.0"]},{"created":193,"cells":["m.0.18","c.2.8","c.9.3","c.8.13","c.10.18","c.14.3","c.13.10","c.4.5","c.1.13","c.0.27","c.3.1","c.7.0"]},{"created":194,"cells":["m.0.18","c.2.8","c.9.3","c.8.13","c.10.18","c.14.3","c.13.11","c.4.5","c.1.13","c.0.27","c.3.1","c.7.0"]},{"created":195,"cells":["m.0.18","c.2.8","c.9.3","c.8.13","c.10.18","c.14.4","c.13.11","c.4.5","c.1.13","c.0.27","c.3.1","c.7.0"]},{"created":196,"cells":["m.0.18","c.2.8","c.9.3","c.8.13","c.10.18","c.14.5","c.13.11","c.4.5","c.1.13","c.0.27","c.3.1","c.7.0"]},{"created":197,"cells":["m.0.18","c.2.8","c.9.3","c.8.13","c.10.18","c.14.5","c.13.12","c.4.5","c.1.13","c.0.27","c.3.1","c.7.0"]},{"created":198,"cells":["m.0.18","c.2.8","c.9.3","c.8.13","c.10.18","c.14.6","c.13.13","c.4.5","c.1.13","c.0.27","c.3.1","c.7.0"]},{"created":201,"cells":["m.0.18","c.2.8","c.9.3","c.8.13","c.10.18","c.14.7","c.13.13","c.4.5","c.1.13","c.0.27","c.3.1","c.7.0"]},{"created":202,"cells":["m.0.18","c.2.8","c.9.3","c.8.13","c.10.18","c.14.8","c.13.13","c.4.5","c.1.13","c.0.27","c.3.1","c.7.0"]},{"created":203,"cells":["m.0.18","c.2.8","c.9.3","c.8.13","c.10.18","c.14.9","c.13.13","c.4.5","c.1.13","c.0.27","c.3.1","c.7.0"]},{"created":204,"cells":["m.0.18","c.2.8","c.9.3","c.8.13","c.10.18","c.14.9","c.13.14","c.4.5","c.1.13","c.0.27","c.3.1","c.7.0"]},{"created":205,"cells":["m.0.18","c.2.8","c.9.3","c.8.13","c.10.18","c.14.10","c.13.14","c.4.5","c.1.13","c.0.27","c.3.1","c.7.0"]},{"created":206,"cells":["m.0.18","c.2.8","c.9.3","c.8.13","c.10.18","c.14.11","c.13.14","c.4.5","c.1.13","c.0.27","c.3.1","c.7.0"]},{"created":207,"cells":["m.0.18","c.2.8","c.9.3","c.8.13","c.10.18","c.14.12","c.13.14","c.4.5","c.1.13","c.0.27","c.3.1","c.7.0"]},{"created":208,"cells":["m.0.18","c.2.8","c.9.3","c.8.13","c.10.18","c.14.12","c.13.15","c.4.5","c.1.13","c.0.27","c.3.1","c.7.0"]},{"created":209,"cells":["m.0.18","c.2.8","c.9.3","c.8.13","c.10.18","c.14.13","c.13.15","c.4.5","c.1.13","c.0.27","c.3.1","c.7.0"]},{"created":211,"cells":["m.0.18","c.2.8","c.9.3","c.8.13","c.10.18","c.14.13","c.13.16","c.4.5","c.1.13","c.0.27","c.3.1","c.7.0"]},{"created":212,"cells":["m.0.18","c.2.8","c.9.3","c.8.13","c.10.18","c.14.14","c.13.16","c.4.5","c.1.13","c.0.27","c.3.1","c.7.0"]},{"created":213,"cells":["m.0.18","c.2.8","c.9.3","c.8.13","c.10.18","c.14.15","c.13.16","c.4.5","c.1.13","c.0.27","c.3.1","c.7.0"]},{"created":214,"cells":["m.0.18","c.2.8","c.9.3","c.8.13","c.10.18","c.14.16","c.13.16","c.4.5","c.1.13","c.0.27","c.3.1","c.7.0"]},{"created":215,"cells":["m.0.18","c.2.8","c.9.3","c.8.13","c.10.18","c.14.17","c.13.16","c.4.5","c.1.13","c.0.27","c.3.1","c.7.0"]},{"created":216,"cells":["m.0.18","c.2.8","c.9.3","c.8.13","c.10.18","c.14.18","c.13.16","c.4.5","c.1.13","c.0.27","c.3.1","c.7.0"]},{"created":217,"cells":["m.0.18","c.2.8","c.9.3","c.8.13","c.10.18","c.14.19","c.13.16","c.4.5","c.1.13","c.0.27","c.3.1","c.7.0"]},{"created":218,"cells":["m.0.18","c.2.8","c.9.3","c.8.13","c.10.18","c.14.20","c.13.16","c.4.5","c.1.13","c.0.27","c.3.1","c.7.0"]},{"created":219,"cells":["m.0.18","c.2.8","c.9.3","c.8.13","c.10.18","c.14.21","c.13.16","c.4.5","c.1.13","c.0.27","c.3.1","c.7.0"]},{"created":220,"cells":["m.0.18","c.2.8","c.9.3","c.8.13","c.10.18","c.14.21","c.13.17","c.4.5","c.1.13","c.0.27","c.3.1","c.7.0"]},{"created":222,"cells":["m.0.18","c.2.8","c.9.3","c.8.13","c.10.18","c.14.21","c.13.18","c.4.5","c.1.13","c.0.27","c.3.1","c.7.0"]},{"created":223,"cells":["m.0.18","c.2.8","c.9.3","c.8.13","c.10.18","c.14.22","c.13.18","c.4.5","c.1.13","c.0.27","c.3.1","c.7.0"]},{"created":224,"cells":["m.0.18","c.2.8","c.9.3","c.8.13","c.10.18","c.14.23","c.13.18","c.4.5","c.1.13","c.0.27","c.3.1","c.7.0"]},{"created":225,"cells":["m.0.18","c.2.8","c.9.3","c.8.13","c.10.18","c.14.24","c.13.18","c.4.5","c.1.13","c.0.27","c.3.1","c.7.0"]},{"created":226,"cells":["m.0.18","c.2.8","c.9.3","c.8.13","c.10.18","c.14.25","c.13.18","c.4.5","c.1.13","c.0.27","c.3.1","c.7.0"]},{"created":227,"cells":["m.0.18","c.2.8","c.9.3","c.8.13","c.10.18","c.14.25","c.13.19","c.4.5","c.1.13","c.0.27","c.3.1","c.7.0"]},{"created":228,"cells":["m.0.18","c.2.8","c.9.3","c.8.13","c.10.18","c.14.25","c.13.20","c.4.5","c.1.13","c.0.27","c.3.1","c.7.0"]},{"created":229,"cells":["m.0.18","c.2.8","c.9.3","c.8.13","c.10.18","c.14.26","c.13.20","c.4.5","c.1.13","c.0.27","c.3.1","c.7.0"]},{"created":230,"cells":["m.0.18","c.2.8","c.9.3","c.8.13","c.10.18","c.14.27","c.13.20","c.4.5","c.1.13","c.0.27","c.3.1","c.7.0"]},{"created":231,"cells":["m.0.18","c.2.8","c.9.3","c.8.13","c.10.18","c.14.28","c.13.20","c.4.5","c.1.13","c.0.27","c.3.1","c.7.0"]},{"created":232,"cells":["m.0.18","c.2.8","c.9.3","c.8.13","c.10.18","c.14.29","c.13.20","c.4.5","c.1.13","c.0.27","c.3.1","c.7.0"]},{"created":233,"cells":["m.0.18","c.2.8","c.9.3","c.8.13","c.10.18","c.14.30","c.13.20","c.4.5","c.1.13","c.0.27","c.3.1","c.7.0"]},{"created":234,"cells":["m.0.18","c.2.8","c.9.3","c.8.13","c.10.18","c.14.31","c.13.20","c.4.5","c.1.13","c.0.27","c.3.1","c.7.0"]},{"created":235,"cells":["m.0.18","c.2.8","c.9.3","c.8.13","c.10.18","c.14.32","c.13.20","c.4.5","c.1.13","c.0.27","c.3.1","c.7.0"]},{"created":236,"cells":["m.0.18","c.2.8","c.9.3","c.8.13","c.10.18","c.14.33","c.13.20","c.4.5","c.1.13","c.0.27","c.3.1","c.7.0"]},{"created":237,"cells":["m.0.18","c.2.8","c.9.3","c.8.13","c.10.18","c.14.34","c.13.20","c.4.5","c.1.13","c.0.27","c.3.1","c.7.0"]},{"created":238,"cells":["m.0.18","c.2.8","c.9.3","c.8.13","c.10.18","c.14.35","c.13.20","c.4.5","c.1.13","c.0.27","c.3.1","c.7.0"]},{"created":239,"cells":["m.0.18","c.2.8","c.9.3","c.8.13","c.10.18","c.14.36","c.13.20","c.4.5","c.1.13","c.0.27","c.3.1","c.7.0"]},{"created":241,"cells":["m.0.18","c.2.8","c.9.3","c.8.13","c.10.18","c.13.20","c.4.5","c.1.13","c.0.27","c.3.1","c.7.0"]},{"created":242,"cells":["m.0.18","c.2.8","c.9.3","c.8.13","c.10.18","c.13.21","c.4.5","c.1.13","c.0.27","c.3.1","c.7.0"]},{"created":243,"cells":["m.0.18","c.2.8","c.9.3","c.8.13","c.10.18","c.13.22","c.4.5","c.1.13","c.0.27","c.3.1","c.7.0"]},{"created":244,"cells":["m.0.18","c.2.8","c.9.3","c.8.13","c.10.18","c.13.23","c.4.5","c.1.13","c.0.27","c.3.1","c.7.0"]},{"created":246,"cells":["m.0.18","c.2.8","c.9.3","c.8.13","c.10.18","c.13.24","c.4.5","c.1.13","c.0.27","c.3.1","c.7.0"]},{"created":247,"cells":["m.0.18","c.2.8","c.9.3","c.8.13","c.10.18","c.13.25","c.4.5","c.1.13","c.0.27","c.3.1","c.7.0"]},{"created":248,"cells":["m.0.18","c.2.8","c.9.3","c.8.13","c.10.18","c.13.26","c.4.5","c.1.13","c.0.27","c.3.1","c.7.0"]},{"created":250,"cells":["m.0.18","c.2.8","c.9.3","c.8.13","c.10.18","c.13.27","c.4.5","c.1.13","c.0.27","c.3.1","c.7.0"]},{"created":251,"cells":["m.0.18","c.2.8","c.9.3","c.8.13","c.10.18","c.13.28","c.4.5","c.1.13","c.0.27","c.3.1","c.7.0"]},{"created":252,"cells":["m.0.18","c.2.8","c.9.3","c.8.13","c.10.18","c.13.28","c.15.0","c.4.5","c.1.13","c.0.27","c.3.1","c.7.0"]},{"created":253,"cells":["m.0.18","c.2.8","c.9.3","c.8.13","c.10.18","c.13.28","c.15.1","c.4.5","c.1.13","c.0.27","c.3.1","c.7.0"]},{"created":254,"cells":["m.0.18","c.2.8","c.9.3","c.8.13","c.10.18","c.13.28","c.15.2","c.4.5","c.1.13","c.0.27","c.3.1","c.7.0"]},{"created":255,"cells":["m.0.18","c.2.8","c.9.3","c.8.13","c.10.18","c.13.28","c.15.3","c.4.5","c.1.13","c.0.27","c.3.1","c.7.0"]},{"created":256,"cells":["m.0.18","c.2.8","c.9.3","c.8.13","c.10.18","c.13.28","c.15.4","c.4.5","c.1.13","c.0.27","c.3.1","c.7.0"]},{"created":257,"cells":["m.0.18","c.2.8","c.9.3","c.8.13","c.10.18","c.13.28","c.15.5","c.4.5","c.1.13","c.0.27","c.3.1","c.7.0"]},{"created":258,"cells":["m.0.18","c.2.8","c.9.3","c.8.13","c.10.18","c.13.28","*.c.15","c.1.13","c.0.27","c.3.1","c.7.0"]},{"created":259,"cells":["m.0.18","c.2.8","c.9.3","c.8.13","c.10.18","c.13.28","*.c.15","c.0.27","c.3.1","c.7.0"]},{"created":260,"cells":["m.0.18","c.2.8","c.9.3","c.8.13","c.10.18","c.13.28","*.c.15","c.3.1","c.7.0"]},{"created":261,"cells":["m.0.18","c.2.8","c.9.3","c.8.13","c.10.18","c.13.28","*.c.15","c.7.0"]},{"created":264,"cells":["m.0.18","c.2.9","c.9.3","c.8.13","c.10.18","c.13.28","c.15.6","*.c.7"]},{"created":270,"cells":["m.0.18","c.2.9","c.9.3","c.8.13","c.10.18","c.13.28","c.15.6","c.7.1","c.16.0"]},{"created":272,"cells":["m.0.18","c.2.9","c.9.3","c.8.13","c.10.18","c.13.28","c.15.6","c.7.1"]},{"created":273,"cells":["m.0.18","c.2.9","c.9.3","c.8.13","c.10.18","c.13.28","c.15.6","c.7.2"]},{"created":274,"cells":["m.0.18","c.2.9","c.9.3","c.8.13","c.10.18","c.13.28","c.15.6","c.7.3"]},{"created":275,"cells":["m.0.18","c.2.9","c.9.3","c.8.13","c.10.18","c.13.28","c.15.6","c.7.4"]},{"created":276,"cells":["m.0.18","c.2.9","c.9.3","c.8.13","c.10.18","c.13.28","c.15.7","*.c.7"]},{"created":277,"cells":["m.0.18","c.2.9","c.9.3","c.8.13","c.10.18","c.13.28","c.15.8","*.c.7"]},{"created":279,"cells":["m.0.18","c.2.9","c.9.3","c.8.13","c.10.18","c.13.28","c.15.8","c.7.5","c.17.0"]},{"created":281,"cells":["m.0.18","c.2.9","c.9.3","c.8.13","c.10.18","c.13.28","c.15.8","c.7.6","c.17.0"]},{"created":282,"cells":["m.0.18","c.2.9","c.9.3","c.8.13","c.10.18","c.13.28","c.15.8","c.7.7","c.17.0"]},{"created":283,"cells":["m.0.18","c.2.9","c.9.3","c.8.13","c.10.18","c.13.28","c.15.8","c.7.7","c.17.1"]},{"created":284,"cells":["m.0.18","c.2.9","c.9.3","c.8.13","c.10.18","c.13.28","c.15.8","c.7.7","c.17.2","c.18.0"]},{"created":286,"cells":["m.0.18","c.2.9","c.9.3","c.8.13","c.10.18","c.13.28","c.15.8","c.7.7","c.17.3","c.18.0"]},{"created":287,"cells":["m.0.18","c.2.9","c.9.3","c.8.13","c.10.18","c.13.28","c.15.8","c.7.7","c.18.0"]},{"created":288,"cells":["m.0.18","c.2.9","c.9.3","c.8.13","c.10.18","c.13.28","c.15.8","c.7.8","c.18.0"]},{"created":290,"cells":["m.0.18","c.2.9","c.9.3","c.8.13","c.10.18","c.13.28","c.15.8","c.7.8","c.18.1"]},{"created":291,"cells":["m.0.18","c.2.9","c.9.3","c.8.13","c.10.18","c.13.28","c.15.8","c.7.8","c.18.2"]},{"created":292,"cells":["m.0.18","c.2.9","c.9.3","c.8.13","c.10.18","c.13.28","c.15.8","c.7.8","c.18.3"]},{"created":293,"cells":["m.0.18","c.2.9","c.9.3","c.8.13","c.10.18","c.13.28","c.15.8","c.7.8","c.18.4"]},{"created":294,"cells":["m.0.18","c.2.9","c.9.3","c.8.13","c.10.18","c.13.28","c.15.8","c.7.8","c.18.5","c.19.0"]},{"created":296,"cells":["m.0.18","c.2.9","c.9.3","c.8.13","c.10.18","c.13.28","c.15.8","c.7.8","c.18.6","c.19.0"]},{"created":297,"cells":["m.0.18","c.2.9","c.9.3","c.8.13","c.10.18","c.13.28","c.15.8","c.7.8","c.18.7","c.19.0"]},{"created":298,"cells":["m.0.18","c.2.9","c.9.3","c.8.14","c.10.18","c.13.28","c.15.8","c.7.8","c.18.7","c.19.0"]},{"created":299,"cells":["m.0.18","c.2.9","c.9.4","c.8.14","c.10.18","c.13.28","c.15.8","c.7.8","c.18.7","c.19.0"]},{"created":301,"cells":["m.0.18","c.2.9","c.9.4","c.8.15","c.10.18","c.13.28","c.15.8","c.7.8","c.18.7","c.19.0"]},{"created":310,"cells":["m.0.18","c.2.9","c.9.4","c.8.15","c.10.18","c.13.28","c.15.8","c.7.8","c.18.8","c.19.0"]},{"created":311,"cells":["m.0.18","c.2.9","c.9.4","c.8.15","c.10.18","c.13.28","c.15.8","c.7.8","c.18.9","c.19.0"]},{"created":322,"cells":["m.0.18","c.2.9","c.9.4","c.8.15","c.10.18","c.13.28","c.15.8","c.7.8","c.18.9","c.19.0","c.20.0"]},{"created":325,"cells":["m.0.18","c.2.9","c.9.4","c.8.15","c.10.18","c.13.29","c.15.8","c.7.8","c.18.9","c.19.0","c.20.0"]},{"created":328,"cells":["m.0.18","c.2.9","c.9.4","c.8.15","c.10.18","c.13.30","c.15.8","c.7.8","c.18.9","c.19.0","c.20.0"]},{"created":329,"cells":["m.0.18","c.2.9","c.9.4","c.8.15","c.10.18","c.13.30","c.21.0","c.15.8","c.7.8","c.18.9","c.19.0","c.20.0"]},{"created":330,"cells":["m.0.18","c.2.9","c.9.4","c.8.15","c.10.18","c.13.30","c.21.1","c.15.8","c.7.8","c.18.9","c.19.0","c.20.0"]},{"created":333,"cells":["m.0.18","c.2.9","c.9.4","c.8.15","c.10.18","c.13.30","c.21.2","c.15.8","c.7.8","c.18.9","c.19.0","c.20.0"]},{"created":334,"cells":["m.0.18","c.2.9","c.9.4","c.8.15","c.10.18","c.13.30","c.21.2","c.15.8","c.7.8","c.18.9","c.19.0"]},{"created":335,"cells":["m.0.18","c.2.9","c.9.4","c.8.15","c.10.18","c.13.30","c.21.2","c.15.8","c.7.8","c.18.9"]}]},"codeCells":[{"vers":[{"created":0,"parent":"n.0.56","type":"Module","outputId":0,"outputVer":"0","content":[],"start":{"line":1,"ch":0},"end":{"line":1,"ch":0}},{"created":23,"parent":"n.0.12","type":"Module","outputId":0,"outputVer":1,"content":[],"literal":"# quick diff on the strings\nfor i,s in enumerate(difflib.ndiff(a, b)):\n    if s[0]==' ': continue\n    elif s[0]=='-':\n        print(u'Delete \"{}\" from position {}'.format(s[-1],i))\n    elif s[0]=='+':\n        print(u'Add \"{}\" to position {}'.format(s[-1],i))    ","start":{"line":0,"ch":0},"end":{"line":6,"ch":60}},{"created":28,"parent":"n.0.28","type":"Module","outputId":0,"outputVer":2,"content":[],"literal":"   ","start":{"line":0,"ch":0},"end":{"line":0,"ch":2}},{"created":56,"parent":"n.0.29","type":"Module","outputId":0,"outputVer":2,"content":[],"literal":"def markDiffPos(node):\n    print(node)","start":{"line":0,"ch":0},"end":{"line":1,"ch":14}},{"created":58,"parent":"n.0.30","type":"Module","outputId":0,"outputVer":2,"content":[],"literal":"def markDiffPos(node):\n    print(node, type(node))","start":{"line":0,"ch":0},"end":{"line":1,"ch":26}},{"created":60,"parent":"n.0.31","type":"Module","outputId":0,"outputVer":2,"content":[],"literal":"def markDiffPos(node, pos = 0, diff_pos):\n    if 'literal':\n        pos += len(node['literal'])","start":{"line":0,"ch":0},"end":{"line":2,"ch":34}},{"created":61,"parent":"n.0.33","type":"Module","outputId":0,"outputVer":2,"content":[],"start":{"line":0,"ch":0},"end":{"line":0,"ch":-1}},{"created":71,"parent":"n.0.34","type":"Module","outputId":0,"outputVer":2,"content":[],"literal":"def markDiffPos(node, delete_pos):\n    print(delete_pos)\n    print(node[''])","start":{"line":0,"ch":0},"end":{"line":2,"ch":18}},{"created":72,"parent":"n.0.35","type":"Module","outputId":0,"outputVer":2,"content":[],"literal":"def markDiffPos(node, delete_pos):\n    print(delete_pos)\n    print(node['start']['pos'], node['end']['pos'])","start":{"line":0,"ch":0},"end":{"line":2,"ch":50}},{"created":75,"parent":"n.0.36","type":"Module","outputId":0,"outputVer":2,"content":[],"literal":"def inRange(node, pos):\n    if node['start']['pos'] <= pos and node['end']['pos'] >= pos:\n        return 1\n    \n\ndef markDiffPos(node, delete_pos):\n    print(delete_pos)\n    print(node['start']['pos'], node['end']['pos'])","start":{"line":0,"ch":0},"end":{"line":7,"ch":50}},{"created":76,"parent":"n.0.37","type":"Module","outputId":0,"outputVer":2,"content":[],"literal":"def inRange(node, pos):\n    return node['start']['pos'] <= pos and node['end']['pos'] >= pos:\n    \n\ndef markDiffPos(node, delete_pos):\n    print(delete_pos)\n    print(node['start']['pos'], node['end']['pos'])\n    \n    \n    \n    ","start":{"line":0,"ch":0},"end":{"line":10,"ch":3}},{"created":77,"parent":"n.0.38","type":"Module","outputId":0,"outputVer":2,"content":[],"literal":"def inRange(node, pos):\n    return node['start']['pos'] <= pos and node['end']['pos'] >= pos:\n    \n\ndef markDiffPos(node, delete_pos):\n    print(delete_pos)\n    print(node['start']['pos'], node['end']['pos'])\n    i\n    \n    \n    ","start":{"line":0,"ch":0},"end":{"line":10,"ch":3}},{"created":78,"parent":"n.0.39","type":"Module","outputId":0,"outputVer":2,"content":[],"literal":"def inRange(node, pos):\n    return node['start']['pos'] <= pos and node['end']['pos'] >= pos:\n    \n\ndef markDiffPos(node, delete_pos):\n    d_pos = delete_pos.\n    if inRange(node, )\n    \n    \n    ","start":{"line":0,"ch":0},"end":{"line":9,"ch":3}},{"created":79,"parent":"n.0.40","type":"Module","outputId":0,"outputVer":2,"content":[],"literal":"def inRange(node, pos):\n    return node['start']['pos'] <= pos and node['end']['pos'] >= pos:\n    \n\ndef markDiffPos(node, delete_pos):\n    pos = delete_pos.pop(0)\n    if inRange(node, pos):\n        \n    \n    \n    ","start":{"line":0,"ch":0},"end":{"line":10,"ch":3}},{"created":80,"parent":"n.0.41","type":"Module","outputId":0,"outputVer":2,"content":[],"literal":"def inRange(node, pos):\n    return node['start']['pos'] <= pos and node['end']['pos'] >= pos:\n    \n\ndef markDiffPos(node, delete_pos):\n    pos = delete_pos[0]\n    if inRange(node, pos):\n        if 'content' in node:\n            narrow = False\n            for item in node['content']:\n                if 'syntok' not in item:\n                    narrow = markDiffPos(item, delete_pos)\n            if\n    \n    \n    ","start":{"line":0,"ch":0},"end":{"line":15,"ch":3}},{"created":81,"parent":"n.0.42","type":"Module","outputId":0,"outputVer":2,"content":[],"literal":"def inRange(node, pos):\n    return node['start']['pos'] <= pos and node['end']['pos'] >= pos:\n    \n\ndef markDiffPos(node, delete_pos):\n    pos = delete_pos[0]\n    if inRange(node, pos):\n        if 'content' in node:\n            narrow = False\n            for item in node['content']:\n                if 'syntok' not in item:\n                    [narrow, delete_pos] = markDiffPos(item, delete_pos)\n            if narrow:\n                \n    \n    \n    ","start":{"line":0,"ch":0},"end":{"line":16,"ch":3}},{"created":82,"parent":"n.0.43","type":"Module","outputId":0,"outputVer":2,"content":[],"literal":"def inRange(node, pos):\n    return node['start']['pos'] <= pos and node['end']['pos'] >= pos:\n    \n\ndef markDiffPos(node, delete_pos):\n    pos = delete_pos[0]\n    while inRange(node, pos):\n        narrow = False\n        if 'content' in node:\n            for item in node['content']:\n                if 'syntok' not in item:\n                    [found, delete_pos] = markDiffPos(item, delete_pos)\n                    narrow = found or narrow\n        if not narrow:\n            delete_pos.pop(0)\n        pos = delete_pos[0]\n                \n    \n    \n    ","start":{"line":0,"ch":0},"end":{"line":19,"ch":3}},{"created":83,"parent":"n.0.44","type":"Module","outputId":0,"outputVer":2,"content":[],"literal":"def inRange(node, pos):\n    if 'start' not in node: return False\n    return node['start']['pos'] <= pos and node['end']['pos'] >= pos:\n    \n\ndef markDiffPos(node, delete_pos):\n    pos = delete_pos[0]\n    while inRange(node, pos):\n        if 'content' in node:\n            for item in node['content']:\n                if inRange(item, pos)\n                    delete_pos = markDiffPos(item, delete_pos)\n                \n        if not narrow:\n            delete_pos.pop(0)\n        pos = delete_pos[0]\n                \n    \n    \n    ","start":{"line":0,"ch":0},"end":{"line":19,"ch":3}},{"created":84,"parent":"n.0.45","type":"Module","outputId":0,"outputVer":2,"content":[],"literal":"def inRange(node, pos):\n    if 'start' not in node: return False\n    return node['start']['pos'] <= pos and node['end']['pos'] >= pos:\n    \n\ndef markDiffPos(node, delete_pos):\n    pos = delete_pos[0]\n    while inRange(node, pos):\n        node['dirty'] = True\n        narrow = False\n        if 'content' in node:\n            for item in node['content']:\n                if inRange(item, pos):\n                    narrow = True\n                    delete_pos = markDiffPos(item, delete_pos)\n                \n        if not narrow:\n            delete_pos.pop(0)\n        pos = delete_pos[0]\n                \n    \n    \n    ","start":{"line":0,"ch":0},"end":{"line":22,"ch":3}},{"created":85,"parent":"n.0.46","type":"Module","outputId":0,"outputVer":2,"content":[],"literal":"def inRange(node, pos):\n    if 'start' not in node: return False\n    return node['start']['pos'] <= pos and node['end']['pos'] >= pos\n    \n\ndef markDiffPos(node, delete_pos):\n    print(delete_pos)\n    pos = delete_pos[0]\n    while inRange(node, pos):\n        node['dirty'] = True\n        narrow = False\n        if 'content' in node:\n            for item in node['content']:\n                if inRange(item, pos):\n                    narrow = True\n                    delete_pos = markDiffPos(item, delete_pos)      \n        if not narrow:\n            delete_pos.pop(0)\n        pos = delete_pos[0]\n    return delete_pos\n                \n    \n    \n    ","start":{"line":0,"ch":0},"end":{"line":23,"ch":3}},{"created":86,"parent":"n.0.47","type":"Module","outputId":0,"outputVer":2,"content":[],"literal":"def inRange(node, pos):\n    if 'start' not in node: return False\n    return node['start']['pos'] <= pos and node['end']['pos'] >= pos\n    \n\ndef markDiffPos(node, delete_pos):\n    pos = delete_pos[0]\n    print(delete_pos, pos)\n    while inRange(node, pos):\n        node['dirty'] = True\n        narrow = False\n        if 'content' in node:\n            for item in node['content']:\n                if inRange(item, pos):\n                    narrow = True\n                    delete_pos = markDiffPos(item, delete_pos)      \n        if not narrow:\n            delete_pos.pop(0)\n        pos = delete_pos[0]\n    return delete_pos\n                \n    \n    \n    ","start":{"line":0,"ch":0},"end":{"line":23,"ch":3}},{"created":87,"parent":"n.0.48","type":"Module","outputId":0,"outputVer":2,"content":[],"literal":"def inRange(node, pos):\n    if 'start' not in node: return False\n    return node['start']['pos'] <= pos and node['end']['pos'] >= pos\n    \n\ndef markDiffPos(node, delete_pos):\n    pos = delete_pos[0]\n    print(delete_pos, pos, node)\n    while inRange(node, pos):\n        node['dirty'] = True\n        narrow = False\n        if 'content' in node:\n            for item in node['content']:\n                if inRange(item, pos):\n                    narrow = True\n                    delete_pos = markDiffPos(item, delete_pos)      \n        if not narrow:\n            delete_pos.pop(0)\n        pos = delete_pos[0]\n    return delete_pos\n                \n    \n    \n    ","start":{"line":0,"ch":0},"end":{"line":23,"ch":3}},{"created":88,"parent":"n.0.49","type":"Module","outputId":0,"outputVer":2,"content":[],"literal":"def inRange(node, pos):\n    if 'start' not in node: \n        return False\n    prin\n    return node['start']['pos'] <= pos and node['end']['pos'] >= pos\n    \n\ndef markDiffPos(node, delete_pos):\n    pos = delete_pos[0]\n    print(delete_pos, pos, node)\n    while inRange(node, pos):\n        node['dirty'] = True\n        narrow = False\n        if 'content' in node:\n            for item in node['content']:\n                if inRange(item, pos):\n                    narrow = True\n                    delete_pos = markDiffPos(item, delete_pos)      \n        if not narrow:\n            delete_pos.pop(0)\n        pos = delete_pos[0]\n    return delete_pos\n                \n    \n    \n    ","start":{"line":0,"ch":0},"end":{"line":25,"ch":3}},{"created":89,"parent":"n.0.51","type":"Module","outputId":0,"outputVer":2,"content":[],"literal":"def inRange(node, pos):\n    if 'start' not in node: \n        return False\n    print(node['start'], node['end'])\n    return node['start']['pos'] <= pos and node['end']['pos'] >= pos\n    \n\ndef markDiffPos(node, delete_pos):\n    pos = delete_pos[0]\n    print(delete_pos, pos)\n    while inRange(node, pos):\n        node['dirty'] = True\n        narrow = False\n        if 'content' in node:\n            for item in node['content']:\n                if inRange(item, pos):\n                    narrow = True\n                    delete_pos = markDiffPos(item, delete_pos)      \n        if not narrow:\n            delete_pos.pop(0)\n        pos = delete_pos[0]\n    return delete_pos\n                \n    \n    \n    ","start":{"line":0,"ch":0},"end":{"line":25,"ch":3}},{"created":95,"parent":"n.0.52","type":"Module","outputId":0,"outputVer":2,"content":[],"literal":"def inRange(node, pos):\n    if 'start' not in node: \n        return False\n    print(node['start'], node['end'])\n    return node['start']['pos'] <= pos and node['end']['pos'] >= pos\n    \n\ndef markDiffPos(node, delete_pos):\n    pos = delete_pos[0]\n    print(delete_pos, pos)\n    while inRange(node, pos):\n        node['dirty'] = True\n        narrow = False\n        if 'content' in node:\n            for item in node['content']:\n                if inRange(item, pos):\n                    narrow = True\n                    delete_pos = markDiffPos(item, delete_pos)      \n        if not narrow:\n            delete_pos.pop(0)\n        pos = delete_pos[0] if len()\n    return delete_pos\n                \n    \n    \n    ","start":{"line":0,"ch":0},"end":{"line":25,"ch":3}},{"created":96,"parent":"n.0.53","type":"Module","outputId":0,"outputVer":2,"content":[],"literal":"def inRange(node, pos):\n    if 'start' not in node: \n        return False\n    print(node['start'], node['end'])\n    return node['start']['pos'] <= pos and node['end']['pos'] >= pos\n    \n\ndef markDiffPos(node, delete_pos):\n    pos = delete_pos[0]\n    print(delete_pos, pos)\n    while inRange(node, pos):\n        node['dirty'] = True\n        narrow = False\n        if 'content' in node:\n            for item in node['content']:\n                if inRange(item, pos):\n                    narrow = True\n                    delete_pos = markDiffPos(item, delete_pos)      \n        if not narrow:\n            delete_pos.pop(0)\n        pos = delete_pos[0] if len(delete_pos) > 0 else None\n    return delete_pos\n                \n    \n    \n    ","start":{"line":0,"ch":0},"end":{"line":25,"ch":3}},{"created":97,"parent":"n.0.55","type":"Module","outputId":0,"outputVer":2,"content":[],"literal":"def inRange(node, pos):\n    if 'start' not in node: \n        return False\n    print(node['start'], node['end'])\n    return node['start']['pos'] <= pos and node['end']['pos'] >= pos\n    \n\ndef markDiffPos(node, delete_pos):\n    pos = delete_pos[0]\n    print(delete_pos, pos)\n    while pos and inRange(node, pos):\n        node['dirty'] = True\n        narrow = False\n        if 'content' in node:\n            for item in node['content']:\n                if inRange(item, pos):\n                    narrow = True\n                    delete_pos = markDiffPos(item, delete_pos)      \n        if not narrow:\n            delete_pos.pop(0)\n        pos = delete_pos[0] if len(delete_pos) > 0 else None\n    return delete_pos\n                \n    \n    \n    ","start":{"line":0,"ch":0},"end":{"line":25,"ch":3}},{"created":104,"parent":"n.0.192","type":"Module","outputId":0,"outputVer":2,"content":[],"literal":"def inRange(node, pos):\n    if 'start' not in node: \n        return False\n    print(node['start'], node['end'])\n    return node['start']['pos'] <= pos and node['end']['pos'] >= pos\n    \n\ndef markDiffPos(node, delete_pos):\n    pos = delete_pos[0]\n    print(delete_pos, pos)\n    while pos and inRange(node, pos):\n        node['dirty'] = True\n        narrow = False\n        if 'content' in node:\n            for item in node['content']:\n                if inRange(item, pos):\n                    narrow = True\n                    delete_pos = markDiffPos(item, delete_pos)      \n        if not narrow:\n            delete_pos.pop(0)\n        pos = delete_pos[0] if len(delete_pos) > 0 else None\n    return delete_pos\n                ","start":{"line":0,"ch":0},"end":{"line":22,"ch":15}},{"created":260,"parent":"*.n.0","type":"Module","outputId":0,"outputVer":2,"content":[],"literal":"def inRange(node, pos):\n    if 'start' not in node: \n        return False\n    print(node['start'], node['end'])\n    return node['start']['pos'] <= pos and node['end']['pos'] >= pos\n    \n\ndef markDiffPos(node, delete_pos):\n    pos = delete_pos[0]\n    print(delete_pos, pos)\n    while pos and inRange(node, pos):\n        node['dirty'] = True\n        narrow = False\n        if 'content' in node:\n            for item in node['content']:\n                if inRange(item, pos):\n                    narrow = True\n                    delete_pos = markDiffPos(item, delete_pos)      \n        if not narrow:\n            delete_pos.pop(0)\n        pos = delete_pos[0] if len(delete_pos) > 0 else None\n    return delete_pos\n                ","start":{"line":0,"ch":0},"end":{"line":22,"ch":15}}]},{"vers":[{"created":0,"parent":"n.0.0","type":"Module","outputId":1,"outputVer":"0","content":[],"literal":"# hello","start":{"line":0,"ch":0},"end":{"line":0,"ch":6}},{"created":1,"parent":"n.0.56","type":"Module","outputId":1,"outputVer":0,"content":[],"literal":"# tests","start":{"line":0,"ch":0},"end":{"line":0,"ch":6}},{"created":5,"parent":"n.0.2","type":"Module","outputId":1,"outputVer":0,"content":[],"literal":"'''\nAccepts two sets of code as \n'''","start":{"line":0,"ch":0},"end":{"line":2,"ch":2}},{"created":6,"parent":"n.0.3","type":"Module","outputId":1,"outputVer":0,"content":[],"literal":"'''\nAccepts two sets of code A & B as strings. Parses A & B and then\nattempts to match the diff areas.\n'''","start":{"line":0,"ch":0},"end":{"line":3,"ch":2}},{"created":7,"parent":"n.0.4","type":"Module","outputId":1,"outputVer":0,"content":[],"literal":"'''\nAccepts two sets of code A & B as strings. Parses A & B and \nthen attempts to match the diff areas.\n'''","start":{"line":0,"ch":0},"end":{"line":3,"ch":2}},{"created":13,"parent":"n.0.6","type":"Module","outputId":1,"outputVer":1,"content":[],"literal":"'''\nAccepts two sets of code A & B as strings. Parses A & B and \nthen attempts to match the diff areas.\n'''\nimport lilgit_parser as gigi\n\ngigi.parse(testA)","start":{"line":0,"ch":0},"end":{"line":6,"ch":16}},{"created":14,"parent":"n.0.7","type":"Module","outputId":1,"outputVer":2,"content":[],"literal":"'''\nAccepts two sets of code A & B as strings. Parses A & B and \nthen attempts to match the diff areas.\n'''\nimport lilgit_parser as lilgit\n\nlilgit.parse(testA)","start":{"line":0,"ch":0},"end":{"line":6,"ch":18}},{"created":15,"parent":"n.0.8","type":"Module","outputId":1,"outputVer":3,"content":[],"literal":"'''\nAccepts two sets of code A & B as strings. Parses A & B and \nthen attempts to match the diff areas.\n'''\nimport lilgit_parser as lilgit\n\nA = lilgit.parse(testA)\nB = lilgit.parse(testB)","start":{"line":0,"ch":0},"end":{"line":7,"ch":22}},{"created":18,"parent":"n.0.13","type":"Module","outputId":1,"outputVer":3,"content":[],"literal":"'''\nAccepts two sets of code A & B as strings. Parses A & B and \nthen attempts to match the diff areas.\n'''\n\nA = lilgit.parse(testA)\nB = lilgit.parse(testB)","start":{"line":0,"ch":0},"end":{"line":6,"ch":22}},{"created":30,"parent":"n.0.27","type":"Module","outputId":1,"outputVer":3,"content":[],"literal":"'''\nPass 2 : parse a and b insto ASTs and isolate where \nthe change occured based on Pass 1\n'''\n\nA = lilgit.parse(testA)\nB = lilgit.parse(testB)","start":{"line":0,"ch":0},"end":{"line":6,"ch":22}},{"created":57,"parent":"n.0.32","type":"Module","outputId":1,"outputVer":4,"content":[],"literal":"'''\nPass 2 : parse a and b insto ASTs and isolate where \nthe change occured based on Pass 1\n'''\n\nA = lilgit.parse(testA)\nB = lilgit.parse(testB)\n\nmarkDiffPos(A)","start":{"line":0,"ch":0},"end":{"line":8,"ch":13}},{"created":70,"parent":"n.0.33","type":"Module","outputId":1,"outputVer":6,"content":[],"literal":"'''\nPass 2 : parse a and b insto ASTs and isolate where \nthe change occured based on Pass 1\n'''\n\nA = lilgit.parse(a)\nB = lilgit.parse(b)\n\nB","start":{"line":0,"ch":0},"end":{"line":8,"ch":0}},{"created":71,"parent":"n.0.50","type":"Module","outputId":1,"outputVer":6,"content":[],"literal":"'''\nPass 2 : parse a and b insto ASTs and isolate where \nthe change occured based on Pass 1\n'''\n\nA = lilgit.parse(a)\nB = lilgit.parse(b)\n\nmarkDiffPos(A, delete_pos)","start":{"line":0,"ch":0},"end":{"line":8,"ch":25}},{"created":95,"parent":"n.0.191","type":"Module","outputId":1,"outputVer":9,"content":[],"literal":"'''\nPass 2 : parse a and b insto ASTs and isolate where \nthe change occured based on Pass 1\n'''\n\nA = lilgit.parse(a)\nB = lilgit.parse(b)\n\nprint(A)\n\nmarkDiffPos(A, delete_pos)","start":{"line":0,"ch":0},"end":{"line":10,"ch":25}},{"created":259,"parent":"*.n.0","type":"Module","outputId":1,"outputVer":9,"content":[],"literal":"'''\nPass 2 : parse a and b insto ASTs and isolate where \nthe change occured based on Pass 1\n'''\n\nA = lilgit.parse(a)\nB = lilgit.parse(b)\n\nprint(A)\n\nmarkDiffPos(A, delete_pos)","start":{"line":0,"ch":0},"end":{"line":10,"ch":25}}]},{"vers":[{"created":10,"parent":"n.0.5","type":"Module","outputId":2,"outputVer":"0","content":[],"start":{"line":1,"ch":0},"end":{"line":1,"ch":0}},{"created":11,"parent":"n.0.8","type":"Module","outputId":2,"outputVer":0,"content":[],"literal":"testA = \"print('lol')\"\ntestB = \"print('no')\"","start":{"line":0,"ch":0},"end":{"line":1,"ch":20}},{"created":17,"parent":"n.0.10","type":"Module","outputId":2,"outputVer":0,"content":[],"literal":"import difflib\nimport lilgit_parser as lilgit\n\ntestA = \"print('lol')\"\ntestB = \"print('no')\"","start":{"line":0,"ch":0},"end":{"line":4,"ch":20}},{"created":21,"parent":"n.0.17","type":"Module","outputId":2,"outputVer":0,"content":[],"literal":"import difflib\nimport lilgit_parser as lilgit\n\na = \"print('lol')\"\nb = \"print('no')\"","start":{"line":0,"ch":0},"end":{"line":4,"ch":16}},{"created":35,"parent":"n.0.22","type":"Module","outputId":2,"outputVer":0,"content":[],"literal":"import difflib\nimport lilgit_parser as lilgit\n\na = '''for i in range(0,10):\n    if i % 2 == 0:\n        print(i)'''\nb = '''for i in range(0,10):\n        print(i)'''","start":{"line":0,"ch":0},"end":{"line":7,"ch":18}},{"created":44,"parent":"n.0.23","type":"Module","outputId":2,"outputVer":0,"content":[],"literal":"import difflib\nimport lilgit_parser as lilgit\nimport sys\n\na = '''for i in range(0,10):\n    if i % 2 == 0:\n        print(i)'''\nb = '''for i in range(0,10):\n        print(i)'''","start":{"line":0,"ch":0},"end":{"line":8,"ch":18}},{"created":45,"parent":"n.0.26","type":"Module","outputId":2,"outputVer":0,"content":[],"literal":"import difflib\nimport lilgit_parser as lilgit\n\na = '''for i in range(0,10):\n    if i % 2 == 0:\n        print(i)'''\nb = '''for i in range(0,10):\n        print(i)'''","start":{"line":0,"ch":0},"end":{"line":7,"ch":18}},{"created":53,"parent":"n.0.125","type":"Module","outputId":2,"outputVer":0,"content":[],"literal":"import difflib\nimport lilgit_parser as lilgit\n\n# a is old, b is new\n\na = '''for i in range(0,10):\n    if i % 2 == 0:\n        print(i)'''\nb = '''for i in range(0,10):\n        print(i)'''","start":{"line":0,"ch":0},"end":{"line":9,"ch":18}},{"created":181,"parent":"n.0.194","type":"Module","outputId":2,"outputVer":0,"content":[],"literal":"import difflib\nimport lilgit_parser as lilgit\n\n# a is old, b is new\n\na = '''for i in range(0,10):\n    if i % 2 == 0:\n        print(i)'''\nb = '''for i in range(0,10):\n        print(i + 6)'''","start":{"line":0,"ch":0},"end":{"line":9,"ch":22}},{"created":264,"parent":"n.0.230","type":"Module","outputId":2,"outputVer":0,"content":[],"literal":"import difflib\nimport lilgit_parser as lilgit\n\n# a is old, b is new\n\na = '''for i in range(0,10):\n    if i % 2 == 0:\n        print(i + 9)'''\nb = '''for i in range(0,10):\n        print(i + 6)'''","start":{"line":0,"ch":0},"end":{"line":9,"ch":22}}]},{"vers":[{"created":20,"parent":"n.0.55","type":"Module","outputId":3,"outputVer":"0","content":[],"start":{"line":1,"ch":0},"end":{"line":1,"ch":0}},{"created":101,"parent":"n.0.193","type":"Module","outputId":3,"outputVer":1,"content":[],"literal":"A","start":{"line":0,"ch":0},"end":{"line":0,"ch":0}},{"created":261,"parent":"*.n.0","type":"Module","outputId":3,"outputVer":1,"content":[],"literal":"A","start":{"line":0,"ch":0},"end":{"line":0,"ch":0}}]},{"vers":[{"created":25,"parent":"n.0.12","type":"Module","outputId":4,"outputVer":"0","content":[],"start":{"line":1,"ch":0},"end":{"line":1,"ch":0}},{"created":26,"parent":"n.0.21","type":"Module","outputId":4,"outputVer":1,"content":[],"literal":"'''\nPass 1 : narrow where the change occured\n'''\n# quick diff on the strings\nfor i,s in enumerate(difflib.ndiff(a, b)):\n    if s[0]==' ': continue\n    elif s[0]=='-':\n        print(u'Delete \"{}\" from position {}'.format(s[-1],i))\n    elif s[0]=='+':\n        print(u'Add \"{}\" to position {}'.format(s[-1],i)) ","start":{"line":0,"ch":0},"end":{"line":9,"ch":57}},{"created":43,"parent":"n.0.22","type":"Module","outputId":4,"outputVer":2,"content":[],"literal":"'''\nPass 1 : narrow where the change occured\n'''\n# quick diff on the strings\nfirst_pos = 0\nfor i,s in enumerate(difflib.ndiff(a, b)):\n    if s[0]==' ': continue\n    elif s[0]=='-':\n        print(u'Delete \"{}\" from position {}'.format(s[-1],i))\n    elif s[0]=='+':\n        print(u'Add \"{}\" to position {}'.format(s[-1],i)) \n    if ","start":{"line":0,"ch":0},"end":{"line":11,"ch":6}},{"created":48,"parent":"n.0.25","type":"Module","outputId":4,"outputVer":2,"content":[],"literal":"'''\nPass 1 : narrow where the change occured\n'''\n# quick diff on the strings\ndiff_pos = []\nfor i,s in enumerate(difflib.ndiff(a, b)):\n    if s[0]==' ': continue\n    elif s[0]=='-':\n        print(u'Delete \"{}\" from position {}'.format(s[-1],i))\n    elif s[0]=='+':\n        print(u'Add \"{}\" to position {}'.format(s[-1],i)) \n    diff_pos.append(i)","start":{"line":0,"ch":0},"end":{"line":11,"ch":21}},{"created":49,"parent":"n.0.27","type":"Module","outputId":4,"outputVer":3,"content":[],"literal":"'''\nPass 1 : narrow where the change occured\n'''\n# quick diff on the strings\ndiff_pos = []\nfor i,s in enumerate(difflib.ndiff(a, b)):\n    if s[0]==' ': continue\n    elif s[0]=='-':\n        print(u'Delete \"{}\" from position {}'.format(s[-1],i))\n    elif s[0]=='+':\n        print(u'Add \"{}\" to position {}'.format(s[-1],i)) \n    diff_pos.append(i)\n\ndiff_pos","start":{"line":0,"ch":0},"end":{"line":13,"ch":7}},{"created":54,"parent":"n.0.190","type":"Module","outputId":4,"outputVer":4,"content":[],"literal":"'''\nPass 1 : narrow where the change occured\n'''\n# quick diff on the strings\ndelete_pos = []\nadd_pos = []\nfor i,s in enumerate(difflib.ndiff(a, b)):\n    if s[0]==' ': continue\n    elif s[0]=='-':\n        print(u'Delete \"{}\" from position {}'.format(s[-1],i))\n        delete_pos.append(i)\n    elif s[0]=='+':\n        print(u'Add \"{}\" to position {}'.format(s[-1],i)) \n        add_pos.append(i)","start":{"line":0,"ch":0},"end":{"line":13,"ch":24}},{"created":258,"parent":"*.n.0","type":"Module","outputId":4,"outputVer":4,"content":[],"literal":"'''\nPass 1 : narrow where the change occured\n'''\n# quick diff on the strings\ndelete_pos = []\nadd_pos = []\nfor i,s in enumerate(difflib.ndiff(a, b)):\n    if s[0]==' ': continue\n    elif s[0]=='-':\n        print(u'Delete \"{}\" from position {}'.format(s[-1],i))\n        delete_pos.append(i)\n    elif s[0]=='+':\n        print(u'Add \"{}\" to position {}'.format(s[-1],i)) \n        add_pos.append(i)","start":{"line":0,"ch":0},"end":{"line":13,"ch":24}}]},{"vers":[{"created":31,"parent":"n.0.15","type":"Module","outputId":5,"outputVer":"0","content":[],"start":{"line":1,"ch":0},"end":{"line":1,"ch":0}},{"created":33,"parent":"n.0.16","type":"Module","outputId":5,"outputVer":1,"content":[],"literal":"for i in range(0,10):\n    if i % 2 == 0:\n        print(i) ","start":{"line":0,"ch":0},"end":{"line":2,"ch":16}},{"created":34,"parent":"n.0.18","type":"Module","outputId":5,"outputVer":1,"content":[],"literal":"for i in range(0,10):\n    if i % 2 == 0:\n        print(i)","start":{"line":0,"ch":0},"end":{"line":2,"ch":15}},{"created":38,"parent":"*.n.0","type":"Module","outputId":5,"outputVer":1,"content":[],"literal":"for i in range(0,10):\n    if i % 2 == 0:\n        print(i)","start":{"line":0,"ch":0},"end":{"line":2,"ch":15}}]},{"vers":[{"created":41,"parent":"n.0.20","type":"Module","outputId":6,"outputVer":"0","content":[],"start":{"line":1,"ch":0},"end":{"line":1,"ch":0}},{"created":42,"parent":"n.0.23","type":"Module","outputId":6,"outputVer":0,"content":[],"literal":"def posToLn","start":{"line":0,"ch":0},"end":{"line":0,"ch":10}},{"created":46,"parent":"n.0.24","type":"Module","outputId":6,"outputVer":0,"content":[],"literal":"def posToLn","start":{"line":0,"ch":0},"end":{"line":0,"ch":10}}]},{"vers":[{"created":100,"parent":"n.0.194","type":"Module","outputId":7,"outputVer":"0","content":[],"start":{"line":1,"ch":0},"end":{"line":1,"ch":0}},{"created":271,"parent":"n.0.197","type":"Module","outputId":7,"outputVer":1,"content":[],"literal":"'''\n'''","start":{"line":0,"ch":0},"end":{"line":1,"ch":2}},{"created":273,"parent":"n.0.198","type":"Module","outputId":7,"outputVer":1,"content":[],"literal":"'''\nAssume all \n'''","start":{"line":0,"ch":0},"end":{"line":2,"ch":2}},{"created":274,"parent":"n.0.199","type":"Module","outputId":7,"outputVer":1,"content":[],"literal":"'''\nAssume all new tokens in B are new. Try to match them.\n'''","start":{"line":0,"ch":0},"end":{"line":2,"ch":2}},{"created":275,"parent":"n.0.200","type":"Module","outputId":7,"outputVer":1,"content":[],"literal":"'''\nAssume all new tokens in B are new. Try to match them.\n'''\nfor name in unmatched_b:\n    new_node = dic_b[name]\n    tok = new_node['syntok'] if 'syntok' in\n    print(difflib.get_close_matches())","start":{"line":0,"ch":0},"end":{"line":6,"ch":37}},{"created":280,"parent":"n.0.203","type":"Module","outputId":7,"outputVer":2,"content":[],"literal":"'''\nAssume all new tokens in B are new. Try to match them.\n'''\nfor i, new_tok in enumerate(tokens_b):\n    print(difflib.get_close_matches(new_tok, tokens_a))","start":{"line":0,"ch":0},"end":{"line":4,"ch":54}},{"created":281,"parent":"n.0.204","type":"Module","outputId":7,"outputVer":3,"content":[],"literal":"'''\nAssume all new tokens in B are new. Try to match them.\n'''\nfor i, new_tok in enumerate(tokens_b):\n    print(new_tok)\n    print(difflib.get_close_matches(new_tok, tokens_a))","start":{"line":0,"ch":0},"end":{"line":5,"ch":54}},{"created":282,"parent":"n.0.209","type":"Module","outputId":7,"outputVer":4,"content":[],"literal":"'''\nAssume all new tokens in B are new. Try to match them.\n'''\nfor i, new_tok in enumerate(tokens_b):\n    print(new_tok, tokens_a)\n    print(difflib.get_close_matches(new_tok, tokens_a))","start":{"line":0,"ch":0},"end":{"line":5,"ch":54}},{"created":288,"parent":"n.0.230","type":"Module","outputId":7,"outputVer":5,"content":[],"literal":"'''\nAssume all new tokens in B are new. Try to match them.\n'''\n","start":{"line":0,"ch":0},"end":{"line":3,"ch":-1}}]},{"vers":[{"created":125,"parent":"n.0.75","type":"Module","outputId":8,"outputVer":"0","content":[],"start":{"line":1,"ch":0},"end":{"line":1,"ch":0}},{"created":126,"parent":"n.0.79","type":"Module","outputId":8,"outputVer":0,"content":[],"literal":"A = lilgit.parse(a)\nB = lilgit.parse(b)\n\ndic_a = {}\ndic_b = {}","start":{"line":0,"ch":0},"end":{"line":4,"ch":9}},{"created":131,"parent":"n.0.80","type":"Module","outputId":8,"outputVer":1,"content":[],"literal":"A = lilgit.parse(a)\nB = lilgit.parse(b)\n\ndic_a = {}\ndic_b = {}\n\nnodeToDict(A, dic_a, \"a.\")\ndic_a","start":{"line":0,"ch":0},"end":{"line":7,"ch":4}},{"created":132,"parent":"n.0.81","type":"Module","outputId":8,"outputVer":2,"content":[],"literal":"A = lilgit.parse(a)\nB = lilgit.parse(b)\n\ndic_a = {}\ndic_b = {}\n\nnodeToDict(A, dic_a, \"a.\")\nnodeToDict(B, dic_b, \"b.\")","start":{"line":0,"ch":0},"end":{"line":7,"ch":25}},{"created":133,"parent":"n.0.82","type":"Module","outputId":8,"outputVer":3,"content":[],"literal":"A = lilgit.parse(a)\nB = lilgit.parse(b)\n\ndic_a = {}\ndic_b = {}\n\nnodeToDict(A, dic_a, \"a.\")\nnodeToDict(B, dic_b, \"b.\")\ndic_b","start":{"line":0,"ch":0},"end":{"line":8,"ch":4}},{"created":134,"parent":"n.0.83","type":"Module","outputId":8,"outputVer":4,"content":[],"literal":"A = lilgit.parse(a)\nB = lilgit.parse(b)\n\ndic_a = {}\ndic_b = {}\n\nnodeToDict(A, dic_a, \"a.\")\nnodeToDict(B, dic_b, \"b.\")","start":{"line":0,"ch":0},"end":{"line":7,"ch":25}},{"created":135,"parent":"n.0.84","type":"Module","outputId":8,"outputVer":4,"content":[],"literal":"\nA = lilgit.parse(a)\nB = lilgit.parse(b)\n\ndic_a = {}\ndic_b = {}\n\nnodeToDict(A, dic_a, \"a.\")\nnodeToDict(B, dic_b, \"b.\")","start":{"line":0,"ch":0},"end":{"line":8,"ch":25}},{"created":136,"parent":"n.0.85","type":"Module","outputId":8,"outputVer":5,"content":[],"literal":"# AST parse from string\nA = lilgit.parse(a)\nB = lilgit.parse(b)\n\n# dictionary of nodes from AST\ndic_a = {}\ndic_b = {}\nnodeToDict(A, dic_a, \"a.\")\nnodeToDict(B, dic_b, \"b.\")","start":{"line":0,"ch":0},"end":{"line":8,"ch":25}},{"created":138,"parent":"n.0.86","type":"Module","outputId":8,"outputVer":6,"content":[],"literal":"# AST parse from string\nA = lilgit.parse(a)\nB = lilgit.parse(b)\n\n# dictionary of nodes from AST\ndic_a = {}\ndic_b = {}\nnodeToDict(A, dic_a, \"a.\")\nnodeToDict(B, dic_b, \"b.\")\ndic_b.keys","start":{"line":0,"ch":0},"end":{"line":9,"ch":9}},{"created":139,"parent":"n.0.87","type":"Module","outputId":8,"outputVer":7,"content":[],"literal":"# AST parse from string\nA = lilgit.parse(a)\nB = lilgit.parse(b)\n\n# dictionary of nodes from AST\ndic_a = {}\ndic_b = {}\nnodeToDict(A, dic_a, \"a.\")\nnodeToDict(B, dic_b, \"b.\")\ndic_b.keys()","start":{"line":0,"ch":0},"end":{"line":9,"ch":11}},{"created":141,"parent":"n.0.88","type":"Module","outputId":8,"outputVer":7,"content":[],"literal":"# AST parse from string\nA = lilgit.parse(a)\nB = lilgit.parse(b)\n\n# dictionary of nodes from AST\ndic_a = {}\ndic_b = {}\nnodeToDict(A, dic_a, \"a.\")\nnodeToDict(B, dic_b, \"b.\")\n\n# identify literals\nliteral_a = [k if 'literal' in dic_a[k]dic_a]","start":{"line":0,"ch":0},"end":{"line":11,"ch":44}},{"created":142,"parent":"n.0.103","type":"Module","outputId":8,"outputVer":8,"content":[],"literal":"# AST parse from string\nA = lilgit.parse(a)\nB = lilgit.parse(b)\n\n# dictionary of nodes from AST\ndic_a = {}\ndic_b = {}\nnodeToDict(A, dic_a, \"a.\")\nnodeToDict(B, dic_b, \"b.\")","start":{"line":0,"ch":0},"end":{"line":8,"ch":25}},{"created":157,"parent":"n.0.109","type":"Module","outputId":8,"outputVer":9,"content":[],"literal":"# AST parse from string\nA = lilgit.parse(a)\nB = lilgit.parse(b)\n\n# dictionary of nodes from AST\ndic_a = {}\ndic_b = {}\nnodeToDict(A, dic_a, \"a.\")\nnodeToDict(B, dic_b, \"b.\")\nprint(dic_b)","start":{"line":0,"ch":0},"end":{"line":9,"ch":11}},{"created":163,"parent":"n.0.217","type":"Module","outputId":8,"outputVer":10,"content":[],"literal":"# AST parse from string\nA = lilgit.parse(a)\nB = lilgit.parse(b)\n\n# dictionary of nodes from AST\ndic_a = {}\ndic_b = {}\nnodeToDict(A, dic_a, \"a.\")\nnodeToDict(B, dic_b, \"b.\")","start":{"line":0,"ch":0},"end":{"line":8,"ch":25}},{"created":298,"parent":"n.0.219","type":"Module","outputId":8,"outputVer":13,"content":[],"literal":"# AST parse from string\nA = lilgit.parse(a)\nB = lilgit.parse(b)\n\n# dictionary of nodes from AST\ndic_a = {}\ndic_b = {}\nnodeToDict(A, dic_a, \"a.\")\nnodeToDict(B, dic_b, \"b.\")\ndic_b","start":{"line":0,"ch":0},"end":{"line":9,"ch":4}},{"created":301,"parent":"n.0.230","type":"Module","outputId":8,"outputVer":15,"content":[],"literal":"# AST parse from string\nA = lilgit.parse(a)\nB = lilgit.parse(b)\n\n# dictionary of nodes from AST\ndic_a = {}\ndic_b = {}\nnodeToDict(A, dic_a, \"a.\")\nnodeToDict(B, dic_b, \"b.\")","start":{"line":0,"ch":0},"end":{"line":8,"ch":25}}]},{"vers":[{"created":127,"parent":"n.0.77","type":"Module","outputId":9,"outputVer":"0","content":[],"start":{"line":1,"ch":0},"end":{"line":1,"ch":0}},{"created":128,"parent":"n.0.78","type":"Module","outputId":9,"outputVer":0,"content":[],"literal":"def nodeToDict(node, dic, prefix = \"\"):\n    name = \"\"\n    if 'name' in node:\n        name = node['name']\n    else: name = prefix","start":{"line":0,"ch":0},"end":{"line":4,"ch":22}},{"created":129,"parent":"n.0.79","type":"Module","outputId":9,"outputVer":0,"content":[],"literal":"def nodeToDict(node, dic, prefix = \"\"):\n    name = \"\"\n    if 'name' in node:\n        name = node['name']\n    else: name = prefix + str(len(dic))\n    \n    dic[name] = node\n    if 'content' in node:\n        node['content'] = list(map(lambda x: nodeToDict(x, dic, prefix), node['content']))\n    \n    return \n    \n    ","start":{"line":0,"ch":0},"end":{"line":12,"ch":3}},{"created":130,"parent":"n.0.218","type":"Module","outputId":9,"outputVer":0,"content":[],"literal":"def nodeToDict(node, dic, prefix = \"\"):\n    name = \"\"\n    if 'name' in node:\n        name = node['name']\n    else: name = prefix + str(len(dic))\n    \n    dic[name] = node\n    if 'content' in node:\n        node['content'] = list(map(lambda x: nodeToDict(x, dic, prefix), node['content']))\n    \n    return name","start":{"line":0,"ch":0},"end":{"line":10,"ch":14}},{"created":299,"parent":"n.0.230","type":"Module","outputId":9,"outputVer":0,"content":[],"literal":"def nodeToDict(node, dic, prefix = \"\", parent = None):\n    name = \"\"\n    if 'name' in node:\n        name = node['name']\n    else: name = prefix + str(len(dic))\n    \n    dic[name] = node\n    if parent:\n        node['parent'] = parent\n    if 'content' in node:\n        node['content'] = list(map(lambda x: nodeToDict(x, dic, prefix, name), node['content']))\n    \n    return name","start":{"line":0,"ch":0},"end":{"line":12,"ch":14}}]},{"vers":[{"created":143,"parent":"n.0.90","type":"Module","outputId":10,"outputVer":"0","content":[],"start":{"line":1,"ch":0},"end":{"line":1,"ch":0}},{"created":144,"parent":"n.0.91","type":"Module","outputId":10,"outputVer":1,"content":[],"literal":"# identify literals\nliteral_a = []\nfor key in dic_a:\n    if 'literal' in dic_a[key]:\n        literal_a.append(key)\nliteral_a ","start":{"line":0,"ch":0},"end":{"line":5,"ch":9}},{"created":145,"parent":"n.0.92","type":"Module","outputId":10,"outputVer":1,"content":[],"literal":"# identify literals\nliteral_a = []\nfor key in dic_a:\n    if 'literal' in dic_a[key]:\n        literal_a.append(key)\n        \nliteral_b = []\nfor key in dic_a:\n    if 'literal' in dic_a[key]:\n        literal_a.append(key)","start":{"line":0,"ch":0},"end":{"line":9,"ch":28}},{"created":146,"parent":"n.0.93","type":"Module","outputId":10,"outputVer":2,"content":[],"literal":"# identify literals\nliteral_a = []\nfor key in dic_a:\n    if 'literal' in dic_a[key]:\n        literal_a.append(key)\n        \nliteral_b = []\nfor key in dic_b:\n    if 'literal' in dic_b[key]:\n        literal_b.append(key)\n\nprint(dic_b[k]['literal'] for key in dic_b)","start":{"line":0,"ch":0},"end":{"line":11,"ch":42}},{"created":147,"parent":"n.0.94","type":"Module","outputId":10,"outputVer":3,"content":[],"literal":"# identify literals\nliteral_a = []\nfor key in dic_a:\n    if 'literal' in dic_a[key]:\n        literal_a.append(key)\n        \nliteral_b = []\nfor key in dic_b:\n    if 'literal' in dic_b[key]:\n        literal_b.append(key)\n\nprint(dic_b[k]['literal'] for key in literal_b)","start":{"line":0,"ch":0},"end":{"line":11,"ch":46}},{"created":148,"parent":"n.0.95","type":"Module","outputId":10,"outputVer":4,"content":[],"literal":"# identify literals\nliteral_a = []\nfor key in dic_a:\n    if 'literal' in dic_a[key]:\n        literal_a.append(key)\n        \nliteral_b = []\nfor key in dic_b:\n    if 'literal' in dic_b[key]:\n        literal_b.append(key)\n\nprint([dic_b[k]['literal'] for k in literal_b])","start":{"line":0,"ch":0},"end":{"line":11,"ch":46}},{"created":149,"parent":"n.0.96","type":"Module","outputId":10,"outputVer":5,"content":[],"literal":"# identify literals\nliteral_a = []\nfor key in dic_a:\n    if 'literal' in dic_a[key]:\n        literal_a.append(key)\n        \nliteral_b = []\nfor key in dic_b:\n    if 'literal' in dic_b[key]:\n        print(dic_b[key])\n        literal_b.append(key)\n\nprint([dic_b[k]['literal'] for k in literal_b])","start":{"line":0,"ch":0},"end":{"line":12,"ch":46}},{"created":150,"parent":"n.0.97","type":"Module","outputId":10,"outputVer":6,"content":[],"literal":"# identify literals\nliteral_a = []\nfor key in dic_a:\n    if 'literal' in dic_a[key]:\n        literal_a.append(key)\n        \nliteral_b = []\nfor key in dic_b:\n    if 'literal' in dic_b[key] and dic_b[key]['literal']:\n        print(dic_b[key])\n        literal_b.append(key)\n\nprint([dic_b[k]['literal'] for k in literal_b])","start":{"line":0,"ch":0},"end":{"line":12,"ch":46}},{"created":151,"parent":"n.0.101","type":"Module","outputId":10,"outputVer":7,"content":[],"literal":"# identify literals\nliteral_a = []\nfor key in dic_a:\n    if 'literal' in dic_a[key] and dic_a[key]['literal']:\n        literal_a.append(key)\n        \nliteral_b = []\nfor key in dic_b:\n    if 'literal' in dic_b[key] and dic_b[key]['literal']:\n        print(dic_b[key])\n        literal_b.append(key)\n\nprint([dic_b[k]['literal'] for k in literal_b])","start":{"line":0,"ch":0},"end":{"line":12,"ch":46}},{"created":155,"parent":"n.0.102","type":"Module","outputId":10,"outputVer":8,"content":[],"literal":"# identify literals\nliteral_a = []\nfor key in dic_a:\n    if 'literal' in dic_a[key] and dic_a[key]['literal']:\n        literal_a.append(key)\n        \nliteral_b = []\nfor key in dic_b:\n    if 'literal' in dic_b[key] and dic_b[key]['literal']:\n        print(dic_b[key])\n        literal_b.append(key)\n    elif 'syntok' in dic_b[key]:\n        literal_b.append(key)\n        \nprint([dic_b[k]['literal'] for k in literal_b])","start":{"line":0,"ch":0},"end":{"line":14,"ch":46}},{"created":156,"parent":"n.0.104","type":"Module","outputId":10,"outputVer":9,"content":[],"literal":"# identify literals\nliteral_a = []\nfor key in dic_a:\n    if 'literal' in dic_a[key] and dic_a[key]['literal']:\n        literal_a.append(key)\n        \nliteral_b = []\nfor key in dic_b:\n    if 'literal' in dic_b[key] and dic_b[key]['literal']:\n        print(dic_b[key])\n        literal_b.append(key)\n    elif 'syntok' in dic_b[key]:\n        literal_b.append(key)\n        \n","start":{"line":0,"ch":0},"end":{"line":14,"ch":-1}},{"created":158,"parent":"n.0.105","type":"Module","outputId":10,"outputVer":10,"content":[],"literal":"# identify literals\nliteral_a = []\nfor key in dic_a:\n    if 'literal' in dic_a[key] and dic_a[key]['literal']:\n        literal_a.append(key)\n        \nliteral_b = []\nfor key in dic_b:\n    if 'literal' in dic_b[key] and dic_b[key]['literal']:\n        print(dic_b[key])\n        literal_b.append(key)\n    elif 'syntok' in dic_b[key]:\n        literal_b.append(key)\n        \nprint(literal_b)","start":{"line":0,"ch":0},"end":{"line":14,"ch":15}},{"created":159,"parent":"n.0.106","type":"Module","outputId":10,"outputVer":10,"content":[],"literal":"# identify literals\nliteral_a = []\nfor key in dic_a:\n    if 'literal' in dic_a[key] and dic_a[key]['literal']:\n        literal_a.append(key)\n        \nliteral_b = []\nfor key in dic_b:\n    if 'literal' in dic_b[key] and dic_b[key]['literal']:\n        literal_b.append(key)\n    elif 'syntok' in dic_b[key]:\n        literal_b.append(key)\n        \ndef printLiterals(lst, dic):\n    for name in lst:\n        item = dic['name']\n        if 'literal' in item: print(item['literal'])\n        else: print(item['syntok'])\n\n            ","start":{"line":0,"ch":0},"end":{"line":19,"ch":11}},{"created":160,"parent":"n.0.107","type":"Module","outputId":10,"outputVer":11,"content":[],"literal":"# identify literals\nliteral_a = []\nfor key in dic_a:\n    if 'literal' in dic_a[key] and dic_a[key]['literal']:\n        literal_a.append(key)\n        \nliteral_b = []\nfor key in dic_b:\n    if 'literal' in dic_b[key] and dic_b[key]['literal']:\n        literal_b.append(key)\n    elif 'syntok' in dic_b[key]:\n        literal_b.append(key)\n        \ndef printLiterals(lst, dic):\n    for name in lst:\n        item = dic[name]\n        if 'literal' in item: print(item['literal'])\n        else: print(item['syntok'])\n\nprintLiterals(literal_b, dic_b)          ","start":{"line":0,"ch":0},"end":{"line":19,"ch":40}},{"created":161,"parent":"n.0.108","type":"Module","outputId":10,"outputVer":12,"content":[],"literal":"# identify literals\nliteral_a = []\nfor key in dic_a:\n    if 'literal' in dic_a[key] and dic_a[key]['literal']:\n        literal_a.append(key)\n        \nliteral_b = []\nfor key in dic_b:\n    if 'literal' in dic_b[key] and dic_b[key]['literal']:\n        literal_b.append(key)\n    elif 'syntok' in dic_b[key]:\n        literal_b.append(key)\n        \ndef printLiterals(lst, dic):\n    content = ''\n    for name in lst:\n        item = dic[name]\n        if 'literal' in item: content += item['literal']\n        else: content += item['syntok']\n    print(content)\n    \nprintLiterals(literal_b, dic_b)          ","start":{"line":0,"ch":0},"end":{"line":21,"ch":40}},{"created":162,"parent":"n.0.110","type":"Module","outputId":10,"outputVer":12,"content":[],"literal":"# identify literals\nliteral_a = []\nliteral_b = []\n\ndef listLiterals(lst, dic):\n    for key in dic:\n        if 'literal' in dic[key] and dic[key]['literal']:\n            lst.append(key)\n        elif 'syntok' in dic[key]:\n            lst.append(key)\n        \ndef printLiterals(lst, dic):\n    content = ''\n    for name in lst:\n        item = dic[name]\n        if 'literal' in item: content += item['literal']\n        else: content += item['syntok']\n    print(content)\n    \nlistLiterals(literal_a, )\nprintLiterals(literal_b, dic_b)          ","start":{"line":0,"ch":0},"end":{"line":20,"ch":40}},{"created":164,"parent":"n.0.115","type":"Module","outputId":10,"outputVer":13,"content":[],"literal":"# identify literals\nliteral_a = []\nliteral_b = []\n\ndef listLiterals(lst, dic):\n    for key in dic:\n        if 'literal' in dic[key] and dic[key]['literal']:\n            lst.append(key)\n        elif 'syntok' in dic[key]:\n            lst.append(key)\n        \ndef printLiterals(lst, dic):\n    content = ''\n    for name in lst:\n        item = dic[name]\n        if 'literal' in item: content += item['literal']\n        else: content += item['syntok']\n    print(content)\n    \nlistLiterals(literal_a, dic_a)\nlistLiterals(literal_b, dic_b)\nprintLiterals(literal_a, dic_a)     \nprint(\"\\n############################\\n\")\nprintLiterals(literal_b, dic_b)      ","start":{"line":0,"ch":0},"end":{"line":23,"ch":36}},{"created":170,"parent":"n.0.116","type":"Module","outputId":10,"outputVer":14,"content":[],"literal":"# identify literals\nliteral_a = []\ntokens_a = []\nliteral_b = []\ntokens_b = []\n\ndef listLiterals(lst, dic, tok_list):\n    for key in dic:\n        if 'literal' in dic[key] and dic[key]['literal']:\n            lst.append(key)\n            tok_list.append(dic[key]['literal'])\n        elif 'syntok' in dic[key]:\n            lst.append(key)\n            tok_list.append(dic[key]['syntok'])\n        \ndef printLiterals(lst, dic):\n    content = ''\n    for name in lst:\n        item = dic[name]\n        if 'literal' in item: content += item['literal']\n        else: content += item['syntok']\n    print(content)\n    \nlistLiterals(literal_a, dic_a, tokens_a)\nlistLiterals(literal_b, dic_b, tokens_b)\nprintLiterals(literal_a, dic_a)     \nprint(\"\\n############################\\n\")\nprintLiterals(literal_b, dic_b)      \ntokens_a","start":{"line":0,"ch":0},"end":{"line":28,"ch":7}},{"created":171,"parent":"n.0.230","type":"Module","outputId":10,"outputVer":15,"content":[],"literal":"# identify literals\nliteral_a = []\ntokens_a = []\nliteral_b = []\ntokens_b = []\n\ndef listLiterals(lst, dic, tok_list):\n    for key in dic:\n        if 'literal' in dic[key] and dic[key]['literal']:\n            lst.append(key)\n            tok_list.append(dic[key]['literal'])\n        elif 'syntok' in dic[key]:\n            lst.append(key)\n            tok_list.append(dic[key]['syntok'])\n        \ndef printLiterals(lst, dic):\n    content = ''\n    for name in lst:\n        item = dic[name]\n        if 'literal' in item: content += item['literal']\n        else: content += item['syntok']\n    print(content)\n    \nlistLiterals(literal_a, dic_a, tokens_a)\nlistLiterals(literal_b, dic_b, tokens_b)\nprintLiterals(literal_a, dic_a)     \nprint(\"\\n############################\\n\")\nprintLiterals(literal_b, dic_b)      ","start":{"line":0,"ch":0},"end":{"line":27,"ch":36}}]},{"vers":[{"created":152,"parent":"n.0.99","type":"Module","outputId":11,"outputVer":"0","content":[],"start":{"line":1,"ch":0},"end":{"line":1,"ch":0}},{"created":153,"parent":"n.0.100","type":"Module","outputId":11,"outputVer":1,"content":[],"literal":"print(dic_b)","start":{"line":0,"ch":0},"end":{"line":0,"ch":11}},{"created":154,"parent":"*.n.0","type":"Module","outputId":11,"outputVer":1,"content":[],"literal":"print(dic_b)","start":{"line":0,"ch":0},"end":{"line":0,"ch":11}}]},{"vers":[{"created":165,"parent":"n.0.112","type":"Module","outputId":12,"outputVer":"0","content":[],"start":{"line":1,"ch":0},"end":{"line":1,"ch":0}}]},{"vers":[{"created":172,"parent":"n.0.118","type":"Module","outputId":13,"outputVer":"0","content":[],"start":{"line":1,"ch":0},"end":{"line":1,"ch":0}},{"created":173,"parent":"n.0.119","type":"Module","outputId":13,"outputVer":0,"content":[],"literal":"'''\nPass 1 : narrow where the change occured\n'''","start":{"line":0,"ch":0},"end":{"line":2,"ch":2}},{"created":174,"parent":"n.0.120","type":"Module","outputId":13,"outputVer":1,"content":[],"literal":"'''\nPass 1 : narrow where the change occured. Diff tok_a with tok_b\n'''\ndifflib.unified_diff(tokens_a, tokens_b)","start":{"line":0,"ch":0},"end":{"line":3,"ch":39}},{"created":176,"parent":"n.0.121","type":"Module","outputId":13,"outputVer":2,"content":[],"literal":"'''\nPass 1 : narrow where the change occured. Diff tok_a with tok_b\n'''\nfor i,s in enumerate(difflib.unified_diff(tokens_a, tokens_b)):\n    if s[0]==' ': continue\n    elif s[0]=='-':\n        print(u'Delete \"{}\" from position {}'.format(s[-1],i))\n    elif s[0]=='+':\n        print(u'Add \"{}\" to position {}'.format(s[-1],i)) ","start":{"line":0,"ch":0},"end":{"line":8,"ch":57}},{"created":177,"parent":"n.0.122","type":"Module","outputId":13,"outputVer":3,"content":[],"literal":"'''\nPass 1 : narrow where the change occured. Diff tok_a with tok_b\n'''\nfor i,s in enumerate(difflib.context_diff(tokens_a, tokens_b)):\n    if s[0]==' ': continue\n    elif s[0]=='-':\n        print(u'Delete \"{}\" from position {}'.format(s[-1],i))\n    elif s[0]=='+':\n        print(u'Add \"{}\" to position {}'.format(s[-1],i)) ","start":{"line":0,"ch":0},"end":{"line":8,"ch":57}},{"created":178,"parent":"n.0.123","type":"Module","outputId":13,"outputVer":4,"content":[],"literal":"'''\nPass 1 : narrow where the change occured. Diff tok_a with tok_b\n'''\nfor i,s in enumerate(difflib.unified_diff(tokens_a, tokens_b)):\n    if s[0]==' ': continue\n    elif s[0]=='-':\n        print(u'Delete \"{}\" from position {}'.format(s[-1],i))\n    elif s[0]=='+':\n        print(u'Add \"{}\" to position {}'.format(s[-1],i)) ","start":{"line":0,"ch":0},"end":{"line":8,"ch":57}},{"created":179,"parent":"n.0.124","type":"Module","outputId":13,"outputVer":4,"content":[],"literal":"'''\nPass 1 : narrow where the change occured. Diff tok_a with tok_b\n'''\nfor i,s in enumerate(difflib.unified_diff(tokens_a, tokens_b)):\n    if s[0]==' ': continue\n    elif s[0]=='-':\n        print(u'Delete \"{}\" from position {}'.format(s[-1],i))\n    elif s[0]=='+':\n        print(u'Add \"{}\" to position {}'.format(s[-1],i)) \n","start":{"line":0,"ch":0},"end":{"line":9,"ch":-1}},{"created":180,"parent":"n.0.126","type":"Module","outputId":13,"outputVer":5,"content":[],"literal":"'''\nPass 1 : narrow where the change occured. Diff tok_a with tok_b\n'''\ndiff = difflib.unified_diff(tokens_a, tokens_b)\nprint(''.join(diff), end=\"\")","start":{"line":0,"ch":0},"end":{"line":4,"ch":27}},{"created":186,"parent":"n.0.127","type":"Module","outputId":13,"outputVer":7,"content":[],"literal":"'''\nPass 1 : narrow where the change occured. Diff tok_a with tok_b\n'''\ndiff = difflib.context_diff(tokens_a, tokens_b)\nprint(''.join(diff), end=\"\")","start":{"line":0,"ch":0},"end":{"line":4,"ch":27}},{"created":188,"parent":"n.0.132","type":"Module","outputId":13,"outputVer":8,"content":[],"literal":"'''\nPass 1 : narrow where the change occured. Diff tok_a with tok_b\n'''\nfor i,s in enumerate(difflib.context_diff(tokens_a, tokens_b)):\n    if s[0]==' ': continue\n    elif s[0]=='-':\n        print(u'Delete \"{}\" from position {}'.format(s[-1],i))\n    elif s[0]=='+':\n        print(u'Add \"{}\" to position {}'.format(s[-1],i)) \n","start":{"line":0,"ch":0},"end":{"line":9,"ch":-1}},{"created":193,"parent":"n.0.133","type":"Module","outputId":13,"outputVer":9,"content":[],"literal":"'''\nPass 1 : narrow where the change occured. Diff tok_a with tok_b\n'''\nfor i,s in enumerate(difflib.context_diff(tokens_a, tokens_b)):\n    if s[0]==' ': continue\n    elif s[0]=='-':\n        print(u'Delete \"{}\" from position {}'.format(s[-1],i))\n    elif s[0]=='+':\n        print(s)\n        print(u'Add \"{}\" to position {}'.format(s[-1],i)) \n","start":{"line":0,"ch":0},"end":{"line":10,"ch":-1}},{"created":194,"parent":"n.0.136","type":"Module","outputId":13,"outputVer":9,"content":[],"literal":"'''\nPass 1 : narrow where the change occured. Diff tok_a with tok_b\n'''\nfor i,s in enumerate(difflib.context_diff(tokens_a, tokens_b)):\n    if s[0]==' ': continue\n    elif s[0]=='-':\n        print(u'Delete \"{}\" from position {}'.format(s[-1],i))\n    elif s[0]=='+':\n        print(u'Add \"{}\" to position {}'.format(s[-1],i)) \n","start":{"line":0,"ch":0},"end":{"line":9,"ch":-1}},{"created":197,"parent":"n.0.137","type":"Module","outputId":13,"outputVer":10,"content":[],"literal":"'''\nPass 1 : narrow where the change occured. Diff tok_a with tok_b\n'''\nfor i,s in enumerate(difflib.unified_diff(tokens_a, tokens_b)):\n    if s[0]==' ': continue\n    elif s[0]=='-':\n        print(u'Delete \"{}\" from position {}'.format(s[-1],i))\n    elif s[0]=='+':\n        print(u'Add \"{}\" to position {}'.format(s[-1],i)) \n","start":{"line":0,"ch":0},"end":{"line":9,"ch":-1}},{"created":198,"parent":"n.0.141","type":"Module","outputId":13,"outputVer":11,"content":[],"literal":"'''\nPass 1 : narrow where the change occured. Diff tok_a with tok_b\n'''\nfor i,s in enumerate(difflib.unified_diff(tokens_a, tokens_b)):\n    if s[0]==' ': continue\n    elif s[0]=='-':\n        print(u'Delete \"{}\" from position {}'.format(s[-1],i))\n    elif s[0]=='+':\n        print(s)\n        print(u'Add \"{}\" to position {}'.format(s[-1],i)) \n","start":{"line":0,"ch":0},"end":{"line":10,"ch":-1}},{"created":204,"parent":"n.0.145","type":"Module","outputId":13,"outputVer":12,"content":[],"literal":"'''\nPass 1 : narrow where the change occured. Diff tok_a with tok_b\n'''\nfor i,s in enumerate(difflib.unified_diff(tokens_a, tokens_b)):\n    if s[0]==' ': continue\n    elif s[0]=='-':\n        print(u'Delete \"{}\" from position {}'.format(s[-1],i))\n    elif s[0]=='+':\n        print(u'Add \"{}\" to position {}'.format(s[-1],i)) \n","start":{"line":0,"ch":0},"end":{"line":9,"ch":-1}},{"created":208,"parent":"n.0.147","type":"Module","outputId":13,"outputVer":13,"content":[],"literal":"'''\nPass 1 : narrow where the change occured. Diff tok_a with tok_b\n'''\nfor i,s in enumerate(difflib.context_diff(tokens_a, tokens_b)):\n    if s[0]==' ': continue\n    elif s[0]=='-':\n        print(u'Delete \"{}\" from position {}'.format(s[-1],i))\n    elif s[0]=='+':\n        print(u'Add \"{}\" to position {}'.format(s[-1],i)) \n","start":{"line":0,"ch":0},"end":{"line":9,"ch":-1}},{"created":211,"parent":"n.0.156","type":"Module","outputId":13,"outputVer":14,"content":[],"literal":"'''\nPass 1 : narrow where the change occured. Diff tok_a with tok_b\n'''\nfor i,s in enumerate(difflib.context_diff(tokens_a, tokens_b)):\n    if s[0]==' ': continue\n    elif s[0]=='-':\n        print(u'Delete \"{}\" from position {}'.format(s,i))\n    elif s[0]=='+':\n        print(u'Add \"{}\" to position {}'.format(s,i)) \n","start":{"line":0,"ch":0},"end":{"line":9,"ch":-1}},{"created":220,"parent":"n.0.157","type":"Module","outputId":13,"outputVer":15,"content":[],"literal":"'''\nPass 1 : narrow where the change occured. Diff tok_a with tok_b\n'''\nfor i,s in enumerate(difflib.context_diff(tokens_a, tokens_b)):\n    print(s, i)\n","start":{"line":0,"ch":0},"end":{"line":5,"ch":-1}},{"created":222,"parent":"n.0.162","type":"Module","outputId":13,"outputVer":16,"content":[],"literal":"'''\nPass 1 : narrow where the change occured. Diff tok_a with tok_b\n'''\nfor i,s in enumerate(difflib.context_diff(tokens_a, tokens_b)):\n    print(s)\n","start":{"line":0,"ch":0},"end":{"line":5,"ch":-1}},{"created":227,"parent":"n.0.163","type":"Module","outputId":13,"outputVer":17,"content":[],"literal":"'''\nPass 1 : narrow where the change occured. Diff tok_a with tok_b\n'''\nimport SequenceMatcher\ns = SequenceMatcher(None, tokens_a, tokens_b)\ns.get_matching_blocks()","start":{"line":0,"ch":0},"end":{"line":5,"ch":22}},{"created":228,"parent":"n.0.176","type":"Module","outputId":13,"outputVer":18,"content":[],"literal":"'''\nPass 1 : narrow where the change occured. Diff tok_a with tok_b\n'''\nfrom difflib import SequenceMatcher\ns = SequenceMatcher(None, tokens_a, tokens_b)\ns.get_matching_blocks()","start":{"line":0,"ch":0},"end":{"line":5,"ch":22}},{"created":242,"parent":"n.0.177","type":"Module","outputId":13,"outputVer":19,"content":[],"literal":"'''\nIdentify matching sequences in tokens a and b\n'''\nfrom difflib import SequenceMatcher\ns = SequenceMatcher(None, tokens_a, tokens_b)\nlist(s.get_matching_blocks())","start":{"line":0,"ch":0},"end":{"line":5,"ch":28}},{"created":243,"parent":"n.0.178","type":"Module","outputId":13,"outputVer":20,"content":[],"literal":"'''\nIdentify matching sequences in tokens a and b\n'''\nfrom difflib import SequenceMatcher\ns = SequenceMatcher(None, tokens_a, tokens_b)\n(s.get_matching_blocks())","start":{"line":0,"ch":0},"end":{"line":5,"ch":24}},{"created":244,"parent":"n.0.179","type":"Module","outputId":13,"outputVer":21,"content":[],"literal":"'''\nIdentify matching sequences in tokens a and b\n'''\nfrom difflib import SequenceMatcher\ns = SequenceMatcher(None, tokens_a, tokens_b)\ns.get_matching_blocks()","start":{"line":0,"ch":0},"end":{"line":5,"ch":22}},{"created":246,"parent":"n.0.180","type":"Module","outputId":13,"outputVer":22,"content":[],"literal":"'''\nIdentify matching sequences in tokens a and b\n'''\nfrom difflib import SequenceMatcher\ns = SequenceMatcher(None, tokens_a, tokens_b)\nmatchList = s.get_matching_blocks()\n\nfor match in matchList:\n    (i, j, n) = match\n    print(i, j, n)","start":{"line":0,"ch":0},"end":{"line":9,"ch":17}},{"created":247,"parent":"n.0.181","type":"Module","outputId":13,"outputVer":22,"content":[],"literal":"'''\nIdentify matching sequences in tokens a and b\n'''\nfrom difflib import SequenceMatcher\ns = SequenceMatcher(None, tokens_a, tokens_b)\nmatchList = s.get_matching_blocks()\n\nfor match in matchList:\n    (i, j, n) = match\n    ","start":{"line":0,"ch":0},"end":{"line":9,"ch":3}},{"created":248,"parent":"n.0.182","type":"Module","outputId":13,"outputVer":23,"content":[],"literal":"'''\nIdentify matching sequences in tokens a and b\n'''\nfrom difflib import SequenceMatcher\ns = SequenceMatcher(None, tokens_a, tokens_b)\nmatchList = s.get_matching_blocks()\n\nfor match in matchList:\n    (a_i, b_i, count) = match\n    for i in range(0, count):\n        name_a = literal_a[i]\n        name_b = literal_b[i]\n        print(name_a, name_b)","start":{"line":0,"ch":0},"end":{"line":12,"ch":28}},{"created":250,"parent":"n.0.183","type":"Module","outputId":13,"outputVer":24,"content":[],"literal":"'''\nIdentify matching sequences in tokens a and b\n'''\nfrom difflib import SequenceMatcher\ns = SequenceMatcher(None, tokens_a, tokens_b)\nmatchList = s.get_matching_blocks()\n\nfor match in matchList:\n    (a_start, b_start, count) = match\n    for i in range(0, count):\n        name_a = literal_a[a_start + i]\n        name_b = literal_b[b_start + i]\n        print(name_a, name_b)","start":{"line":0,"ch":0},"end":{"line":12,"ch":28}},{"created":251,"parent":"n.0.223","type":"Module","outputId":13,"outputVer":25,"content":[],"literal":"'''\nIdentify matching sequences in tokens a and b\n'''\nfrom difflib import SequenceMatcher\ns = SequenceMatcher(None, tokens_a, tokens_b)\nmatchList = s.get_matching_blocks()\n\nfor match in matchList:\n    (a_start, b_start, count) = match\n    for i in range(0, count):\n        name_a = literal_a[a_start + i]\n        name_b = literal_b[b_start + i]\n        node_a = dic_a[name_a]\n        node_b = dic_b[name_b]\n        node_a['match'] = name_b\n        node_b['match'] = name_a","start":{"line":0,"ch":0},"end":{"line":15,"ch":31}},{"created":325,"parent":"n.0.224","type":"Module","outputId":13,"outputVer":25,"content":[],"literal":"'''\nIdentify matching sequences in tokens a and b\n'''\nfrom difflib import SequenceMatcher\ns = SequenceMatcher(None, tokens_a, tokens_b)\nmatchList = s.get_matching_blocks()\n\nfor match in matchList:\n    (a_start, b_start, count) = match\n    for i in range(0, count):\n        name_a = literal_a[a_start + i]\n        name_b = literal_b[b_start + i]\n        node_a = dic_a[name_a]\n        node_b = dic_b[name_b]\n        node_a['match'] = name_b\n        node_b['match'] = name_a\n        \ndic_b","start":{"line":0,"ch":0},"end":{"line":17,"ch":4}},{"created":328,"parent":"n.0.230","type":"Module","outputId":13,"outputVer":27,"content":[],"literal":"'''\nIdentify matching sequences in tokens a and b\n'''\nfrom difflib import SequenceMatcher\ns = SequenceMatcher(None, tokens_a, tokens_b)\nmatchList = s.get_matching_blocks()\n\nfor match in matchList:\n    (a_start, b_start, count) = match\n    for i in range(0, count):\n        name_a = literal_a[a_start + i]\n        name_b = literal_b[b_start + i]\n        node_a = dic_a[name_a]\n        node_b = dic_b[name_b]\n        node_a['match'] = name_b\n        node_b['match'] = name_a","start":{"line":0,"ch":0},"end":{"line":15,"ch":31}}]},{"vers":[{"created":189,"parent":"n.0.129","type":"Module","outputId":14,"outputVer":"0","content":[],"start":{"line":1,"ch":0},"end":{"line":1,"ch":0}},{"created":190,"parent":"n.0.130","type":"Module","outputId":14,"outputVer":1,"content":[],"literal":"print(tokens_a[34])","start":{"line":0,"ch":0},"end":{"line":0,"ch":18}},{"created":191,"parent":"n.0.131","type":"Module","outputId":14,"outputVer":1,"content":[],"literal":"print(tokens_a[35])","start":{"line":0,"ch":0},"end":{"line":0,"ch":18}},{"created":192,"parent":"n.0.134","type":"Module","outputId":14,"outputVer":2,"content":[],"literal":"print(tokens_b)","start":{"line":0,"ch":0},"end":{"line":0,"ch":14}},{"created":195,"parent":"n.0.135","type":"Module","outputId":14,"outputVer":3,"content":[],"literal":"print(tokens_b[4])","start":{"line":0,"ch":0},"end":{"line":0,"ch":17}},{"created":196,"parent":"n.0.137","type":"Module","outputId":14,"outputVer":4,"content":[],"literal":"len(tokens_b)","start":{"line":0,"ch":0},"end":{"line":0,"ch":12}},{"created":200,"parent":"n.0.138","type":"Module","outputId":14,"outputVer":5,"content":[],"literal":"tokens_b[22]","start":{"line":0,"ch":0},"end":{"line":0,"ch":11}},{"created":201,"parent":"n.0.139","type":"Module","outputId":14,"outputVer":6,"content":[],"literal":"tokens_b[20]","start":{"line":0,"ch":0},"end":{"line":0,"ch":11}},{"created":202,"parent":"n.0.140","type":"Module","outputId":14,"outputVer":7,"content":[],"literal":"tokens_b[25]","start":{"line":0,"ch":0},"end":{"line":0,"ch":11}},{"created":203,"parent":"n.0.142","type":"Module","outputId":14,"outputVer":8,"content":[],"literal":"tokens_b[26]","start":{"line":0,"ch":0},"end":{"line":0,"ch":11}},{"created":205,"parent":"n.0.143","type":"Module","outputId":14,"outputVer":9,"content":[],"literal":"tokens_b[6]","start":{"line":0,"ch":0},"end":{"line":0,"ch":10}},{"created":206,"parent":"n.0.144","type":"Module","outputId":14,"outputVer":10,"content":[],"literal":"tokens_b[7]","start":{"line":0,"ch":0},"end":{"line":0,"ch":10}},{"created":207,"parent":"n.0.146","type":"Module","outputId":14,"outputVer":11,"content":[],"literal":"tokens_b[4]","start":{"line":0,"ch":0},"end":{"line":0,"ch":10}},{"created":209,"parent":"n.0.148","type":"Module","outputId":14,"outputVer":12,"content":[],"literal":"tokens_b","start":{"line":0,"ch":0},"end":{"line":0,"ch":7}},{"created":212,"parent":"n.0.149","type":"Module","outputId":14,"outputVer":13,"content":[],"literal":"tokens_b[6]","start":{"line":0,"ch":0},"end":{"line":0,"ch":10}},{"created":213,"parent":"n.0.150","type":"Module","outputId":14,"outputVer":14,"content":[],"literal":"tokens_b[7]","start":{"line":0,"ch":0},"end":{"line":0,"ch":10}},{"created":214,"parent":"n.0.151","type":"Module","outputId":14,"outputVer":15,"content":[],"literal":"tokens_b[8]","start":{"line":0,"ch":0},"end":{"line":0,"ch":10}},{"created":215,"parent":"n.0.152","type":"Module","outputId":14,"outputVer":16,"content":[],"literal":"tokens_b","start":{"line":0,"ch":0},"end":{"line":0,"ch":7}},{"created":216,"parent":"n.0.153","type":"Module","outputId":14,"outputVer":17,"content":[],"literal":"tokens_a[8]","start":{"line":0,"ch":0},"end":{"line":0,"ch":10}},{"created":217,"parent":"n.0.154","type":"Module","outputId":14,"outputVer":18,"content":[],"literal":"tokens_a[7]","start":{"line":0,"ch":0},"end":{"line":0,"ch":10}},{"created":218,"parent":"n.0.155","type":"Module","outputId":14,"outputVer":19,"content":[],"literal":"tokens_a","start":{"line":0,"ch":0},"end":{"line":0,"ch":7}},{"created":219,"parent":"n.0.158","type":"Module","outputId":14,"outputVer":20,"content":[],"start":{"line":0,"ch":0},"end":{"line":0,"ch":-1}},{"created":223,"parent":"n.0.159","type":"Module","outputId":14,"outputVer":21,"content":[],"literal":"tokens_a[16]","start":{"line":0,"ch":0},"end":{"line":0,"ch":11}},{"created":224,"parent":"n.0.160","type":"Module","outputId":14,"outputVer":22,"content":[],"literal":"tokens_a[17]","start":{"line":0,"ch":0},"end":{"line":0,"ch":11}},{"created":225,"parent":"n.0.161","type":"Module","outputId":14,"outputVer":23,"content":[],"literal":"tokens_a[21]","start":{"line":0,"ch":0},"end":{"line":0,"ch":11}},{"created":226,"parent":"n.0.164","type":"Module","outputId":14,"outputVer":24,"content":[],"literal":"tokens_a[22]","start":{"line":0,"ch":0},"end":{"line":0,"ch":11}},{"created":229,"parent":"n.0.165","type":"Module","outputId":14,"outputVer":25,"content":[],"literal":"tokens_a[35]","start":{"line":0,"ch":0},"end":{"line":0,"ch":11}},{"created":230,"parent":"n.0.166","type":"Module","outputId":14,"outputVer":26,"content":[],"literal":"tokens_b[18:24]","start":{"line":0,"ch":0},"end":{"line":0,"ch":14}},{"created":231,"parent":"n.0.167","type":"Module","outputId":14,"outputVer":27,"content":[],"literal":"print(tokens_b[18:24], tokens_a[35:42])","start":{"line":0,"ch":0},"end":{"line":0,"ch":38}},{"created":232,"parent":"n.0.168","type":"Module","outputId":14,"outputVer":28,"content":[],"literal":"print(tokens_b[18:24], tokens_a[35:41])","start":{"line":0,"ch":0},"end":{"line":0,"ch":38}},{"created":233,"parent":"n.0.169","type":"Module","outputId":14,"outputVer":28,"content":[],"literal":"print(tokens_b[18:25], tokens_a[35:4])","start":{"line":0,"ch":0},"end":{"line":0,"ch":37}},{"created":234,"parent":"n.0.170","type":"Module","outputId":14,"outputVer":29,"content":[],"literal":"print(tokens_b[18:25], tokens_a[35:42])","start":{"line":0,"ch":0},"end":{"line":0,"ch":38}},{"created":235,"parent":"n.0.171","type":"Module","outputId":14,"outputVer":30,"content":[],"literal":"print(tokens_b[18:25], tokens_a[35:42])\nprint(tokens_b[42:43], tokens_a[29:30])","start":{"line":0,"ch":0},"end":{"line":1,"ch":38}},{"created":236,"parent":"n.0.172","type":"Module","outputId":14,"outputVer":31,"content":[],"literal":"print(tokens_b[18:25], tokens_a[35:42])\nprint(tokens_b[29:30], tokens_a[42:43])","start":{"line":0,"ch":0},"end":{"line":1,"ch":38}},{"created":237,"parent":"n.0.173","type":"Module","outputId":14,"outputVer":31,"content":[],"literal":"print(tokens_b[18:25], tokens_a[35:42])\nprint(tokens_b[29:31], tokens_a[42:44])","start":{"line":0,"ch":0},"end":{"line":1,"ch":38}},{"created":238,"parent":"n.0.174","type":"Module","outputId":14,"outputVer":31,"content":[],"literal":"print(tokens_b[18:25], tokens_a[35:42])\nprint(tokens_b[29:30], tokens_a[42:43])","start":{"line":0,"ch":0},"end":{"line":1,"ch":38}},{"created":239,"parent":"n.0.175","type":"Module","outputId":14,"outputVer":31,"content":[],"literal":"print(tokens_b[0:18], tokens_a[0:18])\nprint(tokens_b[18:25], tokens_a[35:42])\nprint(tokens_b[29:30], tokens_a[42:43])","start":{"line":0,"ch":0},"end":{"line":2,"ch":38}},{"created":241,"parent":"*.n.0","type":"Module","outputId":14,"outputVer":31,"content":[],"literal":"print(tokens_b[0:18], tokens_a[0:18])\nprint(tokens_b[18:25], tokens_a[35:42])\nprint(tokens_b[29:30], tokens_a[42:43])","start":{"line":0,"ch":0},"end":{"line":2,"ch":38}}]},{"vers":[{"created":252,"parent":"n.0.185","type":"Module","outputId":15,"outputVer":"0","content":[],"start":{"line":1,"ch":0},"end":{"line":1,"ch":0}},{"created":253,"parent":"n.0.186","type":"Module","outputId":15,"outputVer":0,"content":[],"literal":"'''\nNext, go through the \n'''","start":{"line":0,"ch":0},"end":{"line":2,"ch":2}},{"created":254,"parent":"n.0.187","type":"Module","outputId":15,"outputVer":1,"content":[],"literal":"'''\nNext, go through the rest of a and b nodes and complete matching upwards, and find unmatched tokens\n'''\ndic_b","start":{"line":0,"ch":0},"end":{"line":3,"ch":4}},{"created":255,"parent":"n.0.188","type":"Module","outputId":15,"outputVer":1,"content":[],"literal":"'''\nNext, go through the rest of a and b nodes and complete matching upwards, and find unmatched tokens\n'''\n\n# put all unmatch literals in a bucket\n","start":{"line":0,"ch":0},"end":{"line":5,"ch":-1}},{"created":256,"parent":"n.0.189","type":"Module","outputId":15,"outputVer":1,"content":[],"literal":"'''\nNext, go through the rest of a and b nodes and complete matching upwards, and find unmatched tokens\n'''\n\ndef listUnmatched(literals, dic):\n    unmatched = []\n    for name in literals:\n        if 'match' not in dic[name]:\n            unmatched.append(name)\n    return unmatched\n\n# put all unmatch literals in a bucket\nunmatched_a = listUnmatched(literal_a, dic_a)\nunmatched_b = listUnmatched(literal_a, dic_a)\n","start":{"line":0,"ch":0},"end":{"line":14,"ch":-1}},{"created":257,"parent":"n.0.190","type":"Module","outputId":15,"outputVer":2,"content":[],"literal":"'''\nNext, go through the rest of a and b nodes and complete matching upwards, and find unmatched tokens\n'''\n\ndef listUnmatched(literals, dic):\n    unmatched = []\n    for name in literals:\n        if 'match' not in dic[name]:\n            unmatched.append(name)\n    return unmatched\n\n# put all unmatch literals in a bucket\nunmatched_a = listUnmatched(literal_a, dic_a)\nunmatched_b = listUnmatched(literal_b, dic_b)\nprintLiterals(unmatched_a, dic_a)     \nprint(\"\\n############################\\n\")\nprintLiterals(unmatched_b, dic_b)     ","start":{"line":0,"ch":0},"end":{"line":16,"ch":37}},{"created":269,"parent":"n.0.200","type":"Module","outputId":15,"outputVer":3,"content":[],"literal":"'''\nPut all unmatch literals in a bucket.\n'''\n\ndef listUnmatched(literals, dic):\n    unmatched = []\n    for name in literals:\n        if 'match' not in dic[name]:\n            unmatched.append(name)\n    return unmatched\n\nunmatched_a = listUnmatched(literal_a, dic_a)\nunmatched_b = listUnmatched(literal_b, dic_b)\nprintLiterals(unmatched_a, dic_a)     \nprint(\"\\n############################\\n\")\nprintLiterals(unmatched_b, dic_b)     ","start":{"line":0,"ch":0},"end":{"line":15,"ch":37}},{"created":276,"parent":"n.0.201","type":"Module","outputId":15,"outputVer":4,"content":[],"literal":"'''\nPut all unmatch literals in a bucket.\n'''\n\ndef listUnmatched(literals, dic):\n    unmatched = []\n    tokens = []\n    for name in literals:\n        if 'match' not in dic[name]:\n            unmatched.append(name)\n            node = dic[name]\n            tok = node['syntok'] if 'syntok' in node else node['literal']\n            tokens.append(tok)\n    return unmatched, tokens\n\nunmatched_a, tokens_a = listUnmatched(literal_a, dic_a)\nunmatched_b, tokens_b = listUnmatched(literal_b, dic_b)\nprintLiterals(unmatched_a, dic_a)     \nprint(\"\\n############################\\n\")\nprintLiterals(unmatched_b, dic_b)\ntokens_a","start":{"line":0,"ch":0},"end":{"line":20,"ch":7}},{"created":277,"parent":"n.0.230","type":"Module","outputId":15,"outputVer":5,"content":[],"literal":"'''\nPut all unmatch literals in a bucket.\n'''\n\ndef listUnmatched(literals, dic):\n    unmatched = []\n    tokens = []\n    for name in literals:\n        if 'match' not in dic[name]:\n            unmatched.append(name)\n            node = dic[name]\n            tok = node['syntok'] if 'syntok' in node else node['literal']\n            tokens.append(tok)\n    return unmatched, tokens\n\nunmatched_a, tokens_a = listUnmatched(literal_a, dic_a)\nunmatched_b, tokens_b = listUnmatched(literal_b, dic_b)\nprintLiterals(unmatched_a, dic_a)     \nprint(\"\\n############################\\n\")\nprintLiterals(unmatched_b, dic_b)","start":{"line":0,"ch":0},"end":{"line":19,"ch":32}}]},{"vers":[{"created":270,"parent":"n.0.196","type":"Module","outputId":16,"outputVer":"0","content":[],"start":{"line":1,"ch":0},"end":{"line":1,"ch":0}},{"created":272,"parent":"*.n.0","type":"Module","outputId":16,"outputVer":"0","content":[],"start":{"line":1,"ch":0},"end":{"line":1,"ch":0}}]},{"vers":[{"created":279,"parent":"n.0.205","type":"Module","outputId":17,"outputVer":"0","content":[],"start":{"line":1,"ch":0},"end":{"line":1,"ch":0}},{"created":283,"parent":"n.0.206","type":"Module","outputId":17,"outputVer":0,"content":[],"literal":"difflib.get_close_matches('a', 'apple, ')","start":{"line":0,"ch":0},"end":{"line":0,"ch":40}},{"created":285,"parent":"n.0.207","type":"Module","outputId":17,"outputVer":1,"content":[],"literal":"difflib.get_close_matches('a', ['apple', 'b', 'ast'])","start":{"line":0,"ch":0},"end":{"line":0,"ch":52}},{"created":286,"parent":"n.0.208","type":"Module","outputId":17,"outputVer":2,"content":[],"literal":"difflib.get_close_matches('a', ['apple', 'b', 'as'])","start":{"line":0,"ch":0},"end":{"line":0,"ch":51}},{"created":287,"parent":"*.n.0","type":"Module","outputId":17,"outputVer":2,"content":[],"literal":"difflib.get_close_matches('a', ['apple', 'b', 'as'])","start":{"line":0,"ch":0},"end":{"line":0,"ch":51}}]},{"vers":[{"created":284,"parent":"n.0.210","type":"Module","outputId":18,"outputVer":"0","content":[],"start":{"line":1,"ch":0},"end":{"line":1,"ch":0}},{"created":290,"parent":"n.0.211","type":"Module","outputId":18,"outputVer":0,"content":[],"literal":"'''\nFinalize the recommendation\n'''\nchanges = []","start":{"line":0,"ch":0},"end":{"line":3,"ch":11}},{"created":291,"parent":"n.0.212","type":"Module","outputId":18,"outputVer":0,"content":[],"literal":"'''\nFinalize the recommendation\n'''\nchanges = []\n\n ","start":{"line":0,"ch":0},"end":{"line":5,"ch":0}},{"created":292,"parent":"n.0.213","type":"Module","outputId":18,"outputVer":0,"content":[],"literal":"'''\nFinalize the recommendation\n'''\nchanges = []\n\nfor name in unmatched_b:\n    node = dict_b[name]\n    if ","start":{"line":0,"ch":0},"end":{"line":7,"ch":6}},{"created":293,"parent":"n.0.214","type":"Module","outputId":18,"outputVer":0,"content":[],"literal":"'''\nFinalize the recommendation\n'''\nchanges = []\n\nfor name in unmatched_b:\n    node = dict_b[name]\n    if node['match']","start":{"line":0,"ch":0},"end":{"line":7,"ch":19}},{"created":295,"parent":"n.0.215","type":"Module","outputId":18,"outputVer":1,"content":[],"literal":"'''\nFinalize the recommendation\n'''\nchanges = []\n\nfor name in unmatched_b:\n    node = dic_b[name]\n    if 'match' in node:\n        continue\n    else:\n        node['new'] = True\n        changes.append(node)\n\nchanges","start":{"line":0,"ch":0},"end":{"line":13,"ch":6}},{"created":296,"parent":"n.0.216","type":"Module","outputId":18,"outputVer":1,"content":[],"literal":"'''\nFinalize the recommendation\n'''\nchanges = []\n\nfor name in unmatched_b:\n    node = dic_b[name]\n    if 'match' in node:\n        continue\n    else:\n        node['new'] = True\n        changes.append(node)\n        addSe\nchanges","start":{"line":0,"ch":0},"end":{"line":13,"ch":6}},{"created":297,"parent":"n.0.220","type":"Module","outputId":18,"outputVer":1,"content":[],"literal":"'''\nFinalize the recommendation\n'''\nchanges = []\n\nfor name in unmatched_b:\n    node = dic_b[name]\n    if 'match' in node:\n        continue\n    else:\n        node['new'] = True\n        changes.append(node)\n        \nchanges","start":{"line":0,"ch":0},"end":{"line":13,"ch":6}},{"created":310,"parent":"n.0.221","type":"Module","outputId":18,"outputVer":3,"content":[],"literal":"'''\nFinalize the recommendation\n'''\nchanges = []\n\ndef finalizeMatches(no):\nfor name in unmatched_b:\n    node = dic_b[name]\n    if 'match' in node:\n        continue\n    else:\n        node['new'] = True\n        changes.append(node)\n    if 'parent' in node:\n        \nfor name in unmatched_b:\n    finalizeMatches(unmatched_b)     \nchanges","start":{"line":0,"ch":0},"end":{"line":17,"ch":6}},{"created":311,"parent":"n.0.230","type":"Module","outputId":18,"outputVer":4,"content":[],"literal":"'''\nFinalize the recommendation\n'''\nchanges = []\n\ndef finalizeMatches(node, dic):\n    if 'match' in node:\n        node['name'] = 'TODO'\n    else:\n        node['new'] = True\n        changes.append(node)\n    if 'parent' in node:\n        finalizeMatches(dic[node['parent']], dic)\n        \nfor name in unmatched_b:\n    node = dic_b[name]\n    finalizeMatches(node, dic_b)  \n    \nchanges","start":{"line":0,"ch":0},"end":{"line":18,"ch":6}}]},{"vers":[{"created":294,"parent":"n.0.229","type":"Module","outputId":19,"outputVer":"0","content":[],"start":{"line":1,"ch":0},"end":{"line":1,"ch":0}},{"created":335,"parent":"*.n.0","type":"Module","outputId":19,"outputVer":"0","content":[],"start":{"line":1,"ch":0},"end":{"line":1,"ch":0}}]},{"vers":[{"created":322,"parent":"n.0.228","type":"Module","outputId":20,"outputVer":"0","content":[],"start":{"line":1,"ch":0},"end":{"line":1,"ch":0}},{"created":334,"parent":"*.n.0","type":"Module","outputId":20,"outputVer":"0","content":[],"start":{"line":1,"ch":0},"end":{"line":1,"ch":0}}]},{"vers":[{"created":329,"parent":"n.0.226","type":"Module","outputId":21,"outputVer":"0","content":[],"start":{"line":1,"ch":0},"end":{"line":1,"ch":0}},{"created":330,"parent":"n.0.227","type":"Module","outputId":21,"outputVer":0,"content":[],"literal":"'''\nRun matches up the hierchy where possible\n'''\n","start":{"line":0,"ch":0},"end":{"line":3,"ch":-1}},{"created":333,"parent":"n.0.230","type":"Module","outputId":21,"outputVer":0,"content":[],"literal":"'''\nRun matches up the hierchy where possible\n'''\nfor name in literals:\n        if 'match' in dic[name]:\n            ","start":{"line":0,"ch":0},"end":{"line":5,"ch":11}}]}],"markdownCells":[{"vers":[{"created":0,"parent":"n.0.56","markdown":"# Match API"},{"created":104,"parent":"n.0.57","markdown":"# Match API\nStrategy\n\n"},{"created":105,"parent":"n.0.58","markdown":"# Match API\nStage 1: isolate what has changed from a to b\n - enumerate all literal\n\n"},{"created":106,"parent":"n.0.59","markdown":"# Match API\nStage 1: isolate what has changed from a to b\n - goal: diff a and b and figure out the smallest parts of a that  \n - enumerate all literal nodey and do a diff on those\n\n"},{"created":107,"parent":"n.0.60","markdown":"# Match API\nOk, it would really help if we had a named structure for a so that we can more easily make recommendations on\n\n\nStage 1: isolate what has changed from a to b\n - goal: diff `a` and `b` and figure out the smallest parts of `b` that are changed \n \nStage 2: \n\n"},{"created":108,"parent":"n.0.61","markdown":"# Match API\nOk, it would really help if we had a named structure for `a` and `b` so that we can more easily make recommendations on matching. Ideally we'll just return a JSON of recommendations, like:\n\n```\n{ node: c.34, 'content': [...], 'start' ... }\n{ node:\n```\n\n\nStage 1: isolate what has changed from a to b\n - goal: diff `a` and `b` and figure out the smallest parts of `b` that are changed \n \nStage 2: \n\n"},{"created":109,"parent":"n.0.62","markdown":"# Match API\nOk, it would really help if we had a named structure for `a` and `b` so that we can more easily make recommendations on matching. Ideally we'll just return a JSON of recommendations, like a list of node names with the changed \n\n```\n[\n{ node: c.34, content: [...], start ... },\n{ node: s.14, literal: ... },\n{ node: s.*, literal: ... },   <=== this one's new\n]\n```\n\n\nStage 1: isolate what has changed from a to b\n - goal: diff `a` and `b` and figure out the smallest parts of `b` that are changed \n \nStage 2: \n\n"},{"created":110,"parent":"n.0.63","markdown":"# Match API\nOk, it would really help if we had a named structure for `a` and `b` so that we can more easily make recommendations on matching. Ideally we'll just return a JSON of recommendations, like a list of node names with the changed attributes. That's it:\n\n```\n[\n{ node: c.34, content: [...], start ... },\n{ node: s.14, literal: ... },\n{ node: s.*, literal: ... },   <=== this one's new\n]\n```\n\n\nStage 1: isolate what has changed from a to b\n - goal: diff `a` and `b` and figure out the smallest parts of `b` that are changed \n \nStage 2: \n\n"},{"created":111,"parent":"n.0.64","markdown":"# Match API\nOk, it would really help if we had a named structure for `a` and `b` so that we can more easily make recommendations on matching. Ideally we'll just return a JSON of recommendations, like a list of node names with the changed attributes. That's it:\n\n```\n[\n{ node: c.34, content: [...], start ... }, <=== this one's changed\n{ node: s.14, literal: ... }, <=== this one's changed\n{ node: s.*, literal: ... },   <=== this one's new\n]\n```\n\n\nStage 1: isolate what has changed from a to b\n - goal: diff `a` and `b` and figure out the smallest parts of `b` that are changed \n \nStage 2: \n\n"},{"created":112,"parent":"n.0.65","markdown":"# Match API\nOk, it would really help if we had a named structure for `a` and `b` so that we can more easily make recommendations on matching. Ideally we'll just return a JSON of recommendations, like a list of node names with the changed attributes. That's it:\n\n```\n[\n{ node: c.34, content: [...], start ... }, <=== this one's changed\n{ node: s.14, literal: ... }, <=== this one's changed\n{ node: s.*, literal: ... },   <=== this one's new\n]\n```\n\n\nStage 1: isolate what has changed from `a` to `b`\n - goal: diff `a` and `b` and figure out the smallest parts of `b` that are changed \n \nStage 2: make a list of nodes in `b`\n - initially assume that all differennodes in `b`\n\n"},{"created":113,"parent":"n.0.66","markdown":"# Match API\nOk, it would really help if we had a named structure for `a` and `b` so that we can more easily make recommendations on matching. Ideally we'll just return a JSON of recommendations, like a list of node names with the changed attributes. That's it:\n\n```\n[\n{ node: c.34, content: [...], start ... }, <=== this one's changed\n{ node: s.14, literal: ... }, <=== this one's changed\n{ new: True, node: s.2, literal: ... },   <=== this one's new\n]\n```\n\n\nStage 1: isolate what has changed from `a` to `b`\n - goal: diff `a` and `b` and figure out the smallest parts of `b` that are changed \n \nStage 2: make a list of nodes in `b`\n - initially assume that all different nodes in `b` are new\n\n"},{"created":114,"parent":"n.0.67","markdown":"# Match API\nOk, it would really help if we had a named structure for `a` and `b` so that we can more easily make recommendations on matching. Ideally we'll just return a JSON of recommendations, like a list of node names with the changed attributes. That's it:\n\n```\n[\n{ node: c.34, content: [...], start ... }, <=== this one's changed\n{ node: s.14, literal: ... }, <=== this one's changed\n{ new: True, node: s.2, literal: ... },   <=== this one's new\n]\n```\n\n\nStage 1: isolate what has changed from `a` to `b`\n - goal: diff `a` and `b` and figure out the smallest parts of `b` that are changed \n - match everything in `a` and `b` that has not changed\n \nStage 2: make a list of nodes in `b`\n - initially assume that all different nodes in `b` are new\n - make a list of candidate nodes from `a` for matching\n"},{"created":115,"parent":"n.0.68","markdown":"# Match API\nOk, it would really help if we had a named structure for `a` and `b` so that we can more easily make recommendations on matching. Ideally we'll just return a JSON of recommendations, like a list of node names with the changed attributes. That's it:\n\n```\n[\n{ node: c.34, content: [...], start ... }, <=== this one's changed\n{ node: s.14, literal: ... }, <=== this one's changed\n{ new: True, node: s.2, literal: ... },   <=== this one's new\n]\n```\n\n\nStage 1: isolate what has changed from `a` to `b`\n - goal: diff `a` and `b` and figure out the smallest parts of `b` that are changed \n - match everything in `a` and `b` that has not changed, sort out changed bits of `b` and unmatched bits of `a` \n \nStage 2: make a list of nodes in `b`\n - initially assume that all different nodes in `b` are new\n - make a list of candidate nodes from `a` for matching\n"},{"created":117,"parent":"n.0.69","markdown":"# Match API\nOk, it would really help if we had a named structure for `a` and `b` so that we can more easily make recommendations on matching. Ideally we'll just return a JSON of recommendations, like a list of node names with the changed attributes. That's it:\n\n```\n[\n{ node: c.34, content: [...], start ... }, <=== this one's changed\n{ node: s.14, literal: ... }, <=== this one's changed\n{ new: True, node: s.2, literal: ... },   <=== this one's new\n]\n```\n\n\n### Stage 1: isolate what has changed from `a` to `b`\n - goal: diff `a` and `b` and figure out the smallest parts of `b` that are changed \n - match everything in `a` and `b` that has not changed, sort out changed bits of `b` and unmatched bits of `a` \n \n### Stage 2: make a list of nodes in `b`\n - initially assume that all different nodes in `b` are new\n - make a list of candidate nodes from `a` for matching\n"},{"created":118,"parent":"n.0.70","markdown":"# Match API\nOk, it would really help if we had a named structure for `a` and `b` so that we can more easily make recommendations on matching. Ideally we'll just return a JSON of recommendations, like a list of node names with the changed attributes. That's it:\n\n```\n[\n{ node: c.34, content: [...], start ... }, <=== this one's changed\n{ node: s.14, literal: ... }, <=== this one's changed\n{ new: True, node: s.2, literal: ... },   <=== this one's new\n]\n```\nput all the nodes from a and from b into\n\n### Stage 1: isolate what has changed from `a` to `b`\n - goal: diff `a` and `b` and figure out the smallest parts of `b` that are changed \n - match everything in `a` and `b` that has not changed, sort out changed bits of `b` and unmatched bits of `a` \n \n### Stage 2: make a list of nodes in `b`\n - initially assume that all different nodes in `b` are new\n - make a list of candidate nodes from `a` for matching\n"},{"created":119,"parent":"n.0.71","markdown":"# Match API\nOk, it would really help if we had a named structure for `a` and `b` so that we can more easily make recommendations on matching. Ideally we'll just return a JSON of recommendations, like a list of node names with the changed attributes. That's it:\n\n```\n[\n{ node: c.34, content: [...], start ... }, <=== this one's changed\n{ node: s.14, literal: ... }, <=== this one's changed\n{ new: True, node: s.2, literal: ... },   <=== this one's new\n]\n```\n\n### Stage 0: ??? muck around with setup\nPut all the nodes from a and from b into a dictionary by node name, just like we do in the database. This will make the matching a lot easier so we don't have to constantly be crawling json and stuff.\n\n### Stage 1: isolate what has changed from `a` to `b`\n - goal: diff `a` and `b` and figure out the smallest parts of `b` that are changed \n - match everything in `a` and `b` that has not changed, sort out changed bits of `b` and unmatched bits of `a` \n \n### Stage 2: make a list of nodes in `b`\n - initially assume that all different nodes in `b` are new\n - make a list of candidate nodes from `a` for matching\n"},{"created":120,"parent":"n.0.72","markdown":"# Match API\nOk, it would really help if we had a named structure for `a` and `b` so that we can more easily make recommendations on matching. Ideally we'll just return a JSON of recommendations, like a list of node names with the changed attributes. That's it:\n\n```\n[\n{ node: c.34, content: [...], start ... }, <=== this one's changed\n{ node: s.14, literal: ... }, <=== this one's changed\n{ new: True, node: s.2, literal: ... },   <=== this one's new\n]\n```\n\n### Stage 0: ??? muck around with setup\nPut all the nodes from a and from b into a dictionary by node name, just like we do in the database. This will make the matching a lot easier so we don't have to constantly be crawling json and stuff. ::tada::\n\n### Stage 1: isolate what has changed from `a` to `b`\n - goal: diff `a` and `b` and figure out the smallest parts of `b` that are changed \n - match everything in `a` and `b` that has not changed, sort out changed bits of `b` and unmatched bits of `a` \n \n### Stage 2: make a list of nodes in `b`\n - initially assume that all different nodes in `b` are new\n - make a list of candidate nodes from `a` for matching\n"},{"created":121,"parent":"n.0.73","markdown":"# Match API\nOk, it would really help if we had a named structure for `a` and `b` so that we can more easily make recommendations on matching. Ideally we'll just return a JSON of recommendations, like a list of node names with the changed attributes. That's it:\n\n```\n[\n{ node: c.34, content: [...], start ... }, <=== this one's changed\n{ node: s.14, literal: ... }, <=== this one's changed\n{ new: True, node: s.2, literal: ... },   <=== this one's new\n]\n```\n\n### Stage 0: ??? muck around with setup\nPut all the nodes from a and from b into a dictionary by node name, just like we do in the database. This will make the matching a lot easier so we don't have to constantly be crawling json and stuff. :tada:\n\n### Stage 1: isolate what has changed from `a` to `b`\n - goal: diff `a` and `b` and figure out the smallest parts of `b` that are changed \n - match everything in `a` and `b` that has not changed, sort out changed bits of `b` and unmatched bits of `a` \n \n### Stage 2: make a list of nodes in `b`\n - initially assume that all different nodes in `b` are new\n - make a list of candidate nodes from `a` for matching\n"},{"created":122,"parent":"n.0.230","markdown":"# Match API\nOk, it would really help if we had a named structure for `a` and `b` so that we can more easily make recommendations on matching. Ideally we'll just return a JSON of recommendations, like a list of node names with the changed attributes. That's it:\n\n```\n[\n{ node: c.34, content: [...], start ... }, <=== this one's changed\n{ node: s.14, literal: ... }, <=== this one's changed\n{ new: True, node: s.2, literal: ... },   <=== this one's new\n]\n```\n\n### Stage 0: ??? muck around with setup\nPut all the nodes from a and from b into a dictionary by node name, just like we do in the database. This will make the matching a lot easier so we don't have to constantly be crawling json and stuff.\n\n### Stage 1: isolate what has changed from `a` to `b`\n - goal: diff `a` and `b` and figure out the smallest parts of `b` that are changed \n - match everything in `a` and `b` that has not changed, sort out changed bits of `b` and unmatched bits of `a` \n \n### Stage 2: make a list of nodes in `b`\n - initially assume that all different nodes in `b` are new\n - make a list of candidate nodes from `a` for matching\n"}]},{"vers":[{"created":166,"parent":"n.0.113"},{"created":167,"parent":"n.0.114","markdown":"# Stage 0"},{"created":168,"parent":"*.n.0"}],"origin":"c.12.0"}],"snippets":[],"output":[{"vers":[{"created":0,"parent":"c.0.0","raw":[]},{"created":23,"parent":"c.0.1","raw":[{"name":"stdout","text":"Delete \"l\" from position 7\nAdd \"n\" to position 8\nDelete \"l\" from position 10\n","output_type":"stream"}]},{"created":28,"parent":"c.0.2","raw":[]}]},{"vers":[{"created":0,"parent":"c.1.0","raw":[]},{"created":13,"parent":"c.1.5","raw":[{"execution_count":16,"output_type":"execute_result","data":{"text/plain":"{'type': 'Module',\n 'content': [{'type': 'Expr',\n   'content': [{'type': 'Call',\n     'content': [{'type': 'Name',\n       'content': [{'syntok': 'print'}],\n       'literal': None,\n       'start': {'line': 0, 'ch': 0},\n       'end': {'line': 0, 'ch': 5}},\n      {'syntok': '('},\n      {'type': 'Str',\n       'content': [{'syntok': \"'\"}, {'syntok': 'lol'}, {'syntok': \"'\"}],\n       'literal': None,\n       'start': {'line': 0, 'ch': 6},\n       'end': {'line': 0, 'ch': 11}},\n      {'syntok': ')'}],\n     'literal': None,\n     'start': {'line': 0, 'ch': 0},\n     'end': {'line': 0, 'ch': 11}}],\n   'literal': None,\n   'start': {'line': 0, 'ch': 0},\n   'end': {'line': 0, 'ch': 11}}],\n 'literal': None,\n 'start': {'line': 0, 'ch': 0},\n 'end': {'line': 0, 'ch': 11}}"},"metadata":{}}]},{"created":14,"parent":"c.1.6","raw":[{"execution_count":17,"output_type":"execute_result","data":{"text/plain":"{'type': 'Module',\n 'content': [{'type': 'Expr',\n   'content': [{'type': 'Call',\n     'content': [{'type': 'Name',\n       'content': [{'syntok': 'print'}],\n       'literal': None,\n       'start': {'line': 0, 'ch': 0},\n       'end': {'line': 0, 'ch': 5}},\n      {'syntok': '('},\n      {'type': 'Str',\n       'content': [{'syntok': \"'\"}, {'syntok': 'lol'}, {'syntok': \"'\"}],\n       'literal': None,\n       'start': {'line': 0, 'ch': 6},\n       'end': {'line': 0, 'ch': 11}},\n      {'syntok': ')'}],\n     'literal': None,\n     'start': {'line': 0, 'ch': 0},\n     'end': {'line': 0, 'ch': 11}}],\n   'literal': None,\n   'start': {'line': 0, 'ch': 0},\n   'end': {'line': 0, 'ch': 11}}],\n 'literal': None,\n 'start': {'line': 0, 'ch': 0},\n 'end': {'line': 0, 'ch': 11}}"},"metadata":{}}]},{"created":15,"parent":"c.1.7","raw":[]},{"created":57,"parent":"c.1.10","raw":[{"name":"stdout","text":"{'type': 'Module', 'content': [{'type': 'Expr', 'content': [{'type': 'Call', 'content': [{'type': 'Name', 'content': [{'syntok': 'print'}], 'literal': None, 'start': {'line': 0, 'ch': 0}, 'end': {'line': 0, 'ch': 5}}, {'syntok': '('}, {'type': 'Str', 'content': [{'syntok': \"'\"}, {'syntok': 'lol'}, {'syntok': \"'\"}], 'literal': None, 'start': {'line': 0, 'ch': 6}, 'end': {'line': 0, 'ch': 11}}, {'syntok': ')'}], 'literal': None, 'start': {'line': 0, 'ch': 0}, 'end': {'line': 0, 'ch': 11}}], 'literal': None, 'start': {'line': 0, 'ch': 0}, 'end': {'line': 0, 'ch': 11}}], 'literal': None, 'start': {'line': 0, 'ch': 0}, 'end': {'line': 0, 'ch': 11}}\n","output_type":"stream"}]},{"created":59,"parent":"c.1.10","raw":[{"name":"stdout","text":"{'type': 'Module', 'content': [{'type': 'Expr', 'content': [{'type': 'Call', 'content': [{'type': 'Name', 'content': [{'syntok': 'print'}], 'literal': None, 'start': {'line': 0, 'ch': 0}, 'end': {'line': 0, 'ch': 5}}, {'syntok': '('}, {'type': 'Str', 'content': [{'syntok': \"'\"}, {'syntok': 'lol'}, {'syntok': \"'\"}], 'literal': None, 'start': {'line': 0, 'ch': 6}, 'end': {'line': 0, 'ch': 11}}, {'syntok': ')'}], 'literal': None, 'start': {'line': 0, 'ch': 0}, 'end': {'line': 0, 'ch': 11}}], 'literal': None, 'start': {'line': 0, 'ch': 0}, 'end': {'line': 0, 'ch': 11}}], 'literal': None, 'start': {'line': 0, 'ch': 0}, 'end': {'line': 0, 'ch': 11}} <class 'dict'>\n","output_type":"stream"}]},{"created":70,"parent":"c.1.11","raw":[{"execution_count":5,"output_type":"execute_result","data":{"text/plain":"{'type': 'Module',\n 'content': [{'type': 'For',\n   'content': [{'syntok': 'for'},\n    {'syntok': ' '},\n    {'type': 'Name',\n     'content': [{'syntok': 'i'}],\n     'literal': None,\n     'start': {'line': 0, 'ch': 4, 'pos': 4},\n     'end': {'line': 0, 'ch': 5, 'pos': 5}},\n    {'syntok': ' '},\n    {'syntok': 'in'},\n    {'syntok': ' '},\n    {'type': 'Call',\n     'content': [{'type': 'Name',\n       'content': [{'syntok': 'range'}],\n       'literal': None,\n       'start': {'line': 0, 'ch': 9, 'pos': 9},\n       'end': {'line': 0, 'ch': 14, 'pos': 14}},\n      {'syntok': '('},\n      {'type': 'Num',\n       'content': [],\n       'literal': '0',\n       'start': {'line': 0, 'ch': 15},\n       'end': {'line': 0, 'ch': 16, 'pos': 16}},\n      {'syntok': ','},\n      {'type': 'Num',\n       'content': [],\n       'literal': '10',\n       'start': {'line': 0, 'ch': 17},\n       'end': {'line': 0, 'ch': 19, 'pos': 19}},\n      {'syntok': ')'}],\n     'literal': None,\n     'start': {'line': 0, 'ch': 9},\n     'end': {'line': 0, 'ch': 20, 'pos': 20}},\n    {'syntok': ':'},\n    {'syntok': '\\n'},\n    {'syntok': ' '},\n    {'syntok': ' '},\n    {'syntok': ' '},\n    {'syntok': ' '},\n    {'syntok': ' '},\n    {'syntok': ' '},\n    {'syntok': ' '},\n    {'syntok': ' '},\n    {'type': 'Expr',\n     'content': [{'type': 'Call',\n       'content': [{'type': 'Name',\n         'content': [{'syntok': 'print'}],\n         'literal': None,\n         'start': {'line': 1, 'ch': 8, 'pos': 30},\n         'end': {'line': 1, 'ch': 13, 'pos': 35}},\n        {'syntok': '('},\n        {'type': 'Name',\n         'content': [{'syntok': 'i'}],\n         'literal': None,\n         'start': {'line': 1, 'ch': 14, 'pos': 36},\n         'end': {'line': 1, 'ch': 15, 'pos': 37}},\n        {'syntok': ')'}],\n       'literal': None,\n       'start': {'line': 1, 'ch': 8},\n       'end': {'line': 1, 'ch': 15, 'pos': 38}}],\n     'literal': None,\n     'start': {'line': 1, 'ch': 8},\n     'end': {'line': 1, 'ch': 15, 'pos': 38}}],\n   'literal': None,\n   'start': {'line': 0, 'ch': 0},\n   'end': {'line': 1, 'ch': 15, 'pos': 38}}],\n 'literal': None,\n 'start': {'line': 0, 'ch': 0, 'pos': 0},\n 'end': {'line': 1, 'ch': 15, 'pos': 38}}"},"metadata":{}}]},{"created":73,"parent":"c.1.12","raw":[{"name":"stdout","text":"[26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44]\n0 57\n","output_type":"stream"}]},{"created":88,"parent":"c.1.12","raw":[{"name":"stdout","text":"[26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44] 26 {'type': 'Module', 'content': [{'type': 'For', 'content': [{'syntok': 'for'}, {'syntok': ' '}, {'type': 'Name', 'content': [{'syntok': 'i'}], 'literal': None, 'start': {'line': 0, 'ch': 4, 'pos': 4}, 'end': {'line': 0, 'ch': 5, 'pos': 5}}, {'syntok': ' '}, {'syntok': 'in'}, {'syntok': ' '}, {'type': 'Call', 'content': [{'type': 'Name', 'content': [{'syntok': 'range'}], 'literal': None, 'start': {'line': 0, 'ch': 9, 'pos': 9}, 'end': {'line': 0, 'ch': 14, 'pos': 14}}, {'syntok': '('}, {'type': 'Num', 'content': [], 'literal': '0', 'start': {'line': 0, 'ch': 15}, 'end': {'line': 0, 'ch': 16, 'pos': 16}}, {'syntok': ','}, {'type': 'Num', 'content': [], 'literal': '10', 'start': {'line': 0, 'ch': 17}, 'end': {'line': 0, 'ch': 19, 'pos': 19}}, {'syntok': ')'}], 'literal': None, 'start': {'line': 0, 'ch': 9}, 'end': {'line': 0, 'ch': 20, 'pos': 20}}, {'syntok': ':'}, {'syntok': '\\n'}, {'syntok': ' '}, {'syntok': ' '}, {'syntok': ' '}, {'syntok': ' '}, {'type': 'If', 'content': [{'syntok': 'if'}, {'syntok': ' '}, {'type': 'Compare', 'content': [{'type': 'BinOp', 'content': [{'type': 'Name', 'content': [{'syntok': 'i'}], 'literal': None, 'start': {'line': 1, 'ch': 7, 'pos': 29}, 'end': {'line': 1, 'ch': 8, 'pos': 30}}, {'syntok': ' '}, {'type': 'Mod', 'content': [{'syntok': '%'}], 'literal': None, 'start': {'line': 1, 'ch': 9, 'pos': 31}, 'end': {'line': 1, 'ch': 10, 'pos': 32}}, {'syntok': ' '}, {'type': 'Num', 'content': [], 'literal': '2', 'start': {'line': 1, 'ch': 11}, 'end': {'line': 1, 'ch': 12, 'pos': 34}}], 'literal': None, 'start': {'line': 1, 'ch': 7}, 'end': {'line': 1, 'ch': 12, 'pos': 34}}, {'syntok': ' '}, {'type': 'Eq', 'content': [{'syntok': '=='}], 'literal': None, 'start': {'line': 1, 'ch': 13, 'pos': 35}, 'end': {'line': 1, 'ch': 15, 'pos': 37}}, {'syntok': ' '}, {'type': 'Num', 'content': [], 'literal': '0', 'start': {'line': 1, 'ch': 16}, 'end': {'line': 1, 'ch': 17, 'pos': 39}}], 'literal': None, 'start': {'line': 1, 'ch': 7}, 'end': {'line': 1, 'ch': 17, 'pos': 39}}, {'syntok': ':'}, {'syntok': '\\n'}, {'syntok': ' '}, {'syntok': ' '}, {'syntok': ' '}, {'syntok': ' '}, {'syntok': ' '}, {'syntok': ' '}, {'syntok': ' '}, {'syntok': ' '}, {'type': 'Expr', 'content': [{'type': 'Call', 'content': [{'type': 'Name', 'content': [{'syntok': 'print'}], 'literal': None, 'start': {'line': 2, 'ch': 8, 'pos': 49}, 'end': {'line': 2, 'ch': 13, 'pos': 54}}, {'syntok': '('}, {'type': 'Name', 'content': [{'syntok': 'i'}], 'literal': None, 'start': {'line': 2, 'ch': 14, 'pos': 55}, 'end': {'line': 2, 'ch': 15, 'pos': 56}}, {'syntok': ')'}], 'literal': None, 'start': {'line': 2, 'ch': 8}, 'end': {'line': 2, 'ch': 15, 'pos': 57}}], 'literal': None, 'start': {'line': 2, 'ch': 8}, 'end': {'line': 2, 'ch': 15, 'pos': 57}}], 'literal': None, 'start': {'line': 1, 'ch': 4}, 'end': {'line': 2, 'ch': 15, 'pos': 57}}], 'literal': None, 'start': {'line': 0, 'ch': 0}, 'end': {'line': 2, 'ch': 15, 'pos': 57}}], 'literal': None, 'start': {'line': 0, 'ch': 0, 'pos': 0}, 'end': {'line': 2, 'ch': 15, 'pos': 57}}\n","output_type":"stream"},{"traceback":["\u001b[0;31m--------------------------------------------------\u001b[0m","\u001b[0;31mKeyError\u001b[0m         Traceback (most recent call last)","\u001b[0;32m<ipython-input-14-90b590ab20ba>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      7\u001b[0m \u001b[0mB\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mlilgit\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mparse\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mb\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      8\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 9\u001b[0;31m \u001b[0mmarkDiffPos\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mA\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdelete_pos\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m<ipython-input-13-4f76214c81f6>\u001b[0m in \u001b[0;36mmarkDiffPos\u001b[0;34m(node, delete_pos)\u001b[0m\n\u001b[1;32m     12\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0;34m'content'\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mnode\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     13\u001b[0m             \u001b[0;32mfor\u001b[0m \u001b[0mitem\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mnode\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'content'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 14\u001b[0;31m                 \u001b[0;32mif\u001b[0m \u001b[0minRange\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mitem\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mpos\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     15\u001b[0m                     \u001b[0mnarrow\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mTrue\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     16\u001b[0m                     \u001b[0mdelete_pos\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mmarkDiffPos\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mitem\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdelete_pos\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m<ipython-input-13-4f76214c81f6>\u001b[0m in \u001b[0;36minRange\u001b[0;34m(node, pos)\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;32mdef\u001b[0m \u001b[0minRange\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnode\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mpos\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      2\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0;34m'start'\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mnode\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0;32mreturn\u001b[0m \u001b[0;32mFalse\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 3\u001b[0;31m     \u001b[0;32mreturn\u001b[0m \u001b[0mnode\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'start'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'pos'\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m<=\u001b[0m \u001b[0mpos\u001b[0m \u001b[0;32mand\u001b[0m \u001b[0mnode\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'end'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'pos'\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m>=\u001b[0m \u001b[0mpos\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      4\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mKeyError\u001b[0m: 'pos'"],"ename":"KeyError","evalue":"'pos'","output_type":"error"}]},{"created":95,"parent":"c.1.13","raw":[{"name":"stdout","text":"{'type': 'Module', 'content': [{'type': 'For', 'content': [{'syntok': 'for'}, {'syntok': ' '}, {'type': 'Name', 'content': [{'syntok': 'i'}], 'literal': None, 'start': {'line': 0, 'ch': 4, 'pos': 4}, 'end': {'line': 0, 'ch': 5, 'pos': 5}}, {'syntok': ' '}, {'syntok': 'in'}, {'syntok': ' '}, {'type': 'Call', 'content': [{'type': 'Name', 'content': [{'syntok': 'range'}], 'literal': None, 'start': {'line': 0, 'ch': 9, 'pos': 9}, 'end': {'line': 0, 'ch': 14, 'pos': 14}}, {'syntok': '('}, {'type': 'Num', 'content': [], 'literal': '0', 'start': {'pos': 15, 'line': 0, 'ch': 15}, 'end': {'line': 0, 'ch': 16, 'pos': 16}}, {'syntok': ','}, {'type': 'Num', 'content': [], 'literal': '10', 'start': {'pos': 17, 'line': 0, 'ch': 17}, 'end': {'line': 0, 'ch': 19, 'pos': 19}}, {'syntok': ')'}], 'literal': None, 'start': {'pos': 9, 'line': 0, 'ch': 9}, 'end': {'line': 0, 'ch': 20, 'pos': 20}}, {'syntok': ':'}, {'syntok': '\\n'}, {'syntok': ' '}, {'syntok': ' '}, {'syntok': ' '}, {'syntok': ' '}, {'type': 'If', 'content': [{'syntok': 'if'}, {'syntok': ' '}, {'type': 'Compare', 'content': [{'type': 'BinOp', 'content': [{'type': 'Name', 'content': [{'syntok': 'i'}], 'literal': None, 'start': {'line': 1, 'ch': 7, 'pos': 29}, 'end': {'line': 1, 'ch': 8, 'pos': 30}}, {'syntok': ' '}, {'type': 'Mod', 'content': [{'syntok': '%'}], 'literal': None, 'start': {'line': 1, 'ch': 9, 'pos': 31}, 'end': {'line': 1, 'ch': 10, 'pos': 32}}, {'syntok': ' '}, {'type': 'Num', 'content': [], 'literal': '2', 'start': {'pos': 33, 'line': 1, 'ch': 11}, 'end': {'line': 1, 'ch': 12, 'pos': 34}}], 'literal': None, 'start': {'pos': 29, 'line': 1, 'ch': 7}, 'end': {'line': 1, 'ch': 12, 'pos': 34}}, {'syntok': ' '}, {'type': 'Eq', 'content': [{'syntok': '=='}], 'literal': None, 'start': {'line': 1, 'ch': 13, 'pos': 35}, 'end': {'line': 1, 'ch': 15, 'pos': 37}}, {'syntok': ' '}, {'type': 'Num', 'content': [], 'literal': '0', 'start': {'pos': 38, 'line': 1, 'ch': 16}, 'end': {'line': 1, 'ch': 17, 'pos': 39}}], 'literal': None, 'start': {'pos': 29, 'line': 1, 'ch': 7}, 'end': {'line': 1, 'ch': 17, 'pos': 39}}, {'syntok': ':'}, {'syntok': '\\n'}, {'syntok': ' '}, {'syntok': ' '}, {'syntok': ' '}, {'syntok': ' '}, {'syntok': ' '}, {'syntok': ' '}, {'syntok': ' '}, {'syntok': ' '}, {'type': 'Expr', 'content': [{'type': 'Call', 'content': [{'type': 'Name', 'content': [{'syntok': 'print'}], 'literal': None, 'start': {'line': 2, 'ch': 8, 'pos': 49}, 'end': {'line': 2, 'ch': 13, 'pos': 54}}, {'syntok': '('}, {'type': 'Name', 'content': [{'syntok': 'i'}], 'literal': None, 'start': {'line': 2, 'ch': 14, 'pos': 55}, 'end': {'line': 2, 'ch': 15, 'pos': 56}}, {'syntok': ')'}], 'literal': None, 'start': {'pos': 49, 'line': 2, 'ch': 8}, 'end': {'line': 2, 'ch': 15, 'pos': 57}}], 'literal': None, 'start': {'pos': 49, 'line': 2, 'ch': 8}, 'end': {'line': 2, 'ch': 15, 'pos': 57}}], 'literal': None, 'start': {'pos': 26, 'line': 1, 'ch': 4}, 'end': {'line': 2, 'ch': 15, 'pos': 57}}], 'literal': None, 'start': {'pos': 0, 'line': 0, 'ch': 0}, 'end': {'line': 2, 'ch': 15, 'pos': 57}}], 'literal': None, 'start': {'line': 0, 'ch': 0, 'pos': 0}, 'end': {'line': 2, 'ch': 15, 'pos': 57}}\n[26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44] 26\n{'line': 0, 'ch': 0, 'pos': 0} {'line': 2, 'ch': 15, 'pos': 57}\n{'pos': 0, 'line': 0, 'ch': 0} {'line': 2, 'ch': 15, 'pos': 57}\n[26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44] 26\n{'pos': 0, 'line': 0, 'ch': 0} {'line': 2, 'ch': 15, 'pos': 57}\n{'line': 0, 'ch': 4, 'pos': 4} {'line': 0, 'ch': 5, 'pos': 5}\n{'pos': 9, 'line': 0, 'ch': 9} {'line': 0, 'ch': 20, 'pos': 20}\n{'pos': 26, 'line': 1, 'ch': 4} {'line': 2, 'ch': 15, 'pos': 57}\n[26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44] 26\n{'pos': 26, 'line': 1, 'ch': 4} {'line': 2, 'ch': 15, 'pos': 57}\n{'pos': 29, 'line': 1, 'ch': 7} {'line': 1, 'ch': 17, 'pos': 39}\n{'pos': 49, 'line': 2, 'ch': 8} {'line': 2, 'ch': 15, 'pos': 57}\n{'pos': 26, 'line': 1, 'ch': 4} {'line': 2, 'ch': 15, 'pos': 57}\n{'pos': 29, 'line': 1, 'ch': 7} {'line': 1, 'ch': 17, 'pos': 39}\n{'pos': 49, 'line': 2, 'ch': 8} {'line': 2, 'ch': 15, 'pos': 57}\n{'pos': 26, 'line': 1, 'ch': 4} {'line': 2, 'ch': 15, 'pos': 57}\n{'pos': 29, 'line': 1, 'ch': 7} {'line': 1, 'ch': 17, 'pos': 39}\n{'pos': 49, 'line': 2, 'ch': 8} {'line': 2, 'ch': 15, 'pos': 57}\n{'pos': 26, 'line': 1, 'ch': 4} {'line': 2, 'ch': 15, 'pos': 57}\n{'pos': 29, 'line': 1, 'ch': 7} {'line': 1, 'ch': 17, 'pos': 39}\n[29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44] 29\n{'pos': 29, 'line': 1, 'ch': 7} {'line': 1, 'ch': 17, 'pos': 39}\n{'pos': 29, 'line': 1, 'ch': 7} {'line': 1, 'ch': 12, 'pos': 34}\n[29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44] 29\n{'pos': 29, 'line': 1, 'ch': 7} {'line': 1, 'ch': 12, 'pos': 34}\n{'line': 1, 'ch': 7, 'pos': 29} {'line': 1, 'ch': 8, 'pos': 30}\n[29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44] 29\n{'line': 1, 'ch': 7, 'pos': 29} {'line': 1, 'ch': 8, 'pos': 30}\n{'line': 1, 'ch': 7, 'pos': 29} {'line': 1, 'ch': 8, 'pos': 30}\n{'line': 1, 'ch': 7, 'pos': 29} {'line': 1, 'ch': 8, 'pos': 30}\n{'line': 1, 'ch': 9, 'pos': 31} {'line': 1, 'ch': 10, 'pos': 32}\n{'pos': 33, 'line': 1, 'ch': 11} {'line': 1, 'ch': 12, 'pos': 34}\n{'pos': 29, 'line': 1, 'ch': 7} {'line': 1, 'ch': 12, 'pos': 34}\n{'line': 1, 'ch': 7, 'pos': 29} {'line': 1, 'ch': 8, 'pos': 30}\n{'line': 1, 'ch': 9, 'pos': 31} {'line': 1, 'ch': 10, 'pos': 32}\n[31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44] 31\n{'line': 1, 'ch': 9, 'pos': 31} {'line': 1, 'ch': 10, 'pos': 32}\n{'line': 1, 'ch': 9, 'pos': 31} {'line': 1, 'ch': 10, 'pos': 32}\n{'line': 1, 'ch': 9, 'pos': 31} {'line': 1, 'ch': 10, 'pos': 32}\n{'pos': 33, 'line': 1, 'ch': 11} {'line': 1, 'ch': 12, 'pos': 34}\n{'pos': 29, 'line': 1, 'ch': 7} {'line': 1, 'ch': 12, 'pos': 34}\n{'line': 1, 'ch': 7, 'pos': 29} {'line': 1, 'ch': 8, 'pos': 30}\n{'line': 1, 'ch': 9, 'pos': 31} {'line': 1, 'ch': 10, 'pos': 32}\n{'pos': 33, 'line': 1, 'ch': 11} {'line': 1, 'ch': 12, 'pos': 34}\n[33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44] 33\n{'pos': 33, 'line': 1, 'ch': 11} {'line': 1, 'ch': 12, 'pos': 34}\n{'pos': 33, 'line': 1, 'ch': 11} {'line': 1, 'ch': 12, 'pos': 34}\n{'pos': 33, 'line': 1, 'ch': 11} {'line': 1, 'ch': 12, 'pos': 34}\n{'pos': 29, 'line': 1, 'ch': 7} {'line': 1, 'ch': 12, 'pos': 34}\n{'line': 1, 'ch': 13, 'pos': 35} {'line': 1, 'ch': 15, 'pos': 37}\n{'pos': 38, 'line': 1, 'ch': 16} {'line': 1, 'ch': 17, 'pos': 39}\n{'pos': 29, 'line': 1, 'ch': 7} {'line': 1, 'ch': 17, 'pos': 39}\n{'pos': 29, 'line': 1, 'ch': 7} {'line': 1, 'ch': 12, 'pos': 34}\n{'line': 1, 'ch': 13, 'pos': 35} {'line': 1, 'ch': 15, 'pos': 37}\n[35, 36, 37, 38, 39, 40, 41, 42, 43, 44] 35\n{'line': 1, 'ch': 13, 'pos': 35} {'line': 1, 'ch': 15, 'pos': 37}\n{'line': 1, 'ch': 13, 'pos': 35} {'line': 1, 'ch': 15, 'pos': 37}\n{'line': 1, 'ch': 13, 'pos': 35} {'line': 1, 'ch': 15, 'pos': 37}\n{'line': 1, 'ch': 13, 'pos': 35} {'line': 1, 'ch': 15, 'pos': 37}\n{'pos': 38, 'line': 1, 'ch': 16} {'line': 1, 'ch': 17, 'pos': 39}\n{'pos': 29, 'line': 1, 'ch': 7} {'line': 1, 'ch': 17, 'pos': 39}\n{'pos': 29, 'line': 1, 'ch': 7} {'line': 1, 'ch': 12, 'pos': 34}\n{'line': 1, 'ch': 13, 'pos': 35} {'line': 1, 'ch': 15, 'pos': 37}\n{'pos': 38, 'line': 1, 'ch': 16} {'line': 1, 'ch': 17, 'pos': 39}\n[38, 39, 40, 41, 42, 43, 44] 38\n{'pos': 38, 'line': 1, 'ch': 16} {'line': 1, 'ch': 17, 'pos': 39}\n{'pos': 38, 'line': 1, 'ch': 16} {'line': 1, 'ch': 17, 'pos': 39}\n{'pos': 38, 'line': 1, 'ch': 16} {'line': 1, 'ch': 17, 'pos': 39}\n{'pos': 29, 'line': 1, 'ch': 7} {'line': 1, 'ch': 17, 'pos': 39}\n{'pos': 49, 'line': 2, 'ch': 8} {'line': 2, 'ch': 15, 'pos': 57}\n{'pos': 26, 'line': 1, 'ch': 4} {'line': 2, 'ch': 15, 'pos': 57}\n{'pos': 29, 'line': 1, 'ch': 7} {'line': 1, 'ch': 17, 'pos': 39}\n{'pos': 49, 'line': 2, 'ch': 8} {'line': 2, 'ch': 15, 'pos': 57}\n{'pos': 26, 'line': 1, 'ch': 4} {'line': 2, 'ch': 15, 'pos': 57}\n{'pos': 29, 'line': 1, 'ch': 7} {'line': 1, 'ch': 17, 'pos': 39}\n{'pos': 49, 'line': 2, 'ch': 8} {'line': 2, 'ch': 15, 'pos': 57}\n{'pos': 26, 'line': 1, 'ch': 4} {'line': 2, 'ch': 15, 'pos': 57}\n{'pos': 29, 'line': 1, 'ch': 7} {'line': 1, 'ch': 17, 'pos': 39}\n{'pos': 49, 'line': 2, 'ch': 8} {'line': 2, 'ch': 15, 'pos': 57}\n{'pos': 26, 'line': 1, 'ch': 4} {'line': 2, 'ch': 15, 'pos': 57}\n{'pos': 29, 'line': 1, 'ch': 7} {'line': 1, 'ch': 17, 'pos': 39}\n{'pos': 49, 'line': 2, 'ch': 8} {'line': 2, 'ch': 15, 'pos': 57}\n{'pos': 26, 'line': 1, 'ch': 4} {'line': 2, 'ch': 15, 'pos': 57}\n{'pos': 29, 'line': 1, 'ch': 7} {'line': 1, 'ch': 17, 'pos': 39}\n{'pos': 49, 'line': 2, 'ch': 8} {'line': 2, 'ch': 15, 'pos': 57}\n","output_type":"stream"},{"traceback":["\u001b[0;31m--------------------------------------------------\u001b[0m","\u001b[0;31mIndexError\u001b[0m       Traceback (most recent call last)","\u001b[0;32m<ipython-input-5-9e99032148bf>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      9\u001b[0m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mA\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     10\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 11\u001b[0;31m \u001b[0mmarkDiffPos\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mA\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdelete_pos\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m<ipython-input-4-7143a059cfe8>\u001b[0m in \u001b[0;36mmarkDiffPos\u001b[0;34m(node, delete_pos)\u001b[0m\n\u001b[1;32m     16\u001b[0m                 \u001b[0;32mif\u001b[0m \u001b[0minRange\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mitem\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mpos\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     17\u001b[0m                     \u001b[0mnarrow\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mTrue\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 18\u001b[0;31m                     \u001b[0mdelete_pos\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mmarkDiffPos\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mitem\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdelete_pos\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     19\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0mnarrow\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     20\u001b[0m             \u001b[0mdelete_pos\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpop\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m<ipython-input-4-7143a059cfe8>\u001b[0m in \u001b[0;36mmarkDiffPos\u001b[0;34m(node, delete_pos)\u001b[0m\n\u001b[1;32m     16\u001b[0m                 \u001b[0;32mif\u001b[0m \u001b[0minRange\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mitem\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mpos\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     17\u001b[0m                     \u001b[0mnarrow\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mTrue\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 18\u001b[0;31m                     \u001b[0mdelete_pos\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mmarkDiffPos\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mitem\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdelete_pos\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     19\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0mnarrow\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     20\u001b[0m             \u001b[0mdelete_pos\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpop\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m<ipython-input-4-7143a059cfe8>\u001b[0m in \u001b[0;36mmarkDiffPos\u001b[0;34m(node, delete_pos)\u001b[0m\n\u001b[1;32m     19\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0mnarrow\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     20\u001b[0m             \u001b[0mdelete_pos\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpop\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 21\u001b[0;31m         \u001b[0mpos\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mdelete_pos\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     22\u001b[0m     \u001b[0;32mreturn\u001b[0m \u001b[0mdelete_pos\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     23\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mIndexError\u001b[0m: list index out of range"],"ename":"IndexError","evalue":"list index out of range","output_type":"error"}]},{"created":99,"parent":"c.1.13","raw":[{"name":"stdout","text":"{'type': 'Module', 'content': [{'type': 'For', 'content': [{'syntok': 'for'}, {'syntok': ' '}, {'type': 'Name', 'content': [{'syntok': 'i'}], 'literal': None, 'start': {'line': 0, 'ch': 4, 'pos': 4}, 'end': {'line': 0, 'ch': 5, 'pos': 5}}, {'syntok': ' '}, {'syntok': 'in'}, {'syntok': ' '}, {'type': 'Call', 'content': [{'type': 'Name', 'content': [{'syntok': 'range'}], 'literal': None, 'start': {'line': 0, 'ch': 9, 'pos': 9}, 'end': {'line': 0, 'ch': 14, 'pos': 14}}, {'syntok': '('}, {'type': 'Num', 'content': [], 'literal': '0', 'start': {'pos': 15, 'line': 0, 'ch': 15}, 'end': {'line': 0, 'ch': 16, 'pos': 16}}, {'syntok': ','}, {'type': 'Num', 'content': [], 'literal': '10', 'start': {'pos': 17, 'line': 0, 'ch': 17}, 'end': {'line': 0, 'ch': 19, 'pos': 19}}, {'syntok': ')'}], 'literal': None, 'start': {'pos': 9, 'line': 0, 'ch': 9}, 'end': {'line': 0, 'ch': 20, 'pos': 20}}, {'syntok': ':'}, {'syntok': '\\n'}, {'syntok': ' '}, {'syntok': ' '}, {'syntok': ' '}, {'syntok': ' '}, {'type': 'If', 'content': [{'syntok': 'if'}, {'syntok': ' '}, {'type': 'Compare', 'content': [{'type': 'BinOp', 'content': [{'type': 'Name', 'content': [{'syntok': 'i'}], 'literal': None, 'start': {'line': 1, 'ch': 7, 'pos': 29}, 'end': {'line': 1, 'ch': 8, 'pos': 30}}, {'syntok': ' '}, {'type': 'Mod', 'content': [{'syntok': '%'}], 'literal': None, 'start': {'line': 1, 'ch': 9, 'pos': 31}, 'end': {'line': 1, 'ch': 10, 'pos': 32}}, {'syntok': ' '}, {'type': 'Num', 'content': [], 'literal': '2', 'start': {'pos': 33, 'line': 1, 'ch': 11}, 'end': {'line': 1, 'ch': 12, 'pos': 34}}], 'literal': None, 'start': {'pos': 29, 'line': 1, 'ch': 7}, 'end': {'line': 1, 'ch': 12, 'pos': 34}}, {'syntok': ' '}, {'type': 'Eq', 'content': [{'syntok': '=='}], 'literal': None, 'start': {'line': 1, 'ch': 13, 'pos': 35}, 'end': {'line': 1, 'ch': 15, 'pos': 37}}, {'syntok': ' '}, {'type': 'Num', 'content': [], 'literal': '0', 'start': {'pos': 38, 'line': 1, 'ch': 16}, 'end': {'line': 1, 'ch': 17, 'pos': 39}}], 'literal': None, 'start': {'pos': 29, 'line': 1, 'ch': 7}, 'end': {'line': 1, 'ch': 17, 'pos': 39}}, {'syntok': ':'}, {'syntok': '\\n'}, {'syntok': ' '}, {'syntok': ' '}, {'syntok': ' '}, {'syntok': ' '}, {'syntok': ' '}, {'syntok': ' '}, {'syntok': ' '}, {'syntok': ' '}, {'type': 'Expr', 'content': [{'type': 'Call', 'content': [{'type': 'Name', 'content': [{'syntok': 'print'}], 'literal': None, 'start': {'line': 2, 'ch': 8, 'pos': 49}, 'end': {'line': 2, 'ch': 13, 'pos': 54}}, {'syntok': '('}, {'type': 'Name', 'content': [{'syntok': 'i'}], 'literal': None, 'start': {'line': 2, 'ch': 14, 'pos': 55}, 'end': {'line': 2, 'ch': 15, 'pos': 56}}, {'syntok': ')'}], 'literal': None, 'start': {'pos': 49, 'line': 2, 'ch': 8}, 'end': {'line': 2, 'ch': 15, 'pos': 57}}], 'literal': None, 'start': {'pos': 49, 'line': 2, 'ch': 8}, 'end': {'line': 2, 'ch': 15, 'pos': 57}}], 'literal': None, 'start': {'pos': 26, 'line': 1, 'ch': 4}, 'end': {'line': 2, 'ch': 15, 'pos': 57}}], 'literal': None, 'start': {'pos': 0, 'line': 0, 'ch': 0}, 'end': {'line': 2, 'ch': 15, 'pos': 57}}], 'literal': None, 'start': {'line': 0, 'ch': 0, 'pos': 0}, 'end': {'line': 2, 'ch': 15, 'pos': 57}}\n[26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44] 26\n{'line': 0, 'ch': 0, 'pos': 0} {'line': 2, 'ch': 15, 'pos': 57}\n{'pos': 0, 'line': 0, 'ch': 0} {'line': 2, 'ch': 15, 'pos': 57}\n[26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44] 26\n{'pos': 0, 'line': 0, 'ch': 0} {'line': 2, 'ch': 15, 'pos': 57}\n{'line': 0, 'ch': 4, 'pos': 4} {'line': 0, 'ch': 5, 'pos': 5}\n{'pos': 9, 'line': 0, 'ch': 9} {'line': 0, 'ch': 20, 'pos': 20}\n{'pos': 26, 'line': 1, 'ch': 4} {'line': 2, 'ch': 15, 'pos': 57}\n[26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44] 26\n{'pos': 26, 'line': 1, 'ch': 4} {'line': 2, 'ch': 15, 'pos': 57}\n{'pos': 29, 'line': 1, 'ch': 7} {'line': 1, 'ch': 17, 'pos': 39}\n{'pos': 49, 'line': 2, 'ch': 8} {'line': 2, 'ch': 15, 'pos': 57}\n{'pos': 26, 'line': 1, 'ch': 4} {'line': 2, 'ch': 15, 'pos': 57}\n{'pos': 29, 'line': 1, 'ch': 7} {'line': 1, 'ch': 17, 'pos': 39}\n{'pos': 49, 'line': 2, 'ch': 8} {'line': 2, 'ch': 15, 'pos': 57}\n{'pos': 26, 'line': 1, 'ch': 4} {'line': 2, 'ch': 15, 'pos': 57}\n{'pos': 29, 'line': 1, 'ch': 7} {'line': 1, 'ch': 17, 'pos': 39}\n{'pos': 49, 'line': 2, 'ch': 8} {'line': 2, 'ch': 15, 'pos': 57}\n{'pos': 26, 'line': 1, 'ch': 4} {'line': 2, 'ch': 15, 'pos': 57}\n{'pos': 29, 'line': 1, 'ch': 7} {'line': 1, 'ch': 17, 'pos': 39}\n[29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44] 29\n{'pos': 29, 'line': 1, 'ch': 7} {'line': 1, 'ch': 17, 'pos': 39}\n{'pos': 29, 'line': 1, 'ch': 7} {'line': 1, 'ch': 12, 'pos': 34}\n[29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44] 29\n{'pos': 29, 'line': 1, 'ch': 7} {'line': 1, 'ch': 12, 'pos': 34}\n{'line': 1, 'ch': 7, 'pos': 29} {'line': 1, 'ch': 8, 'pos': 30}\n[29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44] 29\n{'line': 1, 'ch': 7, 'pos': 29} {'line': 1, 'ch': 8, 'pos': 30}\n{'line': 1, 'ch': 7, 'pos': 29} {'line': 1, 'ch': 8, 'pos': 30}\n{'line': 1, 'ch': 7, 'pos': 29} {'line': 1, 'ch': 8, 'pos': 30}\n{'line': 1, 'ch': 9, 'pos': 31} {'line': 1, 'ch': 10, 'pos': 32}\n{'pos': 33, 'line': 1, 'ch': 11} {'line': 1, 'ch': 12, 'pos': 34}\n{'pos': 29, 'line': 1, 'ch': 7} {'line': 1, 'ch': 12, 'pos': 34}\n{'line': 1, 'ch': 7, 'pos': 29} {'line': 1, 'ch': 8, 'pos': 30}\n{'line': 1, 'ch': 9, 'pos': 31} {'line': 1, 'ch': 10, 'pos': 32}\n[31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44] 31\n{'line': 1, 'ch': 9, 'pos': 31} {'line': 1, 'ch': 10, 'pos': 32}\n{'line': 1, 'ch': 9, 'pos': 31} {'line': 1, 'ch': 10, 'pos': 32}\n{'line': 1, 'ch': 9, 'pos': 31} {'line': 1, 'ch': 10, 'pos': 32}\n{'pos': 33, 'line': 1, 'ch': 11} {'line': 1, 'ch': 12, 'pos': 34}\n{'pos': 29, 'line': 1, 'ch': 7} {'line': 1, 'ch': 12, 'pos': 34}\n{'line': 1, 'ch': 7, 'pos': 29} {'line': 1, 'ch': 8, 'pos': 30}\n{'line': 1, 'ch': 9, 'pos': 31} {'line': 1, 'ch': 10, 'pos': 32}\n{'pos': 33, 'line': 1, 'ch': 11} {'line': 1, 'ch': 12, 'pos': 34}\n[33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44] 33\n{'pos': 33, 'line': 1, 'ch': 11} {'line': 1, 'ch': 12, 'pos': 34}\n{'pos': 33, 'line': 1, 'ch': 11} {'line': 1, 'ch': 12, 'pos': 34}\n{'pos': 33, 'line': 1, 'ch': 11} {'line': 1, 'ch': 12, 'pos': 34}\n{'pos': 29, 'line': 1, 'ch': 7} {'line': 1, 'ch': 12, 'pos': 34}\n{'line': 1, 'ch': 13, 'pos': 35} {'line': 1, 'ch': 15, 'pos': 37}\n{'pos': 38, 'line': 1, 'ch': 16} {'line': 1, 'ch': 17, 'pos': 39}\n{'pos': 29, 'line': 1, 'ch': 7} {'line': 1, 'ch': 17, 'pos': 39}\n{'pos': 29, 'line': 1, 'ch': 7} {'line': 1, 'ch': 12, 'pos': 34}\n{'line': 1, 'ch': 13, 'pos': 35} {'line': 1, 'ch': 15, 'pos': 37}\n[35, 36, 37, 38, 39, 40, 41, 42, 43, 44] 35\n{'line': 1, 'ch': 13, 'pos': 35} {'line': 1, 'ch': 15, 'pos': 37}\n{'line': 1, 'ch': 13, 'pos': 35} {'line': 1, 'ch': 15, 'pos': 37}\n{'line': 1, 'ch': 13, 'pos': 35} {'line': 1, 'ch': 15, 'pos': 37}\n{'line': 1, 'ch': 13, 'pos': 35} {'line': 1, 'ch': 15, 'pos': 37}\n{'pos': 38, 'line': 1, 'ch': 16} {'line': 1, 'ch': 17, 'pos': 39}\n{'pos': 29, 'line': 1, 'ch': 7} {'line': 1, 'ch': 17, 'pos': 39}\n{'pos': 29, 'line': 1, 'ch': 7} {'line': 1, 'ch': 12, 'pos': 34}\n{'line': 1, 'ch': 13, 'pos': 35} {'line': 1, 'ch': 15, 'pos': 37}\n{'pos': 38, 'line': 1, 'ch': 16} {'line': 1, 'ch': 17, 'pos': 39}\n[38, 39, 40, 41, 42, 43, 44] 38\n{'pos': 38, 'line': 1, 'ch': 16} {'line': 1, 'ch': 17, 'pos': 39}\n{'pos': 38, 'line': 1, 'ch': 16} {'line': 1, 'ch': 17, 'pos': 39}\n{'pos': 38, 'line': 1, 'ch': 16} {'line': 1, 'ch': 17, 'pos': 39}\n{'pos': 29, 'line': 1, 'ch': 7} {'line': 1, 'ch': 17, 'pos': 39}\n{'pos': 49, 'line': 2, 'ch': 8} {'line': 2, 'ch': 15, 'pos': 57}\n{'pos': 26, 'line': 1, 'ch': 4} {'line': 2, 'ch': 15, 'pos': 57}\n{'pos': 29, 'line': 1, 'ch': 7} {'line': 1, 'ch': 17, 'pos': 39}\n{'pos': 49, 'line': 2, 'ch': 8} {'line': 2, 'ch': 15, 'pos': 57}\n{'pos': 26, 'line': 1, 'ch': 4} {'line': 2, 'ch': 15, 'pos': 57}\n{'pos': 29, 'line': 1, 'ch': 7} {'line': 1, 'ch': 17, 'pos': 39}\n{'pos': 49, 'line': 2, 'ch': 8} {'line': 2, 'ch': 15, 'pos': 57}\n{'pos': 26, 'line': 1, 'ch': 4} {'line': 2, 'ch': 15, 'pos': 57}\n{'pos': 29, 'line': 1, 'ch': 7} {'line': 1, 'ch': 17, 'pos': 39}\n{'pos': 49, 'line': 2, 'ch': 8} {'line': 2, 'ch': 15, 'pos': 57}\n{'pos': 26, 'line': 1, 'ch': 4} {'line': 2, 'ch': 15, 'pos': 57}\n{'pos': 29, 'line': 1, 'ch': 7} {'line': 1, 'ch': 17, 'pos': 39}\n{'pos': 49, 'line': 2, 'ch': 8} {'line': 2, 'ch': 15, 'pos': 57}\n{'pos': 26, 'line': 1, 'ch': 4} {'line': 2, 'ch': 15, 'pos': 57}\n{'pos': 29, 'line': 1, 'ch': 7} {'line': 1, 'ch': 17, 'pos': 39}\n{'pos': 49, 'line': 2, 'ch': 8} {'line': 2, 'ch': 15, 'pos': 57}\n","output_type":"stream"},{"execution_count":10,"output_type":"execute_result","data":{"text/plain":"[]"},"metadata":{}}]},{"created":104,"parent":"c.1.13","raw":[]}]},{"vers":[{"created":10,"parent":"c.2.0","raw":[]}]},{"vers":[{"created":20,"parent":"c.3.0","raw":[]},{"created":101,"parent":"c.3.1","raw":[{"execution_count":11,"output_type":"execute_result","data":{"text/plain":"{'type': 'Module',\n 'content': [{'type': 'For',\n   'content': [{'syntok': 'for'},\n    {'syntok': ' '},\n    {'type': 'Name',\n     'content': [{'syntok': 'i'}],\n     'literal': None,\n     'start': {'line': 0, 'ch': 4, 'pos': 4},\n     'end': {'line': 0, 'ch': 5, 'pos': 5}},\n    {'syntok': ' '},\n    {'syntok': 'in'},\n    {'syntok': ' '},\n    {'type': 'Call',\n     'content': [{'type': 'Name',\n       'content': [{'syntok': 'range'}],\n       'literal': None,\n       'start': {'line': 0, 'ch': 9, 'pos': 9},\n       'end': {'line': 0, 'ch': 14, 'pos': 14}},\n      {'syntok': '('},\n      {'type': 'Num',\n       'content': [],\n       'literal': '0',\n       'start': {'pos': 15, 'line': 0, 'ch': 15},\n       'end': {'line': 0, 'ch': 16, 'pos': 16}},\n      {'syntok': ','},\n      {'type': 'Num',\n       'content': [],\n       'literal': '10',\n       'start': {'pos': 17, 'line': 0, 'ch': 17},\n       'end': {'line': 0, 'ch': 19, 'pos': 19}},\n      {'syntok': ')'}],\n     'literal': None,\n     'start': {'pos': 9, 'line': 0, 'ch': 9},\n     'end': {'line': 0, 'ch': 20, 'pos': 20}},\n    {'syntok': ':'},\n    {'syntok': '\\n'},\n    {'syntok': ' '},\n    {'syntok': ' '},\n    {'syntok': ' '},\n    {'syntok': ' '},\n    {'type': 'If',\n     'content': [{'syntok': 'if'},\n      {'syntok': ' '},\n      {'type': 'Compare',\n       'content': [{'type': 'BinOp',\n         'content': [{'type': 'Name',\n           'content': [{'syntok': 'i'}],\n           'literal': None,\n           'start': {'line': 1, 'ch': 7, 'pos': 29},\n           'end': {'line': 1, 'ch': 8, 'pos': 30},\n           'dirty': True},\n          {'syntok': ' '},\n          {'type': 'Mod',\n           'content': [{'syntok': '%'}],\n           'literal': None,\n           'start': {'line': 1, 'ch': 9, 'pos': 31},\n           'end': {'line': 1, 'ch': 10, 'pos': 32},\n           'dirty': True},\n          {'syntok': ' '},\n          {'type': 'Num',\n           'content': [],\n           'literal': '2',\n           'start': {'pos': 33, 'line': 1, 'ch': 11},\n           'end': {'line': 1, 'ch': 12, 'pos': 34},\n           'dirty': True}],\n         'literal': None,\n         'start': {'pos': 29, 'line': 1, 'ch': 7},\n         'end': {'line': 1, 'ch': 12, 'pos': 34},\n         'dirty': True},\n        {'syntok': ' '},\n        {'type': 'Eq',\n         'content': [{'syntok': '=='}],\n         'literal': None,\n         'start': {'line': 1, 'ch': 13, 'pos': 35},\n         'end': {'line': 1, 'ch': 15, 'pos': 37},\n         'dirty': True},\n        {'syntok': ' '},\n        {'type': 'Num',\n         'content': [],\n         'literal': '0',\n         'start': {'pos': 38, 'line': 1, 'ch': 16},\n         'end': {'line': 1, 'ch': 17, 'pos': 39},\n         'dirty': True}],\n       'literal': None,\n       'start': {'pos': 29, 'line': 1, 'ch': 7},\n       'end': {'line': 1, 'ch': 17, 'pos': 39},\n       'dirty': True},\n      {'syntok': ':'},\n      {'syntok': '\\n'},\n      {'syntok': ' '},\n      {'syntok': ' '},\n      {'syntok': ' '},\n      {'syntok': ' '},\n      {'syntok': ' '},\n      {'syntok': ' '},\n      {'syntok': ' '},\n      {'syntok': ' '},\n      {'type': 'Expr',\n       'content': [{'type': 'Call',\n         'content': [{'type': 'Name',\n           'content': [{'syntok': 'print'}],\n           'literal': None,\n           'start': {'line': 2, 'ch': 8, 'pos': 49},\n           'end': {'line': 2, 'ch': 13, 'pos': 54}},\n          {'syntok': '('},\n          {'type': 'Name',\n           'content': [{'syntok': 'i'}],\n           'literal': None,\n           'start': {'line': 2, 'ch': 14, 'pos': 55},\n           'end': {'line': 2, 'ch': 15, 'pos': 56}},\n          {'syntok': ')'}],\n         'literal': None,\n         'start': {'pos': 49, 'line': 2, 'ch': 8},\n         'end': {'line': 2, 'ch': 15, 'pos': 57}}],\n       'literal': None,\n       'start': {'pos': 49, 'line': 2, 'ch': 8},\n       'end': {'line': 2, 'ch': 15, 'pos': 57}}],\n     'literal': None,\n     'start': {'pos': 26, 'line': 1, 'ch': 4},\n     'end': {'line': 2, 'ch': 15, 'pos': 57},\n     'dirty': True}],\n   'literal': None,\n   'start': {'pos': 0, 'line': 0, 'ch': 0},\n   'end': {'line': 2, 'ch': 15, 'pos': 57},\n   'dirty': True}],\n 'literal': None,\n 'start': {'line': 0, 'ch': 0, 'pos': 0},\n 'end': {'line': 2, 'ch': 15, 'pos': 57},\n 'dirty': True}"},"metadata":{}}]}]},{"vers":[{"created":25,"parent":"c.4.0","raw":[]},{"created":26,"parent":"c.4.1","raw":[{"name":"stdout","text":"Delete \"l\" from position 7\nAdd \"n\" to position 8\nDelete \"l\" from position 10\n","output_type":"stream"}]},{"created":36,"parent":"c.4.1","raw":[{"name":"stdout","text":"Delete \"i\" from position 26\nDelete \"f\" from position 27\nDelete \" \" from position 28\nDelete \"i\" from position 29\nDelete \" \" from position 30\nDelete \"%\" from position 31\nDelete \" \" from position 32\nDelete \"2\" from position 33\nDelete \" \" from position 34\nDelete \"=\" from position 35\nDelete \"=\" from position 36\nDelete \" \" from position 37\nDelete \"0\" from position 38\nDelete \":\" from position 39\nDelete \"\n\" from position 40\nDelete \" \" from position 41\nDelete \" \" from position 42\nDelete \" \" from position 43\nDelete \" \" from position 44\n","output_type":"stream"}]},{"created":49,"parent":"c.4.4","raw":[{"name":"stdout","text":"Delete \"i\" from position 26\nDelete \"f\" from position 27\nDelete \" \" from position 28\nDelete \"i\" from position 29\nDelete \" \" from position 30\nDelete \"%\" from position 31\nDelete \" \" from position 32\nDelete \"2\" from position 33\nDelete \" \" from position 34\nDelete \"=\" from position 35\nDelete \"=\" from position 36\nDelete \" \" from position 37\nDelete \"0\" from position 38\nDelete \":\" from position 39\nDelete \"\n\" from position 40\nDelete \" \" from position 41\nDelete \" \" from position 42\nDelete \" \" from position 43\nDelete \" \" from position 44\n","output_type":"stream"},{"execution_count":39,"output_type":"execute_result","data":{"text/plain":"[26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44]"},"metadata":{}}]},{"created":54,"parent":"c.4.5","raw":[{"name":"stdout","text":"Delete \"i\" from position 26\nDelete \"f\" from position 27\nDelete \" \" from position 28\nDelete \"i\" from position 29\nDelete \" \" from position 30\nDelete \"%\" from position 31\nDelete \" \" from position 32\nDelete \"2\" from position 33\nDelete \" \" from position 34\nDelete \"=\" from position 35\nDelete \"=\" from position 36\nDelete \" \" from position 37\nDelete \"0\" from position 38\nDelete \":\" from position 39\nDelete \"\n\" from position 40\nDelete \" \" from position 41\nDelete \" \" from position 42\nDelete \" \" from position 43\nDelete \" \" from position 44\n","output_type":"stream"}]}]},{"vers":[{"created":31,"parent":"c.5.0","raw":[]},{"created":33,"parent":"c.5.1","raw":[{"name":"stdout","text":"0\n2\n4\n6\n8\n","output_type":"stream"}]}]},{"vers":[{"created":41,"parent":"c.6.0","raw":[]}]},{"vers":[{"created":100,"parent":"c.7.0","raw":[]},{"created":271,"parent":"c.7.1","raw":[{"execution_count":127,"output_type":"execute_result","data":{"text/plain":"'\\n'"},"metadata":{}}]},{"created":280,"parent":"c.7.5","raw":[{"name":"stdout","text":"[]\n","output_type":"stream"}]},{"created":281,"parent":"c.7.6","raw":[{"name":"stdout","text":"6\n[]\n","output_type":"stream"}]},{"created":282,"parent":"c.7.7","raw":[{"name":"stdout","text":"6 ['if', ' ', 'i', ' ', '%', ' ', '2', ' ', '==', ' ', '0', ':', '\\n', ' ', ' ', ' ', ' ', '9']\n[]\n","output_type":"stream"}]},{"created":288,"parent":"c.7.8","raw":[{"execution_count":135,"output_type":"execute_result","data":{"text/plain":"'\\nAssume all new tokens in B are new. Try to match them.\\n'"},"metadata":{}}]},{"created":305,"parent":"c.7.8","raw":[{"execution_count":146,"output_type":"execute_result","data":{"text/plain":"'\\nAssume all new tokens in B are new. Try to match them.\\n'"},"metadata":{}}]},{"created":320,"parent":"c.7.8","raw":[{"execution_count":159,"output_type":"execute_result","data":{"text/plain":"'\\nAssume all new tokens in B are new. Try to match them.\\n'"},"metadata":{}}]}]},{"vers":[{"created":125,"parent":"c.8.0","raw":[]},{"created":131,"parent":"c.8.2","raw":[{"execution_count":13,"output_type":"execute_result","data":{"text/plain":"{'a.0': {'type': 'Module',\n  'content': ['a.1'],\n  'literal': None,\n  'start': {'line': 0, 'ch': 0, 'pos': 0},\n  'end': {'line': 2, 'ch': 15, 'pos': 57}},\n 'a.1': {'type': 'For',\n  'content': ['a.2',\n   'a.3',\n   'a.4',\n   'a.6',\n   'a.7',\n   'a.8',\n   'a.9',\n   'a.17',\n   'a.18',\n   'a.19',\n   'a.20',\n   'a.21',\n   'a.22',\n   'a.23'],\n  'literal': None,\n  'start': {'pos': 0, 'line': 0, 'ch': 0},\n  'end': {'line': 2, 'ch': 15, 'pos': 57}},\n 'a.2': {'syntok': 'for'},\n 'a.3': {'syntok': ' '},\n 'a.4': {'type': 'Name',\n  'content': ['a.5'],\n  'literal': None,\n  'start': {'line': 0, 'ch': 4, 'pos': 4},\n  'end': {'line': 0, 'ch': 5, 'pos': 5}},\n 'a.5': {'syntok': 'i'},\n 'a.6': {'syntok': ' '},\n 'a.7': {'syntok': 'in'},\n 'a.8': {'syntok': ' '},\n 'a.9': {'type': 'Call',\n  'content': ['a.10', 'a.12', 'a.13', 'a.14', 'a.15', 'a.16'],\n  'literal': None,\n  'start': {'pos': 9, 'line': 0, 'ch': 9},\n  'end': {'line': 0, 'ch': 20, 'pos': 20}},\n 'a.10': {'type': 'Name',\n  'content': ['a.11'],\n  'literal': None,\n  'start': {'line': 0, 'ch': 9, 'pos': 9},\n  'end': {'line': 0, 'ch': 14, 'pos': 14}},\n 'a.11': {'syntok': 'range'},\n 'a.12': {'syntok': '('},\n 'a.13': {'type': 'Num',\n  'content': [],\n  'literal': '0',\n  'start': {'pos': 15, 'line': 0, 'ch': 15},\n  'end': {'line': 0, 'ch': 16, 'pos': 16}},\n 'a.14': {'syntok': ','},\n 'a.15': {'type': 'Num',\n  'content': [],\n  'literal': '10',\n  'start': {'pos': 17, 'line': 0, 'ch': 17},\n  'end': {'line': 0, 'ch': 19, 'pos': 19}},\n 'a.16': {'syntok': ')'},\n 'a.17': {'syntok': ':'},\n 'a.18': {'syntok': '\\n'},\n 'a.19': {'syntok': ' '},\n 'a.20': {'syntok': ' '},\n 'a.21': {'syntok': ' '},\n 'a.22': {'syntok': ' '},\n 'a.23': {'type': 'If',\n  'content': ['a.24',\n   'a.25',\n   'a.26',\n   'a.40',\n   'a.41',\n   'a.42',\n   'a.43',\n   'a.44',\n   'a.45',\n   'a.46',\n   'a.47',\n   'a.48',\n   'a.49',\n   'a.50'],\n  'literal': None,\n  'start': {'pos': 26, 'line': 1, 'ch': 4},\n  'end': {'line': 2, 'ch': 15, 'pos': 57}},\n 'a.24': {'syntok': 'if'},\n 'a.25': {'syntok': ' '},\n 'a.26': {'type': 'Compare',\n  'content': ['a.27', 'a.35', 'a.36', 'a.38', 'a.39'],\n  'literal': None,\n  'start': {'pos': 29, 'line': 1, 'ch': 7},\n  'end': {'line': 1, 'ch': 17, 'pos': 39}},\n 'a.27': {'type': 'BinOp',\n  'content': ['a.28', 'a.30', 'a.31', 'a.33', 'a.34'],\n  'literal': None,\n  'start': {'pos': 29, 'line': 1, 'ch': 7},\n  'end': {'line': 1, 'ch': 12, 'pos': 34}},\n 'a.28': {'type': 'Name',\n  'content': ['a.29'],\n  'literal': None,\n  'start': {'line': 1, 'ch': 7, 'pos': 29},\n  'end': {'line': 1, 'ch': 8, 'pos': 30}},\n 'a.29': {'syntok': 'i'},\n 'a.30': {'syntok': ' '},\n 'a.31': {'type': 'Mod',\n  'content': ['a.32'],\n  'literal': None,\n  'start': {'line': 1, 'ch': 9, 'pos': 31},\n  'end': {'line': 1, 'ch': 10, 'pos': 32}},\n 'a.32': {'syntok': '%'},\n 'a.33': {'syntok': ' '},\n 'a.34': {'type': 'Num',\n  'content': [],\n  'literal': '2',\n  'start': {'pos': 33, 'line': 1, 'ch': 11},\n  'end': {'line': 1, 'ch': 12, 'pos': 34}},\n 'a.35': {'syntok': ' '},\n 'a.36': {'type': 'Eq',\n  'content': ['a.37'],\n  'literal': None,\n  'start': {'line': 1, 'ch': 13, 'pos': 35},\n  'end': {'line': 1, 'ch': 15, 'pos': 37}},\n 'a.37': {'syntok': '=='},\n 'a.38': {'syntok': ' '},\n 'a.39': {'type': 'Num',\n  'content': [],\n  'literal': '0',\n  'start': {'pos': 38, 'line': 1, 'ch': 16},\n  'end': {'line': 1, 'ch': 17, 'pos': 39}},\n 'a.40': {'syntok': ':'},\n 'a.41': {'syntok': '\\n'},\n 'a.42': {'syntok': ' '},\n 'a.43': {'syntok': ' '},\n 'a.44': {'syntok': ' '},\n 'a.45': {'syntok': ' '},\n 'a.46': {'syntok': ' '},\n 'a.47': {'syntok': ' '},\n 'a.48': {'syntok': ' '},\n 'a.49': {'syntok': ' '},\n 'a.50': {'type': 'Expr',\n  'content': ['a.51'],\n  'literal': None,\n  'start': {'pos': 49, 'line': 2, 'ch': 8},\n  'end': {'line': 2, 'ch': 15, 'pos': 57}},\n 'a.51': {'type': 'Call',\n  'content': ['a.52', 'a.54', 'a.55', 'a.57'],\n  'literal': None,\n  'start': {'pos': 49, 'line': 2, 'ch': 8},\n  'end': {'line': 2, 'ch': 15, 'pos': 57}},\n 'a.52': {'type': 'Name',\n  'content': ['a.53'],\n  'literal': None,\n  'start': {'line': 2, 'ch': 8, 'pos': 49},\n  'end': {'line': 2, 'ch': 13, 'pos': 54}},\n 'a.53': {'syntok': 'print'},\n 'a.54': {'syntok': '('},\n 'a.55': {'type': 'Name',\n  'content': ['a.56'],\n  'literal': None,\n  'start': {'line': 2, 'ch': 14, 'pos': 55},\n  'end': {'line': 2, 'ch': 15, 'pos': 56}},\n 'a.56': {'syntok': 'i'},\n 'a.57': {'syntok': ')'}}"},"metadata":{}}]},{"created":132,"parent":"c.8.3","raw":[{"execution_count":14,"output_type":"execute_result","data":{"text/plain":"'b.0'"},"metadata":{}}]},{"created":133,"parent":"c.8.4","raw":[{"execution_count":15,"output_type":"execute_result","data":{"text/plain":"{'b.0': {'type': 'Module',\n  'content': ['b.1'],\n  'literal': None,\n  'start': {'line': 0, 'ch': 0, 'pos': 0},\n  'end': {'line': 1, 'ch': 15, 'pos': 38}},\n 'b.1': {'type': 'For',\n  'content': ['b.2',\n   'b.3',\n   'b.4',\n   'b.6',\n   'b.7',\n   'b.8',\n   'b.9',\n   'b.17',\n   'b.18',\n   'b.19',\n   'b.20',\n   'b.21',\n   'b.22',\n   'b.23',\n   'b.24',\n   'b.25',\n   'b.26',\n   'b.27'],\n  'literal': None,\n  'start': {'pos': 0, 'line': 0, 'ch': 0},\n  'end': {'line': 1, 'ch': 15, 'pos': 38}},\n 'b.2': {'syntok': 'for'},\n 'b.3': {'syntok': ' '},\n 'b.4': {'type': 'Name',\n  'content': ['b.5'],\n  'literal': None,\n  'start': {'line': 0, 'ch': 4, 'pos': 4},\n  'end': {'line': 0, 'ch': 5, 'pos': 5}},\n 'b.5': {'syntok': 'i'},\n 'b.6': {'syntok': ' '},\n 'b.7': {'syntok': 'in'},\n 'b.8': {'syntok': ' '},\n 'b.9': {'type': 'Call',\n  'content': ['b.10', 'b.12', 'b.13', 'b.14', 'b.15', 'b.16'],\n  'literal': None,\n  'start': {'pos': 9, 'line': 0, 'ch': 9},\n  'end': {'line': 0, 'ch': 20, 'pos': 20}},\n 'b.10': {'type': 'Name',\n  'content': ['b.11'],\n  'literal': None,\n  'start': {'line': 0, 'ch': 9, 'pos': 9},\n  'end': {'line': 0, 'ch': 14, 'pos': 14}},\n 'b.11': {'syntok': 'range'},\n 'b.12': {'syntok': '('},\n 'b.13': {'type': 'Num',\n  'content': [],\n  'literal': '0',\n  'start': {'pos': 15, 'line': 0, 'ch': 15},\n  'end': {'line': 0, 'ch': 16, 'pos': 16}},\n 'b.14': {'syntok': ','},\n 'b.15': {'type': 'Num',\n  'content': [],\n  'literal': '10',\n  'start': {'pos': 17, 'line': 0, 'ch': 17},\n  'end': {'line': 0, 'ch': 19, 'pos': 19}},\n 'b.16': {'syntok': ')'},\n 'b.17': {'syntok': ':'},\n 'b.18': {'syntok': '\\n'},\n 'b.19': {'syntok': ' '},\n 'b.20': {'syntok': ' '},\n 'b.21': {'syntok': ' '},\n 'b.22': {'syntok': ' '},\n 'b.23': {'syntok': ' '},\n 'b.24': {'syntok': ' '},\n 'b.25': {'syntok': ' '},\n 'b.26': {'syntok': ' '},\n 'b.27': {'type': 'Expr',\n  'content': ['b.28'],\n  'literal': None,\n  'start': {'pos': 30, 'line': 1, 'ch': 8},\n  'end': {'line': 1, 'ch': 15, 'pos': 38}},\n 'b.28': {'type': 'Call',\n  'content': ['b.29', 'b.31', 'b.32', 'b.34'],\n  'literal': None,\n  'start': {'pos': 30, 'line': 1, 'ch': 8},\n  'end': {'line': 1, 'ch': 15, 'pos': 38}},\n 'b.29': {'type': 'Name',\n  'content': ['b.30'],\n  'literal': None,\n  'start': {'line': 1, 'ch': 8, 'pos': 30},\n  'end': {'line': 1, 'ch': 13, 'pos': 35}},\n 'b.30': {'syntok': 'print'},\n 'b.31': {'syntok': '('},\n 'b.32': {'type': 'Name',\n  'content': ['b.33'],\n  'literal': None,\n  'start': {'line': 1, 'ch': 14, 'pos': 36},\n  'end': {'line': 1, 'ch': 15, 'pos': 37}},\n 'b.33': {'syntok': 'i'},\n 'b.34': {'syntok': ')'}}"},"metadata":{}}]},{"created":134,"parent":"c.8.5","raw":[{"execution_count":16,"output_type":"execute_result","data":{"text/plain":"'b.0'"},"metadata":{}}]},{"created":136,"parent":"c.8.7","raw":[{"execution_count":17,"output_type":"execute_result","data":{"text/plain":"'b.0'"},"metadata":{}}]},{"created":138,"parent":"c.8.8","raw":[{"execution_count":18,"output_type":"execute_result","data":{"text/plain":"<function dict.keys>"},"metadata":{}}]},{"created":139,"parent":"c.8.9","raw":[{"execution_count":19,"output_type":"execute_result","data":{"text/plain":"dict_keys(['b.0', 'b.1', 'b.2', 'b.3', 'b.4', 'b.5', 'b.6', 'b.7', 'b.8', 'b.9', 'b.10', 'b.11', 'b.12', 'b.13', 'b.14', 'b.15', 'b.16', 'b.17', 'b.18', 'b.19', 'b.20', 'b.21', 'b.22', 'b.23', 'b.24', 'b.25', 'b.26', 'b.27', 'b.28', 'b.29', 'b.30', 'b.31', 'b.32', 'b.33', 'b.34'])"},"metadata":{}}]},{"created":142,"parent":"c.8.11","raw":[{"execution_count":21,"output_type":"execute_result","data":{"text/plain":"'b.0'"},"metadata":{}}]},{"created":157,"parent":"c.8.12","raw":[{"name":"stdout","text":"{'b.0': {'type': 'Module', 'content': ['b.1'], 'literal': None, 'start': {'line': 0, 'ch': 0, 'pos': 0}, 'end': {'line': 1, 'ch': 15, 'pos': 38}}, 'b.1': {'type': 'For', 'content': ['b.2', 'b.3', 'b.4', 'b.6', 'b.7', 'b.8', 'b.9', 'b.17', 'b.18', 'b.19', 'b.20', 'b.21', 'b.22', 'b.23', 'b.24', 'b.25', 'b.26', 'b.27'], 'literal': None, 'start': {'pos': 0, 'line': 0, 'ch': 0}, 'end': {'line': 1, 'ch': 15, 'pos': 38}}, 'b.2': {'syntok': 'for'}, 'b.3': {'syntok': ' '}, 'b.4': {'type': 'Name', 'content': ['b.5'], 'literal': None, 'start': {'line': 0, 'ch': 4, 'pos': 4}, 'end': {'line': 0, 'ch': 5, 'pos': 5}}, 'b.5': {'syntok': 'i'}, 'b.6': {'syntok': ' '}, 'b.7': {'syntok': 'in'}, 'b.8': {'syntok': ' '}, 'b.9': {'type': 'Call', 'content': ['b.10', 'b.12', 'b.13', 'b.14', 'b.15', 'b.16'], 'literal': None, 'start': {'pos': 9, 'line': 0, 'ch': 9}, 'end': {'line': 0, 'ch': 20, 'pos': 20}}, 'b.10': {'type': 'Name', 'content': ['b.11'], 'literal': None, 'start': {'line': 0, 'ch': 9, 'pos': 9}, 'end': {'line': 0, 'ch': 14, 'pos': 14}}, 'b.11': {'syntok': 'range'}, 'b.12': {'syntok': '('}, 'b.13': {'type': 'Num', 'content': [], 'literal': '0', 'start': {'pos': 15, 'line': 0, 'ch': 15}, 'end': {'line': 0, 'ch': 16, 'pos': 16}}, 'b.14': {'syntok': ','}, 'b.15': {'type': 'Num', 'content': [], 'literal': '10', 'start': {'pos': 17, 'line': 0, 'ch': 17}, 'end': {'line': 0, 'ch': 19, 'pos': 19}}, 'b.16': {'syntok': ')'}, 'b.17': {'syntok': ':'}, 'b.18': {'syntok': '\\n'}, 'b.19': {'syntok': ' '}, 'b.20': {'syntok': ' '}, 'b.21': {'syntok': ' '}, 'b.22': {'syntok': ' '}, 'b.23': {'syntok': ' '}, 'b.24': {'syntok': ' '}, 'b.25': {'syntok': ' '}, 'b.26': {'syntok': ' '}, 'b.27': {'type': 'Expr', 'content': ['b.28'], 'literal': None, 'start': {'pos': 30, 'line': 1, 'ch': 8}, 'end': {'line': 1, 'ch': 15, 'pos': 38}}, 'b.28': {'type': 'Call', 'content': ['b.29', 'b.31', 'b.32', 'b.34'], 'literal': None, 'start': {'pos': 30, 'line': 1, 'ch': 8}, 'end': {'line': 1, 'ch': 15, 'pos': 38}}, 'b.29': {'type': 'Name', 'content': ['b.30'], 'literal': None, 'start': {'line': 1, 'ch': 8, 'pos': 30}, 'end': {'line': 1, 'ch': 13, 'pos': 35}}, 'b.30': {'syntok': 'print'}, 'b.31': {'syntok': '('}, 'b.32': {'type': 'Name', 'content': ['b.33'], 'literal': None, 'start': {'line': 1, 'ch': 14, 'pos': 36}, 'end': {'line': 1, 'ch': 15, 'pos': 37}}, 'b.33': {'syntok': 'i'}, 'b.34': {'syntok': ')'}}\n","output_type":"stream"}]},{"created":163,"parent":"c.8.13","raw":[{"execution_count":41,"output_type":"execute_result","data":{"text/plain":"'b.0'"},"metadata":{}}]},{"created":183,"parent":"c.8.13","raw":[{"execution_count":53,"output_type":"execute_result","data":{"text/plain":"'b.0'"},"metadata":{}}]},{"created":266,"parent":"c.8.13","raw":[{"execution_count":123,"output_type":"execute_result","data":{"text/plain":"'b.0'"},"metadata":{}}]},{"created":298,"parent":"c.8.14","raw":[{"execution_count":139,"output_type":"execute_result","data":{"text/plain":"{'b.0': {'type': 'Module',\n  'content': ['b.1'],\n  'literal': None,\n  'start': {'line': 0, 'ch': 0, 'pos': 0},\n  'end': {'line': 1, 'ch': 19, 'pos': 42}},\n 'b.1': {'type': 'For',\n  'content': ['b.2',\n   'b.3',\n   'b.4',\n   'b.6',\n   'b.7',\n   'b.8',\n   'b.9',\n   'b.17',\n   'b.18',\n   'b.19',\n   'b.20',\n   'b.21',\n   'b.22',\n   'b.23',\n   'b.24',\n   'b.25',\n   'b.26',\n   'b.27'],\n  'literal': None,\n  'start': {'pos': 0, 'line': 0, 'ch': 0},\n  'end': {'line': 1, 'ch': 19, 'pos': 42}},\n 'b.2': {'syntok': 'for'},\n 'b.3': {'syntok': ' '},\n 'b.4': {'type': 'Name',\n  'content': ['b.5'],\n  'literal': None,\n  'start': {'line': 0, 'ch': 4, 'pos': 4},\n  'end': {'line': 0, 'ch': 5, 'pos': 5}},\n 'b.5': {'syntok': 'i'},\n 'b.6': {'syntok': ' '},\n 'b.7': {'syntok': 'in'},\n 'b.8': {'syntok': ' '},\n 'b.9': {'type': 'Call',\n  'content': ['b.10', 'b.12', 'b.13', 'b.14', 'b.15', 'b.16'],\n  'literal': None,\n  'start': {'pos': 9, 'line': 0, 'ch': 9},\n  'end': {'line': 0, 'ch': 20, 'pos': 20}},\n 'b.10': {'type': 'Name',\n  'content': ['b.11'],\n  'literal': None,\n  'start': {'line': 0, 'ch': 9, 'pos': 9},\n  'end': {'line': 0, 'ch': 14, 'pos': 14}},\n 'b.11': {'syntok': 'range'},\n 'b.12': {'syntok': '('},\n 'b.13': {'type': 'Num',\n  'content': [],\n  'literal': '0',\n  'start': {'pos': 15, 'line': 0, 'ch': 15},\n  'end': {'line': 0, 'ch': 16, 'pos': 16}},\n 'b.14': {'syntok': ','},\n 'b.15': {'type': 'Num',\n  'content': [],\n  'literal': '10',\n  'start': {'pos': 17, 'line': 0, 'ch': 17},\n  'end': {'line': 0, 'ch': 19, 'pos': 19}},\n 'b.16': {'syntok': ')'},\n 'b.17': {'syntok': ':'},\n 'b.18': {'syntok': '\\n'},\n 'b.19': {'syntok': ' '},\n 'b.20': {'syntok': ' '},\n 'b.21': {'syntok': ' '},\n 'b.22': {'syntok': ' '},\n 'b.23': {'syntok': ' '},\n 'b.24': {'syntok': ' '},\n 'b.25': {'syntok': ' '},\n 'b.26': {'syntok': ' '},\n 'b.27': {'type': 'Expr',\n  'content': ['b.28'],\n  'literal': None,\n  'start': {'pos': 30, 'line': 1, 'ch': 8},\n  'end': {'line': 1, 'ch': 19, 'pos': 42}},\n 'b.28': {'type': 'Call',\n  'content': ['b.29', 'b.31', 'b.32', 'b.40'],\n  'literal': None,\n  'start': {'pos': 30, 'line': 1, 'ch': 8},\n  'end': {'line': 1, 'ch': 19, 'pos': 42}},\n 'b.29': {'type': 'Name',\n  'content': ['b.30'],\n  'literal': None,\n  'start': {'line': 1, 'ch': 8, 'pos': 30},\n  'end': {'line': 1, 'ch': 13, 'pos': 35}},\n 'b.30': {'syntok': 'print'},\n 'b.31': {'syntok': '('},\n 'b.32': {'type': 'BinOp',\n  'content': ['b.33', 'b.35', 'b.36', 'b.38', 'b.39'],\n  'literal': None,\n  'start': {'pos': 36, 'line': 1, 'ch': 14},\n  'end': {'line': 1, 'ch': 19, 'pos': 41}},\n 'b.33': {'type': 'Name',\n  'content': ['b.34'],\n  'literal': None,\n  'start': {'line': 1, 'ch': 14, 'pos': 36},\n  'end': {'line': 1, 'ch': 15, 'pos': 37}},\n 'b.34': {'syntok': 'i'},\n 'b.35': {'syntok': ' '},\n 'b.36': {'type': 'Add',\n  'content': ['b.37'],\n  'literal': None,\n  'start': {'line': 1, 'ch': 16, 'pos': 38},\n  'end': {'line': 1, 'ch': 17, 'pos': 39}},\n 'b.37': {'syntok': '+'},\n 'b.38': {'syntok': ' '},\n 'b.39': {'type': 'Num',\n  'content': [],\n  'literal': '6',\n  'start': {'pos': 40, 'line': 1, 'ch': 18},\n  'end': {'line': 1, 'ch': 19, 'pos': 41}},\n 'b.40': {'syntok': ')'}}"},"metadata":{}}]},{"created":300,"parent":"c.8.14","raw":[{"execution_count":141,"output_type":"execute_result","data":{"text/plain":"{'b.0': {'type': 'Module',\n  'content': ['b.1'],\n  'literal': None,\n  'start': {'line': 0, 'ch': 0, 'pos': 0},\n  'end': {'line': 1, 'ch': 19, 'pos': 42}},\n 'b.1': {'type': 'For',\n  'content': ['b.2',\n   'b.3',\n   'b.4',\n   'b.6',\n   'b.7',\n   'b.8',\n   'b.9',\n   'b.17',\n   'b.18',\n   'b.19',\n   'b.20',\n   'b.21',\n   'b.22',\n   'b.23',\n   'b.24',\n   'b.25',\n   'b.26',\n   'b.27'],\n  'literal': None,\n  'start': {'pos': 0, 'line': 0, 'ch': 0},\n  'end': {'line': 1, 'ch': 19, 'pos': 42},\n  'parent': 'b.0'},\n 'b.2': {'syntok': 'for', 'parent': 'b.1'},\n 'b.3': {'syntok': ' ', 'parent': 'b.1'},\n 'b.4': {'type': 'Name',\n  'content': ['b.5'],\n  'literal': None,\n  'start': {'line': 0, 'ch': 4, 'pos': 4},\n  'end': {'line': 0, 'ch': 5, 'pos': 5},\n  'parent': 'b.1'},\n 'b.5': {'syntok': 'i', 'parent': 'b.4'},\n 'b.6': {'syntok': ' ', 'parent': 'b.1'},\n 'b.7': {'syntok': 'in', 'parent': 'b.1'},\n 'b.8': {'syntok': ' ', 'parent': 'b.1'},\n 'b.9': {'type': 'Call',\n  'content': ['b.10', 'b.12', 'b.13', 'b.14', 'b.15', 'b.16'],\n  'literal': None,\n  'start': {'pos': 9, 'line': 0, 'ch': 9},\n  'end': {'line': 0, 'ch': 20, 'pos': 20},\n  'parent': 'b.1'},\n 'b.10': {'type': 'Name',\n  'content': ['b.11'],\n  'literal': None,\n  'start': {'line': 0, 'ch': 9, 'pos': 9},\n  'end': {'line': 0, 'ch': 14, 'pos': 14},\n  'parent': 'b.9'},\n 'b.11': {'syntok': 'range', 'parent': 'b.10'},\n 'b.12': {'syntok': '(', 'parent': 'b.9'},\n 'b.13': {'type': 'Num',\n  'content': [],\n  'literal': '0',\n  'start': {'pos': 15, 'line': 0, 'ch': 15},\n  'end': {'line': 0, 'ch': 16, 'pos': 16},\n  'parent': 'b.9'},\n 'b.14': {'syntok': ',', 'parent': 'b.9'},\n 'b.15': {'type': 'Num',\n  'content': [],\n  'literal': '10',\n  'start': {'pos': 17, 'line': 0, 'ch': 17},\n  'end': {'line': 0, 'ch': 19, 'pos': 19},\n  'parent': 'b.9'},\n 'b.16': {'syntok': ')', 'parent': 'b.9'},\n 'b.17': {'syntok': ':', 'parent': 'b.1'},\n 'b.18': {'syntok': '\\n', 'parent': 'b.1'},\n 'b.19': {'syntok': ' ', 'parent': 'b.1'},\n 'b.20': {'syntok': ' ', 'parent': 'b.1'},\n 'b.21': {'syntok': ' ', 'parent': 'b.1'},\n 'b.22': {'syntok': ' ', 'parent': 'b.1'},\n 'b.23': {'syntok': ' ', 'parent': 'b.1'},\n 'b.24': {'syntok': ' ', 'parent': 'b.1'},\n 'b.25': {'syntok': ' ', 'parent': 'b.1'},\n 'b.26': {'syntok': ' ', 'parent': 'b.1'},\n 'b.27': {'type': 'Expr',\n  'content': ['b.28'],\n  'literal': None,\n  'start': {'pos': 30, 'line': 1, 'ch': 8},\n  'end': {'line': 1, 'ch': 19, 'pos': 42},\n  'parent': 'b.1'},\n 'b.28': {'type': 'Call',\n  'content': ['b.29', 'b.31', 'b.32', 'b.40'],\n  'literal': None,\n  'start': {'pos': 30, 'line': 1, 'ch': 8},\n  'end': {'line': 1, 'ch': 19, 'pos': 42},\n  'parent': 'b.27'},\n 'b.29': {'type': 'Name',\n  'content': ['b.30'],\n  'literal': None,\n  'start': {'line': 1, 'ch': 8, 'pos': 30},\n  'end': {'line': 1, 'ch': 13, 'pos': 35},\n  'parent': 'b.28'},\n 'b.30': {'syntok': 'print', 'parent': 'b.29'},\n 'b.31': {'syntok': '(', 'parent': 'b.28'},\n 'b.32': {'type': 'BinOp',\n  'content': ['b.33', 'b.35', 'b.36', 'b.38', 'b.39'],\n  'literal': None,\n  'start': {'pos': 36, 'line': 1, 'ch': 14},\n  'end': {'line': 1, 'ch': 19, 'pos': 41},\n  'parent': 'b.28'},\n 'b.33': {'type': 'Name',\n  'content': ['b.34'],\n  'literal': None,\n  'start': {'line': 1, 'ch': 14, 'pos': 36},\n  'end': {'line': 1, 'ch': 15, 'pos': 37},\n  'parent': 'b.32'},\n 'b.34': {'syntok': 'i', 'parent': 'b.33'},\n 'b.35': {'syntok': ' ', 'parent': 'b.32'},\n 'b.36': {'type': 'Add',\n  'content': ['b.37'],\n  'literal': None,\n  'start': {'line': 1, 'ch': 16, 'pos': 38},\n  'end': {'line': 1, 'ch': 17, 'pos': 39},\n  'parent': 'b.32'},\n 'b.37': {'syntok': '+', 'parent': 'b.36'},\n 'b.38': {'syntok': ' ', 'parent': 'b.32'},\n 'b.39': {'type': 'Num',\n  'content': [],\n  'literal': '6',\n  'start': {'pos': 40, 'line': 1, 'ch': 18},\n  'end': {'line': 1, 'ch': 19, 'pos': 41},\n  'parent': 'b.32'},\n 'b.40': {'syntok': ')', 'parent': 'b.28'}}"},"metadata":{}}]},{"created":301,"parent":"c.8.15","raw":[{"execution_count":142,"output_type":"execute_result","data":{"text/plain":"'b.0'"},"metadata":{}}]},{"created":316,"parent":"c.8.15","raw":[{"execution_count":155,"output_type":"execute_result","data":{"text/plain":"'b.0'"},"metadata":{}}]}]},{"vers":[{"created":127,"parent":"c.9.0","raw":[]}]},{"vers":[{"created":143,"parent":"c.10.0","raw":[]},{"created":144,"parent":"c.10.1","raw":[{"execution_count":24,"output_type":"execute_result","data":{"text/plain":"['a.0',\n 'a.1',\n 'a.4',\n 'a.9',\n 'a.10',\n 'a.13',\n 'a.15',\n 'a.23',\n 'a.26',\n 'a.27',\n 'a.28',\n 'a.31',\n 'a.34',\n 'a.36',\n 'a.39',\n 'a.50',\n 'a.51',\n 'a.52',\n 'a.55']"},"metadata":{}}]},{"created":146,"parent":"c.10.3","raw":[{"name":"stdout","text":"<generator object <genexpr> at 0x10d178570>\n","output_type":"stream"}]},{"created":147,"parent":"c.10.4","raw":[{"name":"stdout","text":"<generator object <genexpr> at 0x10d178d58>\n","output_type":"stream"}]},{"created":148,"parent":"c.10.5","raw":[{"name":"stdout","text":"[None, None, None, None, None, '0', '10', None, None, None, None]\n","output_type":"stream"}]},{"created":149,"parent":"c.10.6","raw":[{"name":"stdout","text":"{'type': 'Module', 'content': ['b.1'], 'literal': None, 'start': {'line': 0, 'ch': 0, 'pos': 0}, 'end': {'line': 1, 'ch': 15, 'pos': 38}}\n{'type': 'For', 'content': ['b.2', 'b.3', 'b.4', 'b.6', 'b.7', 'b.8', 'b.9', 'b.17', 'b.18', 'b.19', 'b.20', 'b.21', 'b.22', 'b.23', 'b.24', 'b.25', 'b.26', 'b.27'], 'literal': None, 'start': {'pos': 0, 'line': 0, 'ch': 0}, 'end': {'line': 1, 'ch': 15, 'pos': 38}}\n{'type': 'Name', 'content': ['b.5'], 'literal': None, 'start': {'line': 0, 'ch': 4, 'pos': 4}, 'end': {'line': 0, 'ch': 5, 'pos': 5}}\n{'type': 'Call', 'content': ['b.10', 'b.12', 'b.13', 'b.14', 'b.15', 'b.16'], 'literal': None, 'start': {'pos': 9, 'line': 0, 'ch': 9}, 'end': {'line': 0, 'ch': 20, 'pos': 20}}\n{'type': 'Name', 'content': ['b.11'], 'literal': None, 'start': {'line': 0, 'ch': 9, 'pos': 9}, 'end': {'line': 0, 'ch': 14, 'pos': 14}}\n{'type': 'Num', 'content': [], 'literal': '0', 'start': {'pos': 15, 'line': 0, 'ch': 15}, 'end': {'line': 0, 'ch': 16, 'pos': 16}}\n{'type': 'Num', 'content': [], 'literal': '10', 'start': {'pos': 17, 'line': 0, 'ch': 17}, 'end': {'line': 0, 'ch': 19, 'pos': 19}}\n{'type': 'Expr', 'content': ['b.28'], 'literal': None, 'start': {'pos': 30, 'line': 1, 'ch': 8}, 'end': {'line': 1, 'ch': 15, 'pos': 38}}\n{'type': 'Call', 'content': ['b.29', 'b.31', 'b.32', 'b.34'], 'literal': None, 'start': {'pos': 30, 'line': 1, 'ch': 8}, 'end': {'line': 1, 'ch': 15, 'pos': 38}}\n{'type': 'Name', 'content': ['b.30'], 'literal': None, 'start': {'line': 1, 'ch': 8, 'pos': 30}, 'end': {'line': 1, 'ch': 13, 'pos': 35}}\n{'type': 'Name', 'content': ['b.33'], 'literal': None, 'start': {'line': 1, 'ch': 14, 'pos': 36}, 'end': {'line': 1, 'ch': 15, 'pos': 37}}\n[None, None, None, None, None, '0', '10', None, None, None, None]\n","output_type":"stream"}]},{"created":150,"parent":"c.10.7","raw":[{"traceback":["\u001b[0;31m--------------------------------------------------\u001b[0m","\u001b[0;31mKeyError\u001b[0m         Traceback (most recent call last)","\u001b[0;32m<ipython-input-30-b8c285e30aec>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0mliteral_a\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0mkey\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mdic_a\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 4\u001b[0;31m     \u001b[0;32mif\u001b[0m \u001b[0mdic_a\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'literal'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      5\u001b[0m         \u001b[0mliteral_a\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mappend\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      6\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mKeyError\u001b[0m: 'literal'"],"ename":"KeyError","evalue":"'literal'","output_type":"error"}]},{"created":151,"parent":"c.10.8","raw":[{"name":"stdout","text":"{'type': 'Num', 'content': [], 'literal': '0', 'start': {'pos': 15, 'line': 0, 'ch': 15}, 'end': {'line': 0, 'ch': 16, 'pos': 16}}\n{'type': 'Num', 'content': [], 'literal': '10', 'start': {'pos': 17, 'line': 0, 'ch': 17}, 'end': {'line': 0, 'ch': 19, 'pos': 19}}\n['0', '10']\n","output_type":"stream"}]},{"created":155,"parent":"c.10.9","raw":[{"name":"stdout","text":"{'type': 'Num', 'content': [], 'literal': '0', 'start': {'pos': 15, 'line': 0, 'ch': 15}, 'end': {'line': 0, 'ch': 16, 'pos': 16}}\n{'type': 'Num', 'content': [], 'literal': '10', 'start': {'pos': 17, 'line': 0, 'ch': 17}, 'end': {'line': 0, 'ch': 19, 'pos': 19}}\n","output_type":"stream"},{"traceback":["\u001b[0;31m--------------------------------------------------\u001b[0m","\u001b[0;31mKeyError\u001b[0m         Traceback (most recent call last)","\u001b[0;32m<ipython-input-34-4751cf69c441>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     13\u001b[0m         \u001b[0mliteral_b\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mappend\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     14\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 15\u001b[0;31m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mdic_b\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mk\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'literal'\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0mk\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mliteral_b\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m<ipython-input-34-4751cf69c441>\u001b[0m in \u001b[0;36m<listcomp>\u001b[0;34m(.0)\u001b[0m\n\u001b[1;32m     13\u001b[0m         \u001b[0mliteral_b\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mappend\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     14\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 15\u001b[0;31m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mdic_b\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mk\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'literal'\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0mk\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mliteral_b\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mKeyError\u001b[0m: 'literal'"],"ename":"KeyError","evalue":"'literal'","output_type":"error"}]},{"created":156,"parent":"c.10.10","raw":[{"name":"stdout","text":"{'type': 'Num', 'content': [], 'literal': '0', 'start': {'pos': 15, 'line': 0, 'ch': 15}, 'end': {'line': 0, 'ch': 16, 'pos': 16}}\n{'type': 'Num', 'content': [], 'literal': '10', 'start': {'pos': 17, 'line': 0, 'ch': 17}, 'end': {'line': 0, 'ch': 19, 'pos': 19}}\n","output_type":"stream"}]},{"created":158,"parent":"c.10.11","raw":[{"name":"stdout","text":"{'type': 'Num', 'content': [], 'literal': '0', 'start': {'pos': 15, 'line': 0, 'ch': 15}, 'end': {'line': 0, 'ch': 16, 'pos': 16}}\n{'type': 'Num', 'content': [], 'literal': '10', 'start': {'pos': 17, 'line': 0, 'ch': 17}, 'end': {'line': 0, 'ch': 19, 'pos': 19}}\n['b.2', 'b.3', 'b.5', 'b.6', 'b.7', 'b.8', 'b.11', 'b.12', 'b.13', 'b.14', 'b.15', 'b.16', 'b.17', 'b.18', 'b.19', 'b.20', 'b.21', 'b.22', 'b.23', 'b.24', 'b.25', 'b.26', 'b.30', 'b.31', 'b.33', 'b.34']\n","output_type":"stream"}]},{"created":160,"parent":"c.10.13","raw":[{"name":"stdout","text":"for\n \ni\n \nin\n \nrange\n(\n0\n,\n10\n)\n:\n\n\n \n \n \n \n \n \n \n \nprint\n(\ni\n)\n","output_type":"stream"}]},{"created":161,"parent":"c.10.14","raw":[{"name":"stdout","text":"for i in range(0,10):\n        print(i)\n","output_type":"stream"}]},{"created":164,"parent":"c.10.16","raw":[{"name":"stdout","text":"for i in range(0,10):\n    if i % 2 == 0:\n        print(i)\n\n############################\n\nfor i in range(0,10):\n        print(i)\n","output_type":"stream"}]},{"created":170,"parent":"c.10.17","raw":[{"name":"stdout","text":"for i in range(0,10):\n    if i % 2 == 0:\n        print(i)\n\n############################\n\nfor i in range(0,10):\n        print(i)\n","output_type":"stream"},{"execution_count":43,"output_type":"execute_result","data":{"text/plain":"['for',\n ' ',\n 'i',\n ' ',\n 'in',\n ' ',\n 'range',\n '(',\n '0',\n ',',\n '10',\n ')',\n ':',\n '\\n',\n ' ',\n ' ',\n ' ',\n ' ',\n 'if',\n ' ',\n 'i',\n ' ',\n '%',\n ' ',\n '2',\n ' ',\n '==',\n ' ',\n '0',\n ':',\n '\\n',\n ' ',\n ' ',\n ' ',\n ' ',\n ' ',\n ' ',\n ' ',\n ' ',\n 'print',\n '(',\n 'i',\n ')']"},"metadata":{}}]},{"created":171,"parent":"c.10.18","raw":[{"name":"stdout","text":"for i in range(0,10):\n    if i % 2 == 0:\n        print(i)\n\n############################\n\nfor i in range(0,10):\n        print(i)\n","output_type":"stream"}]},{"created":184,"parent":"c.10.18","raw":[{"name":"stdout","text":"for i in range(0,10):\n    if i % 2 == 0:\n        print(i)\n\n############################\n\nfor i in range(0,10):\n        print(i + 6)\n","output_type":"stream"}]},{"created":267,"parent":"c.10.18","raw":[{"name":"stdout","text":"for i in range(0,10):\n    if i % 2 == 0:\n        print(i + 9)\n\n############################\n\nfor i in range(0,10):\n        print(i + 6)\n","output_type":"stream"}]}]},{"vers":[{"created":152,"parent":"c.11.0","raw":[]},{"created":153,"parent":"c.11.1","raw":[{"name":"stdout","text":"{'b.0': {'type': 'Module', 'content': ['b.1'], 'literal': None, 'start': {'line': 0, 'ch': 0, 'pos': 0}, 'end': {'line': 1, 'ch': 15, 'pos': 38}}, 'b.1': {'type': 'For', 'content': ['b.2', 'b.3', 'b.4', 'b.6', 'b.7', 'b.8', 'b.9', 'b.17', 'b.18', 'b.19', 'b.20', 'b.21', 'b.22', 'b.23', 'b.24', 'b.25', 'b.26', 'b.27'], 'literal': None, 'start': {'pos': 0, 'line': 0, 'ch': 0}, 'end': {'line': 1, 'ch': 15, 'pos': 38}}, 'b.2': {'syntok': 'for'}, 'b.3': {'syntok': ' '}, 'b.4': {'type': 'Name', 'content': ['b.5'], 'literal': None, 'start': {'line': 0, 'ch': 4, 'pos': 4}, 'end': {'line': 0, 'ch': 5, 'pos': 5}}, 'b.5': {'syntok': 'i'}, 'b.6': {'syntok': ' '}, 'b.7': {'syntok': 'in'}, 'b.8': {'syntok': ' '}, 'b.9': {'type': 'Call', 'content': ['b.10', 'b.12', 'b.13', 'b.14', 'b.15', 'b.16'], 'literal': None, 'start': {'pos': 9, 'line': 0, 'ch': 9}, 'end': {'line': 0, 'ch': 20, 'pos': 20}}, 'b.10': {'type': 'Name', 'content': ['b.11'], 'literal': None, 'start': {'line': 0, 'ch': 9, 'pos': 9}, 'end': {'line': 0, 'ch': 14, 'pos': 14}}, 'b.11': {'syntok': 'range'}, 'b.12': {'syntok': '('}, 'b.13': {'type': 'Num', 'content': [], 'literal': '0', 'start': {'pos': 15, 'line': 0, 'ch': 15}, 'end': {'line': 0, 'ch': 16, 'pos': 16}}, 'b.14': {'syntok': ','}, 'b.15': {'type': 'Num', 'content': [], 'literal': '10', 'start': {'pos': 17, 'line': 0, 'ch': 17}, 'end': {'line': 0, 'ch': 19, 'pos': 19}}, 'b.16': {'syntok': ')'}, 'b.17': {'syntok': ':'}, 'b.18': {'syntok': '\\n'}, 'b.19': {'syntok': ' '}, 'b.20': {'syntok': ' '}, 'b.21': {'syntok': ' '}, 'b.22': {'syntok': ' '}, 'b.23': {'syntok': ' '}, 'b.24': {'syntok': ' '}, 'b.25': {'syntok': ' '}, 'b.26': {'syntok': ' '}, 'b.27': {'type': 'Expr', 'content': ['b.28'], 'literal': None, 'start': {'pos': 30, 'line': 1, 'ch': 8}, 'end': {'line': 1, 'ch': 15, 'pos': 38}}, 'b.28': {'type': 'Call', 'content': ['b.29', 'b.31', 'b.32', 'b.34'], 'literal': None, 'start': {'pos': 30, 'line': 1, 'ch': 8}, 'end': {'line': 1, 'ch': 15, 'pos': 38}}, 'b.29': {'type': 'Name', 'content': ['b.30'], 'literal': None, 'start': {'line': 1, 'ch': 8, 'pos': 30}, 'end': {'line': 1, 'ch': 13, 'pos': 35}}, 'b.30': {'syntok': 'print'}, 'b.31': {'syntok': '('}, 'b.32': {'type': 'Name', 'content': ['b.33'], 'literal': None, 'start': {'line': 1, 'ch': 14, 'pos': 36}, 'end': {'line': 1, 'ch': 15, 'pos': 37}}, 'b.33': {'syntok': 'i'}, 'b.34': {'syntok': ')'}}\n","output_type":"stream"}]}]},{"vers":[{"created":165,"parent":"c.12.0","raw":[]}]},{"vers":[{"created":172,"parent":"c.13.0","raw":[]},{"created":174,"parent":"c.13.2","raw":[{"execution_count":46,"output_type":"execute_result","data":{"text/plain":"<generator object unified_diff at 0x10d196fc0>"},"metadata":{}}]},{"created":176,"parent":"c.13.3","raw":[{"name":"stdout","text":"Delete \"\n\" from position 0\nAdd \"\n\" to position 1\nDelete \"f\" from position 6\nDelete \" \" from position 7\nDelete \"i\" from position 8\nDelete \" \" from position 9\nDelete \"%\" from position 10\nDelete \" \" from position 11\nDelete \"2\" from position 12\nDelete \" \" from position 13\nDelete \"=\" from position 14\nDelete \" \" from position 15\nDelete \"0\" from position 16\nDelete \":\" from position 17\nDelete \"\n\" from position 18\nDelete \" \" from position 19\nDelete \" \" from position 20\nDelete \" \" from position 21\nDelete \" \" from position 22\n","output_type":"stream"}]},{"created":177,"parent":"c.13.4","raw":[{"name":"stdout","text":"Delete \"\n\" from position 1\nDelete \"f\" from position 7\nDelete \" \" from position 8\nDelete \"i\" from position 9\nDelete \" \" from position 10\nDelete \"%\" from position 11\nDelete \" \" from position 12\nDelete \"2\" from position 13\nDelete \" \" from position 14\nDelete \"=\" from position 15\nDelete \" \" from position 16\nDelete \"0\" from position 17\nDelete \":\" from position 18\nDelete \"\n\" from position 19\nDelete \" \" from position 20\nDelete \" \" from position 21\nDelete \" \" from position 22\nDelete \" \" from position 23\nDelete \"\n\" from position 27\n","output_type":"stream"}]},{"created":178,"parent":"c.13.5","raw":[{"name":"stdout","text":"Delete \"\n\" from position 0\nAdd \"\n\" to position 1\nDelete \"f\" from position 6\nDelete \" \" from position 7\nDelete \"i\" from position 8\nDelete \" \" from position 9\nDelete \"%\" from position 10\nDelete \" \" from position 11\nDelete \"2\" from position 12\nDelete \" \" from position 13\nDelete \"=\" from position 14\nDelete \" \" from position 15\nDelete \"0\" from position 16\nDelete \":\" from position 17\nDelete \"\n\" from position 18\nDelete \" \" from position 19\nDelete \" \" from position 20\nDelete \" \" from position 21\nDelete \" \" from position 22\n","output_type":"stream"}]},{"created":180,"parent":"c.13.7","raw":[{"name":"stdout","text":"--- \n+++ \n@@ -16,23 +16,6 @@\n      -if- -i- -%- -2- -==- -0-:-\n- - - -       ","output_type":"stream"}]},{"created":185,"parent":"c.13.7","raw":[{"name":"stdout","text":"--- \n+++ \n@@ -16,23 +16,6 @@\n      -if- -i- -%- -2- -==- -0-:-\n- - - -       @@ -40,4 +23,8 @@\n print ( i+ +++ +6 )","output_type":"stream"}]},{"created":186,"parent":"c.13.8","raw":[{"name":"stdout","text":"*** \n--- \n***************\n*** 16,38 ****\n         - if-  - i-  - %-  - 2-  - ==-  - 0- :- \n-  -  -  -           --- 16,21 ----\n***************\n*** 40,43 ****\n--- 23,30 ----\n  print  (  i+  + ++  + 6  )","output_type":"stream"}]},{"created":188,"parent":"c.13.9","raw":[{"name":"stdout","text":"Delete \"\n\" from position 1\nDelete \"f\" from position 7\nDelete \" \" from position 8\nDelete \"i\" from position 9\nDelete \" \" from position 10\nDelete \"%\" from position 11\nDelete \" \" from position 12\nDelete \"2\" from position 13\nDelete \" \" from position 14\nDelete \"=\" from position 15\nDelete \" \" from position 16\nDelete \"0\" from position 17\nDelete \":\" from position 18\nDelete \"\n\" from position 19\nDelete \" \" from position 20\nDelete \" \" from position 21\nDelete \" \" from position 22\nDelete \" \" from position 23\nDelete \"\n\" from position 27\nDelete \"\n\" from position 30\nAdd \" \" to position 34\nAdd \"+\" to position 35\nAdd \" \" to position 36\nAdd \"6\" to position 37\n","output_type":"stream"}]},{"created":193,"parent":"c.13.10","raw":[{"name":"stdout","text":"Delete \"\n\" from position 1\nDelete \"f\" from position 7\nDelete \" \" from position 8\nDelete \"i\" from position 9\nDelete \" \" from position 10\nDelete \"%\" from position 11\nDelete \" \" from position 12\nDelete \"2\" from position 13\nDelete \" \" from position 14\nDelete \"=\" from position 15\nDelete \" \" from position 16\nDelete \"0\" from position 17\nDelete \":\" from position 18\nDelete \"\n\" from position 19\nDelete \" \" from position 20\nDelete \" \" from position 21\nDelete \" \" from position 22\nDelete \" \" from position 23\nDelete \"\n\" from position 27\nDelete \"\n\" from position 30\n+  \nAdd \" \" to position 34\n+ +\nAdd \"+\" to position 35\n+  \nAdd \" \" to position 36\n+ 6\nAdd \"6\" to position 37\n","output_type":"stream"}]},{"created":197,"parent":"c.13.12","raw":[{"name":"stdout","text":"Delete \"\n\" from position 0\nAdd \"\n\" to position 1\nDelete \"f\" from position 6\nDelete \" \" from position 7\nDelete \"i\" from position 8\nDelete \" \" from position 9\nDelete \"%\" from position 10\nDelete \" \" from position 11\nDelete \"2\" from position 12\nDelete \" \" from position 13\nDelete \"=\" from position 14\nDelete \" \" from position 15\nDelete \"0\" from position 16\nDelete \":\" from position 17\nDelete \"\n\" from position 18\nDelete \" \" from position 19\nDelete \" \" from position 20\nDelete \" \" from position 21\nDelete \" \" from position 22\nAdd \" \" to position 30\nAdd \"+\" to position 31\nAdd \" \" to position 32\nAdd \"6\" to position 33\n","output_type":"stream"}]},{"created":198,"parent":"c.13.13","raw":[{"name":"stdout","text":"Delete \"\n\" from position 0\n+++ \n\nAdd \"\n\" to position 1\nDelete \"f\" from position 6\nDelete \" \" from position 7\nDelete \"i\" from position 8\nDelete \" \" from position 9\nDelete \"%\" from position 10\nDelete \" \" from position 11\nDelete \"2\" from position 12\nDelete \" \" from position 13\nDelete \"=\" from position 14\nDelete \" \" from position 15\nDelete \"0\" from position 16\nDelete \":\" from position 17\nDelete \"\n\" from position 18\nDelete \" \" from position 19\nDelete \" \" from position 20\nDelete \" \" from position 21\nDelete \" \" from position 22\n+ \nAdd \" \" to position 30\n++\nAdd \"+\" to position 31\n+ \nAdd \" \" to position 32\n+6\nAdd \"6\" to position 33\n","output_type":"stream"}]},{"created":204,"parent":"c.13.14","raw":[{"name":"stdout","text":"Delete \"\n\" from position 0\nAdd \"\n\" to position 1\nDelete \"f\" from position 6\nDelete \" \" from position 7\nDelete \"i\" from position 8\nDelete \" \" from position 9\nDelete \"%\" from position 10\nDelete \" \" from position 11\nDelete \"2\" from position 12\nDelete \" \" from position 13\nDelete \"=\" from position 14\nDelete \" \" from position 15\nDelete \"0\" from position 16\nDelete \":\" from position 17\nDelete \"\n\" from position 18\nDelete \" \" from position 19\nDelete \" \" from position 20\nDelete \" \" from position 21\nDelete \" \" from position 22\nAdd \" \" to position 30\nAdd \"+\" to position 31\nAdd \" \" to position 32\nAdd \"6\" to position 33\n","output_type":"stream"}]},{"created":208,"parent":"c.13.15","raw":[{"name":"stdout","text":"Delete \"\n\" from position 1\nDelete \"f\" from position 7\nDelete \" \" from position 8\nDelete \"i\" from position 9\nDelete \" \" from position 10\nDelete \"%\" from position 11\nDelete \" \" from position 12\nDelete \"2\" from position 13\nDelete \" \" from position 14\nDelete \"=\" from position 15\nDelete \" \" from position 16\nDelete \"0\" from position 17\nDelete \":\" from position 18\nDelete \"\n\" from position 19\nDelete \" \" from position 20\nDelete \" \" from position 21\nDelete \" \" from position 22\nDelete \" \" from position 23\nDelete \"\n\" from position 27\nDelete \"\n\" from position 30\nAdd \" \" to position 34\nAdd \"+\" to position 35\nAdd \" \" to position 36\nAdd \"6\" to position 37\n","output_type":"stream"}]},{"created":211,"parent":"c.13.16","raw":[{"name":"stdout","text":"Delete \"--- \n\" from position 1\nDelete \"- if\" from position 7\nDelete \"-  \" from position 8\nDelete \"- i\" from position 9\nDelete \"-  \" from position 10\nDelete \"- %\" from position 11\nDelete \"-  \" from position 12\nDelete \"- 2\" from position 13\nDelete \"-  \" from position 14\nDelete \"- ==\" from position 15\nDelete \"-  \" from position 16\nDelete \"- 0\" from position 17\nDelete \"- :\" from position 18\nDelete \"- \n\" from position 19\nDelete \"-  \" from position 20\nDelete \"-  \" from position 21\nDelete \"-  \" from position 22\nDelete \"-  \" from position 23\nDelete \"--- 16,21 ----\n\" from position 27\nDelete \"--- 23,30 ----\n\" from position 30\nAdd \"+  \" to position 34\nAdd \"+ +\" to position 35\nAdd \"+  \" to position 36\nAdd \"+ 6\" to position 37\n","output_type":"stream"}]},{"created":220,"parent":"c.13.17","raw":[{"name":"stdout","text":"*** \n 0\n--- \n 1\n***************\n 2\n*** 16,38 ****\n 3\n    4\n    5\n    6\n- if 7\n-   8\n- i 9\n-   10\n- % 11\n-   12\n- 2 13\n-   14\n- == 15\n-   16\n- 0 17\n- : 18\n- \n 19\n-   20\n-   21\n-   22\n-   23\n    24\n    25\n    26\n--- 16,21 ----\n 27\n***************\n 28\n*** 40,43 ****\n 29\n--- 23,30 ----\n 30\n  print 31\n  ( 32\n  i 33\n+   34\n+ + 35\n+   36\n+ 6 37\n  ) 38\n","output_type":"stream"}]},{"created":222,"parent":"c.13.18","raw":[{"name":"stdout","text":"*** \n\n--- \n\n***************\n\n*** 16,38 ****\n\n   \n   \n   \n- if\n-  \n- i\n-  \n- %\n-  \n- 2\n-  \n- ==\n-  \n- 0\n- :\n- \n\n-  \n-  \n-  \n-  \n   \n   \n   \n--- 16,21 ----\n\n***************\n\n*** 40,43 ****\n\n--- 23,30 ----\n\n  print\n  (\n  i\n+  \n+ +\n+  \n+ 6\n  )\n","output_type":"stream"}]},{"created":227,"parent":"c.13.19","raw":[{"traceback":["\u001b[0;31m--------------------------------------------------\u001b[0m","\u001b[0;31mModuleNotFoundError\u001b[0mTraceback (most recent call last)","\u001b[0;32m<ipython-input-96-df65cab4f115>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0mPass\u001b[0m \u001b[0;36m1\u001b[0m \u001b[0;34m:\u001b[0m \u001b[0mnarrow\u001b[0m \u001b[0mwhere\u001b[0m \u001b[0mthe\u001b[0m \u001b[0mchange\u001b[0m \u001b[0moccured\u001b[0m\u001b[0;34m.\u001b[0m \u001b[0mDiff\u001b[0m \u001b[0mtok_a\u001b[0m \u001b[0;32mwith\u001b[0m \u001b[0mtok_b\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m '''\n\u001b[0;32m----> 4\u001b[0;31m \u001b[0;32mimport\u001b[0m \u001b[0mSequenceMatcher\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      5\u001b[0m \u001b[0ms\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mSequenceMatcher\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;32mNone\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtokens_a\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtokens_b\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      6\u001b[0m \u001b[0ms\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget_matching_blocks\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mModuleNotFoundError\u001b[0m: No module named 'SequenceMatcher'"],"ename":"ModuleNotFoundError","evalue":"No module named 'SequenceMatcher'","output_type":"error"}]},{"created":228,"parent":"c.13.20","raw":[{"execution_count":99,"output_type":"execute_result","data":{"text/plain":"[Match(a=0, b=0, size=18),\n Match(a=35, b=18, size=7),\n Match(a=42, b=29, size=1),\n Match(a=43, b=30, size=0)]"},"metadata":{}}]},{"created":242,"parent":"c.13.21","raw":[{"execution_count":110,"output_type":"execute_result","data":{"text/plain":"[Match(a=0, b=0, size=18),\n Match(a=35, b=18, size=7),\n Match(a=42, b=29, size=1),\n Match(a=43, b=30, size=0)]"},"metadata":{}}]},{"created":243,"parent":"c.13.22","raw":[{"execution_count":111,"output_type":"execute_result","data":{"text/plain":"[Match(a=0, b=0, size=18),\n Match(a=35, b=18, size=7),\n Match(a=42, b=29, size=1),\n Match(a=43, b=30, size=0)]"},"metadata":{}}]},{"created":244,"parent":"c.13.23","raw":[{"execution_count":112,"output_type":"execute_result","data":{"text/plain":"[Match(a=0, b=0, size=18),\n Match(a=35, b=18, size=7),\n Match(a=42, b=29, size=1),\n Match(a=43, b=30, size=0)]"},"metadata":{}}]},{"created":246,"parent":"c.13.24","raw":[{"name":"stdout","text":"0 0 18\n35 18 7\n42 29 1\n43 30 0\n","output_type":"stream"}]},{"created":248,"parent":"c.13.26","raw":[{"name":"stdout","text":"a.2 b.2\na.3 b.3\na.5 b.5\na.6 b.6\na.7 b.7\na.8 b.8\na.11 b.11\na.12 b.12\na.13 b.13\na.14 b.14\na.15 b.15\na.16 b.16\na.17 b.17\na.18 b.18\na.19 b.19\na.20 b.20\na.21 b.21\na.22 b.22\na.2 b.2\na.3 b.3\na.5 b.5\na.6 b.6\na.7 b.7\na.8 b.8\na.11 b.11\na.2 b.2\n","output_type":"stream"}]},{"created":250,"parent":"c.13.27","raw":[{"name":"stdout","text":"a.2 b.2\na.3 b.3\na.5 b.5\na.6 b.6\na.7 b.7\na.8 b.8\na.11 b.11\na.12 b.12\na.13 b.13\na.14 b.14\na.15 b.15\na.16 b.16\na.17 b.17\na.18 b.18\na.19 b.19\na.20 b.20\na.21 b.21\na.22 b.22\na.46 b.23\na.47 b.24\na.48 b.25\na.49 b.26\na.53 b.30\na.54 b.31\na.56 b.34\na.57 b.40\n","output_type":"stream"}]},{"created":251,"parent":"c.13.28","raw":[]},{"created":326,"parent":"c.13.29","raw":[{"execution_count":161,"output_type":"execute_result","data":{"text/plain":"{'b.0': {'type': 'Module',\n  'content': ['b.1'],\n  'literal': None,\n  'start': {'line': 0, 'ch': 0, 'pos': 0},\n  'end': {'line': 1, 'ch': 19, 'pos': 42},\n  'new': True},\n 'b.1': {'type': 'For',\n  'content': ['b.2',\n   'b.3',\n   'b.4',\n   'b.6',\n   'b.7',\n   'b.8',\n   'b.9',\n   'b.17',\n   'b.18',\n   'b.19',\n   'b.20',\n   'b.21',\n   'b.22',\n   'b.23',\n   'b.24',\n   'b.25',\n   'b.26',\n   'b.27'],\n  'literal': None,\n  'start': {'pos': 0, 'line': 0, 'ch': 0},\n  'end': {'line': 1, 'ch': 19, 'pos': 42},\n  'parent': 'b.0',\n  'new': True},\n 'b.2': {'syntok': 'for', 'parent': 'b.1', 'match': 'a.2'},\n 'b.3': {'syntok': ' ', 'parent': 'b.1', 'match': 'a.3'},\n 'b.4': {'type': 'Name',\n  'content': ['b.5'],\n  'literal': None,\n  'start': {'line': 0, 'ch': 4, 'pos': 4},\n  'end': {'line': 0, 'ch': 5, 'pos': 5},\n  'parent': 'b.1'},\n 'b.5': {'syntok': 'i', 'parent': 'b.4', 'match': 'a.5'},\n 'b.6': {'syntok': ' ', 'parent': 'b.1', 'match': 'a.6'},\n 'b.7': {'syntok': 'in', 'parent': 'b.1', 'match': 'a.7'},\n 'b.8': {'syntok': ' ', 'parent': 'b.1', 'match': 'a.8'},\n 'b.9': {'type': 'Call',\n  'content': ['b.10', 'b.12', 'b.13', 'b.14', 'b.15', 'b.16'],\n  'literal': None,\n  'start': {'pos': 9, 'line': 0, 'ch': 9},\n  'end': {'line': 0, 'ch': 20, 'pos': 20},\n  'parent': 'b.1'},\n 'b.10': {'type': 'Name',\n  'content': ['b.11'],\n  'literal': None,\n  'start': {'line': 0, 'ch': 9, 'pos': 9},\n  'end': {'line': 0, 'ch': 14, 'pos': 14},\n  'parent': 'b.9'},\n 'b.11': {'syntok': 'range', 'parent': 'b.10', 'match': 'a.11'},\n 'b.12': {'syntok': '(', 'parent': 'b.9', 'match': 'a.12'},\n 'b.13': {'type': 'Num',\n  'content': [],\n  'literal': '0',\n  'start': {'pos': 15, 'line': 0, 'ch': 15},\n  'end': {'line': 0, 'ch': 16, 'pos': 16},\n  'parent': 'b.9',\n  'match': 'a.13'},\n 'b.14': {'syntok': ',', 'parent': 'b.9', 'match': 'a.14'},\n 'b.15': {'type': 'Num',\n  'content': [],\n  'literal': '10',\n  'start': {'pos': 17, 'line': 0, 'ch': 17},\n  'end': {'line': 0, 'ch': 19, 'pos': 19},\n  'parent': 'b.9',\n  'match': 'a.15'},\n 'b.16': {'syntok': ')', 'parent': 'b.9', 'match': 'a.16'},\n 'b.17': {'syntok': ':', 'parent': 'b.1', 'match': 'a.17'},\n 'b.18': {'syntok': '\\n', 'parent': 'b.1', 'match': 'a.18'},\n 'b.19': {'syntok': ' ', 'parent': 'b.1', 'match': 'a.19'},\n 'b.20': {'syntok': ' ', 'parent': 'b.1', 'match': 'a.20'},\n 'b.21': {'syntok': ' ', 'parent': 'b.1', 'match': 'a.21'},\n 'b.22': {'syntok': ' ', 'parent': 'b.1', 'match': 'a.22'},\n 'b.23': {'syntok': ' ', 'parent': 'b.1', 'match': 'a.46'},\n 'b.24': {'syntok': ' ', 'parent': 'b.1', 'match': 'a.47'},\n 'b.25': {'syntok': ' ', 'parent': 'b.1', 'match': 'a.48'},\n 'b.26': {'syntok': ' ', 'parent': 'b.1', 'match': 'a.49'},\n 'b.27': {'type': 'Expr',\n  'content': ['b.28'],\n  'literal': None,\n  'start': {'pos': 30, 'line': 1, 'ch': 8},\n  'end': {'line': 1, 'ch': 19, 'pos': 42},\n  'parent': 'b.1',\n  'new': True},\n 'b.28': {'type': 'Call',\n  'content': ['b.29', 'b.31', 'b.32', 'b.40'],\n  'literal': None,\n  'start': {'pos': 30, 'line': 1, 'ch': 8},\n  'end': {'line': 1, 'ch': 19, 'pos': 42},\n  'parent': 'b.27',\n  'new': True},\n 'b.29': {'type': 'Name',\n  'content': ['b.30'],\n  'literal': None,\n  'start': {'line': 1, 'ch': 8, 'pos': 30},\n  'end': {'line': 1, 'ch': 13, 'pos': 35},\n  'parent': 'b.28'},\n 'b.30': {'syntok': 'print', 'parent': 'b.29', 'match': 'a.53'},\n 'b.31': {'syntok': '(', 'parent': 'b.28', 'match': 'a.54'},\n 'b.32': {'type': 'BinOp',\n  'content': ['b.33', 'b.35', 'b.36', 'b.38', 'b.39'],\n  'literal': None,\n  'start': {'pos': 36, 'line': 1, 'ch': 14},\n  'end': {'line': 1, 'ch': 19, 'pos': 41},\n  'parent': 'b.28',\n  'new': True},\n 'b.33': {'type': 'Name',\n  'content': ['b.34'],\n  'literal': None,\n  'start': {'line': 1, 'ch': 14, 'pos': 36},\n  'end': {'line': 1, 'ch': 15, 'pos': 37},\n  'parent': 'b.32'},\n 'b.34': {'syntok': 'i', 'parent': 'b.33', 'match': 'a.57'},\n 'b.35': {'syntok': ' ', 'parent': 'b.32', 'match': 'a.58'},\n 'b.36': {'type': 'Add',\n  'content': ['b.37'],\n  'literal': None,\n  'start': {'line': 1, 'ch': 16, 'pos': 38},\n  'end': {'line': 1, 'ch': 17, 'pos': 39},\n  'parent': 'b.32'},\n 'b.37': {'syntok': '+', 'parent': 'b.36', 'match': 'a.60'},\n 'b.38': {'syntok': ' ', 'parent': 'b.32', 'match': 'a.61'},\n 'b.39': {'type': 'Num',\n  'content': [],\n  'literal': '6',\n  'start': {'pos': 40, 'line': 1, 'ch': 18},\n  'end': {'line': 1, 'ch': 19, 'pos': 41},\n  'parent': 'b.32',\n  'new': True},\n 'b.40': {'syntok': ')', 'parent': 'b.28', 'match': 'a.63'}}"},"metadata":{}}]},{"created":328,"parent":"c.13.30","raw":[]}]},{"vers":[{"created":189,"parent":"c.14.0","raw":[]},{"created":190,"parent":"c.14.1","raw":[{"name":"stdout","text":" \n","output_type":"stream"}]},{"created":192,"parent":"c.14.3","raw":[{"name":"stdout","text":"['for', ' ', 'i', ' ', 'in', ' ', 'range', '(', '0', ',', '10', ')', ':', '\\n', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'print', '(', 'i', ' ', '+', ' ', '6', ')']\n","output_type":"stream"}]},{"created":195,"parent":"c.14.4","raw":[{"name":"stdout","text":"in\n","output_type":"stream"}]},{"created":196,"parent":"c.14.5","raw":[{"execution_count":65,"output_type":"execute_result","data":{"text/plain":"30"},"metadata":{}}]},{"created":200,"parent":"c.14.6","raw":[{"execution_count":69,"output_type":"execute_result","data":{"text/plain":"'print'"},"metadata":{}}]},{"created":201,"parent":"c.14.7","raw":[{"execution_count":70,"output_type":"execute_result","data":{"text/plain":"' '"},"metadata":{}}]},{"created":202,"parent":"c.14.8","raw":[{"execution_count":72,"output_type":"execute_result","data":{"text/plain":"' '"},"metadata":{}}]},{"created":203,"parent":"c.14.9","raw":[{"execution_count":73,"output_type":"execute_result","data":{"text/plain":"'+'"},"metadata":{}}]},{"created":205,"parent":"c.14.10","raw":[{"execution_count":75,"output_type":"execute_result","data":{"text/plain":"'range'"},"metadata":{}}]},{"created":206,"parent":"c.14.11","raw":[{"execution_count":76,"output_type":"execute_result","data":{"text/plain":"'('"},"metadata":{}}]},{"created":207,"parent":"c.14.12","raw":[{"execution_count":77,"output_type":"execute_result","data":{"text/plain":"'in'"},"metadata":{}}]},{"created":209,"parent":"c.14.13","raw":[{"execution_count":79,"output_type":"execute_result","data":{"text/plain":"['for',\n ' ',\n 'i',\n ' ',\n 'in',\n ' ',\n 'range',\n '(',\n '0',\n ',',\n '10',\n ')',\n ':',\n '\\n',\n ' ',\n ' ',\n ' ',\n ' ',\n ' ',\n ' ',\n ' ',\n ' ',\n 'print',\n '(',\n 'i',\n ' ',\n '+',\n ' ',\n '6',\n ')']"},"metadata":{}}]},{"created":212,"parent":"c.14.14","raw":[{"execution_count":81,"output_type":"execute_result","data":{"text/plain":"'range'"},"metadata":{}}]},{"created":213,"parent":"c.14.15","raw":[{"execution_count":82,"output_type":"execute_result","data":{"text/plain":"'('"},"metadata":{}}]},{"created":214,"parent":"c.14.16","raw":[{"execution_count":83,"output_type":"execute_result","data":{"text/plain":"'0'"},"metadata":{}}]},{"created":215,"parent":"c.14.17","raw":[{"execution_count":84,"output_type":"execute_result","data":{"text/plain":"['for',\n ' ',\n 'i',\n ' ',\n 'in',\n ' ',\n 'range',\n '(',\n '0',\n ',',\n '10',\n ')',\n ':',\n '\\n',\n ' ',\n ' ',\n ' ',\n ' ',\n ' ',\n ' ',\n ' ',\n ' ',\n 'print',\n '(',\n 'i',\n ' ',\n '+',\n ' ',\n '6',\n ')']"},"metadata":{}}]},{"created":216,"parent":"c.14.18","raw":[{"execution_count":85,"output_type":"execute_result","data":{"text/plain":"'0'"},"metadata":{}}]},{"created":217,"parent":"c.14.19","raw":[{"execution_count":86,"output_type":"execute_result","data":{"text/plain":"'('"},"metadata":{}}]},{"created":218,"parent":"c.14.20","raw":[{"execution_count":87,"output_type":"execute_result","data":{"text/plain":"['for',\n ' ',\n 'i',\n ' ',\n 'in',\n ' ',\n 'range',\n '(',\n '0',\n ',',\n '10',\n ')',\n ':',\n '\\n',\n ' ',\n ' ',\n ' ',\n ' ',\n 'if',\n ' ',\n 'i',\n ' ',\n '%',\n ' ',\n '2',\n ' ',\n '==',\n ' ',\n '0',\n ':',\n '\\n',\n ' ',\n ' ',\n ' ',\n ' ',\n ' ',\n ' ',\n ' ',\n ' ',\n 'print',\n '(',\n 'i',\n ')']"},"metadata":{}}]},{"created":219,"parent":"c.14.21","raw":[]},{"created":223,"parent":"c.14.22","raw":[{"execution_count":91,"output_type":"execute_result","data":{"text/plain":"' '"},"metadata":{}}]},{"created":224,"parent":"c.14.23","raw":[{"execution_count":92,"output_type":"execute_result","data":{"text/plain":"' '"},"metadata":{}}]},{"created":225,"parent":"c.14.24","raw":[{"execution_count":93,"output_type":"execute_result","data":{"text/plain":"' '"},"metadata":{}}]},{"created":226,"parent":"c.14.25","raw":[{"execution_count":94,"output_type":"execute_result","data":{"text/plain":"'%'"},"metadata":{}}]},{"created":229,"parent":"c.14.26","raw":[{"execution_count":100,"output_type":"execute_result","data":{"text/plain":"' '"},"metadata":{}}]},{"created":230,"parent":"c.14.27","raw":[{"execution_count":101,"output_type":"execute_result","data":{"text/plain":"[' ', ' ', ' ', ' ', 'print', '(']"},"metadata":{}}]},{"created":231,"parent":"c.14.28","raw":[{"name":"stdout","text":"[' ', ' ', ' ', ' ', 'print', '('] [' ', ' ', ' ', ' ', 'print', '(', 'i']\n","output_type":"stream"}]},{"created":232,"parent":"c.14.29","raw":[{"name":"stdout","text":"[' ', ' ', ' ', ' ', 'print', '('] [' ', ' ', ' ', ' ', 'print', '(']\n","output_type":"stream"}]},{"created":234,"parent":"c.14.31","raw":[{"name":"stdout","text":"[' ', ' ', ' ', ' ', 'print', '(', 'i'] [' ', ' ', ' ', ' ', 'print', '(', 'i']\n","output_type":"stream"}]},{"created":235,"parent":"c.14.32","raw":[{"name":"stdout","text":"[' ', ' ', ' ', ' ', 'print', '(', 'i'] [' ', ' ', ' ', ' ', 'print', '(', 'i']\n[] [':']\n","output_type":"stream"}]},{"created":236,"parent":"c.14.33","raw":[{"name":"stdout","text":"[' ', ' ', ' ', ' ', 'print', '(', 'i'] [' ', ' ', ' ', ' ', 'print', '(', 'i']\n[')'] [')']\n","output_type":"stream"}]},{"created":240,"parent":"c.14.36","raw":[{"name":"stdout","text":"['for', ' ', 'i', ' ', 'in', ' ', 'range', '(', '0', ',', '10', ')', ':', '\\n', ' ', ' ', ' ', ' '] ['for', ' ', 'i', ' ', 'in', ' ', 'range', '(', '0', ',', '10', ')', ':', '\\n', ' ', ' ', ' ', ' ']\n[' ', ' ', ' ', ' ', 'print', '(', 'i'] [' ', ' ', ' ', ' ', 'print', '(', 'i']\n[')'] [')']\n","output_type":"stream"}]}]},{"vers":[{"created":252,"parent":"c.15.0","raw":[]},{"created":254,"parent":"c.15.2","raw":[{"execution_count":119,"output_type":"execute_result","data":{"text/plain":"{'b.0': {'type': 'Module',\n  'content': ['b.1'],\n  'literal': None,\n  'start': {'line': 0, 'ch': 0, 'pos': 0},\n  'end': {'line': 1, 'ch': 19, 'pos': 42}},\n 'b.1': {'type': 'For',\n  'content': ['b.2',\n   'b.3',\n   'b.4',\n   'b.6',\n   'b.7',\n   'b.8',\n   'b.9',\n   'b.17',\n   'b.18',\n   'b.19',\n   'b.20',\n   'b.21',\n   'b.22',\n   'b.23',\n   'b.24',\n   'b.25',\n   'b.26',\n   'b.27'],\n  'literal': None,\n  'start': {'pos': 0, 'line': 0, 'ch': 0},\n  'end': {'line': 1, 'ch': 19, 'pos': 42}},\n 'b.2': {'syntok': 'for', 'match': 'a.2'},\n 'b.3': {'syntok': ' ', 'match': 'a.3'},\n 'b.4': {'type': 'Name',\n  'content': ['b.5'],\n  'literal': None,\n  'start': {'line': 0, 'ch': 4, 'pos': 4},\n  'end': {'line': 0, 'ch': 5, 'pos': 5}},\n 'b.5': {'syntok': 'i', 'match': 'a.5'},\n 'b.6': {'syntok': ' ', 'match': 'a.6'},\n 'b.7': {'syntok': 'in', 'match': 'a.7'},\n 'b.8': {'syntok': ' ', 'match': 'a.8'},\n 'b.9': {'type': 'Call',\n  'content': ['b.10', 'b.12', 'b.13', 'b.14', 'b.15', 'b.16'],\n  'literal': None,\n  'start': {'pos': 9, 'line': 0, 'ch': 9},\n  'end': {'line': 0, 'ch': 20, 'pos': 20}},\n 'b.10': {'type': 'Name',\n  'content': ['b.11'],\n  'literal': None,\n  'start': {'line': 0, 'ch': 9, 'pos': 9},\n  'end': {'line': 0, 'ch': 14, 'pos': 14}},\n 'b.11': {'syntok': 'range', 'match': 'a.11'},\n 'b.12': {'syntok': '(', 'match': 'a.12'},\n 'b.13': {'type': 'Num',\n  'content': [],\n  'literal': '0',\n  'start': {'pos': 15, 'line': 0, 'ch': 15},\n  'end': {'line': 0, 'ch': 16, 'pos': 16},\n  'match': 'a.13'},\n 'b.14': {'syntok': ',', 'match': 'a.14'},\n 'b.15': {'type': 'Num',\n  'content': [],\n  'literal': '10',\n  'start': {'pos': 17, 'line': 0, 'ch': 17},\n  'end': {'line': 0, 'ch': 19, 'pos': 19},\n  'match': 'a.15'},\n 'b.16': {'syntok': ')', 'match': 'a.16'},\n 'b.17': {'syntok': ':', 'match': 'a.17'},\n 'b.18': {'syntok': '\\n', 'match': 'a.18'},\n 'b.19': {'syntok': ' ', 'match': 'a.19'},\n 'b.20': {'syntok': ' ', 'match': 'a.20'},\n 'b.21': {'syntok': ' ', 'match': 'a.21'},\n 'b.22': {'syntok': ' ', 'match': 'a.22'},\n 'b.23': {'syntok': ' ', 'match': 'a.46'},\n 'b.24': {'syntok': ' ', 'match': 'a.47'},\n 'b.25': {'syntok': ' ', 'match': 'a.48'},\n 'b.26': {'syntok': ' ', 'match': 'a.49'},\n 'b.27': {'type': 'Expr',\n  'content': ['b.28'],\n  'literal': None,\n  'start': {'pos': 30, 'line': 1, 'ch': 8},\n  'end': {'line': 1, 'ch': 19, 'pos': 42}},\n 'b.28': {'type': 'Call',\n  'content': ['b.29', 'b.31', 'b.32', 'b.40'],\n  'literal': None,\n  'start': {'pos': 30, 'line': 1, 'ch': 8},\n  'end': {'line': 1, 'ch': 19, 'pos': 42}},\n 'b.29': {'type': 'Name',\n  'content': ['b.30'],\n  'literal': None,\n  'start': {'line': 1, 'ch': 8, 'pos': 30},\n  'end': {'line': 1, 'ch': 13, 'pos': 35}},\n 'b.30': {'syntok': 'print', 'match': 'a.53'},\n 'b.31': {'syntok': '(', 'match': 'a.54'},\n 'b.32': {'type': 'BinOp',\n  'content': ['b.33', 'b.35', 'b.36', 'b.38', 'b.39'],\n  'literal': None,\n  'start': {'pos': 36, 'line': 1, 'ch': 14},\n  'end': {'line': 1, 'ch': 19, 'pos': 41}},\n 'b.33': {'type': 'Name',\n  'content': ['b.34'],\n  'literal': None,\n  'start': {'line': 1, 'ch': 14, 'pos': 36},\n  'end': {'line': 1, 'ch': 15, 'pos': 37}},\n 'b.34': {'syntok': 'i', 'match': 'a.56'},\n 'b.35': {'syntok': ' '},\n 'b.36': {'type': 'Add',\n  'content': ['b.37'],\n  'literal': None,\n  'start': {'line': 1, 'ch': 16, 'pos': 38},\n  'end': {'line': 1, 'ch': 17, 'pos': 39}},\n 'b.37': {'syntok': '+'},\n 'b.38': {'syntok': ' '},\n 'b.39': {'type': 'Num',\n  'content': [],\n  'literal': '6',\n  'start': {'pos': 40, 'line': 1, 'ch': 18},\n  'end': {'line': 1, 'ch': 19, 'pos': 41}},\n 'b.40': {'syntok': ')', 'match': 'a.57'}}"},"metadata":{}}]},{"created":257,"parent":"c.15.5","raw":[{"name":"stdout","text":"if i % 2 == 0:\n    \n\n############################\n\n + 6\n","output_type":"stream"}]},{"created":269,"parent":"c.15.6","raw":[{"name":"stdout","text":"if i % 2 == 0:\n    9\n\n############################\n\n6\n","output_type":"stream"}]},{"created":276,"parent":"c.15.7","raw":[{"name":"stdout","text":"if i % 2 == 0:\n    9\n\n############################\n\n6\n","output_type":"stream"},{"execution_count":128,"output_type":"execute_result","data":{"text/plain":"['if',\n ' ',\n 'i',\n ' ',\n '%',\n ' ',\n '2',\n ' ',\n '==',\n ' ',\n '0',\n ':',\n '\\n',\n ' ',\n ' ',\n ' ',\n ' ',\n '9']"},"metadata":{}}]},{"created":277,"parent":"c.15.8","raw":[{"name":"stdout","text":"if i % 2 == 0:\n    9\n\n############################\n\n6\n","output_type":"stream"}]}]},{"vers":[{"created":270,"parent":"c.16.0","raw":[]}]},{"vers":[{"created":279,"parent":"c.17.0","raw":[]},{"created":285,"parent":"c.17.2","raw":[{"execution_count":133,"output_type":"execute_result","data":{"text/plain":"[]"},"metadata":{}}]},{"created":286,"parent":"c.17.3","raw":[{"execution_count":134,"output_type":"execute_result","data":{"text/plain":"['as']"},"metadata":{}}]}]},{"vers":[{"created":284,"parent":"c.18.0","raw":[]},{"created":295,"parent":"c.18.5","raw":[{"execution_count":138,"output_type":"execute_result","data":{"text/plain":"[{'type': 'Num',\n  'content': [],\n  'literal': '6',\n  'start': {'pos': 40, 'line': 1, 'ch': 18},\n  'end': {'line': 1, 'ch': 19, 'pos': 41},\n  'new': True}]"},"metadata":{}}]},{"created":306,"parent":"c.18.7","raw":[{"execution_count":147,"output_type":"execute_result","data":{"text/plain":"[{'type': 'Num',\n  'content': [],\n  'literal': '6',\n  'start': {'pos': 40, 'line': 1, 'ch': 18},\n  'end': {'line': 1, 'ch': 19, 'pos': 41},\n  'parent': 'b.32',\n  'new': True}]"},"metadata":{}}]},{"created":310,"parent":"c.18.8","raw":[{"execution_count":147,"output_type":"execute_result","data":{"text/plain":"[{'type': 'Num',\n  'content': [],\n  'literal': '6',\n  'start': {'pos': 40, 'line': 1, 'ch': 18},\n  'end': {'line': 1, 'ch': 19, 'pos': 41},\n  'parent': 'b.32',\n  'new': True}]"},"metadata":{}}]},{"created":311,"parent":"c.18.9","raw":[{"execution_count":152,"output_type":"execute_result","data":{"text/plain":"[{'type': 'Num',\n  'content': [],\n  'literal': '6',\n  'start': {'pos': 40, 'line': 1, 'ch': 18},\n  'end': {'line': 1, 'ch': 19, 'pos': 41},\n  'parent': 'b.32',\n  'new': True},\n {'type': 'BinOp',\n  'content': ['b.33', 'b.35', 'b.36', 'b.38', 'b.39'],\n  'literal': None,\n  'start': {'pos': 36, 'line': 1, 'ch': 14},\n  'end': {'line': 1, 'ch': 19, 'pos': 41},\n  'parent': 'b.28',\n  'new': True},\n {'type': 'Call',\n  'content': ['b.29', 'b.31', 'b.32', 'b.40'],\n  'literal': None,\n  'start': {'pos': 30, 'line': 1, 'ch': 8},\n  'end': {'line': 1, 'ch': 19, 'pos': 42},\n  'parent': 'b.27',\n  'new': True},\n {'type': 'Expr',\n  'content': ['b.28'],\n  'literal': None,\n  'start': {'pos': 30, 'line': 1, 'ch': 8},\n  'end': {'line': 1, 'ch': 19, 'pos': 42},\n  'parent': 'b.1',\n  'new': True},\n {'type': 'For',\n  'content': ['b.2',\n   'b.3',\n   'b.4',\n   'b.6',\n   'b.7',\n   'b.8',\n   'b.9',\n   'b.17',\n   'b.18',\n   'b.19',\n   'b.20',\n   'b.21',\n   'b.22',\n   'b.23',\n   'b.24',\n   'b.25',\n   'b.26',\n   'b.27'],\n  'literal': None,\n  'start': {'pos': 0, 'line': 0, 'ch': 0},\n  'end': {'line': 1, 'ch': 19, 'pos': 42},\n  'parent': 'b.0',\n  'new': True},\n {'type': 'Module',\n  'content': ['b.1'],\n  'literal': None,\n  'start': {'line': 0, 'ch': 0, 'pos': 0},\n  'end': {'line': 1, 'ch': 19, 'pos': 42},\n  'new': True}]"},"metadata":{}}]},{"created":321,"parent":"c.18.9","raw":[{"execution_count":160,"output_type":"execute_result","data":{"text/plain":"[{'type': 'Num',\n  'content': [],\n  'literal': '6',\n  'start': {'pos': 40, 'line': 1, 'ch': 18},\n  'end': {'line': 1, 'ch': 19, 'pos': 41},\n  'parent': 'b.32',\n  'new': True},\n {'type': 'BinOp',\n  'content': ['b.33', 'b.35', 'b.36', 'b.38', 'b.39'],\n  'literal': None,\n  'start': {'pos': 36, 'line': 1, 'ch': 14},\n  'end': {'line': 1, 'ch': 19, 'pos': 41},\n  'parent': 'b.28',\n  'new': True},\n {'type': 'Call',\n  'content': ['b.29', 'b.31', 'b.32', 'b.40'],\n  'literal': None,\n  'start': {'pos': 30, 'line': 1, 'ch': 8},\n  'end': {'line': 1, 'ch': 19, 'pos': 42},\n  'parent': 'b.27',\n  'new': True},\n {'type': 'Expr',\n  'content': ['b.28'],\n  'literal': None,\n  'start': {'pos': 30, 'line': 1, 'ch': 8},\n  'end': {'line': 1, 'ch': 19, 'pos': 42},\n  'parent': 'b.1',\n  'new': True},\n {'type': 'For',\n  'content': ['b.2',\n   'b.3',\n   'b.4',\n   'b.6',\n   'b.7',\n   'b.8',\n   'b.9',\n   'b.17',\n   'b.18',\n   'b.19',\n   'b.20',\n   'b.21',\n   'b.22',\n   'b.23',\n   'b.24',\n   'b.25',\n   'b.26',\n   'b.27'],\n  'literal': None,\n  'start': {'pos': 0, 'line': 0, 'ch': 0},\n  'end': {'line': 1, 'ch': 19, 'pos': 42},\n  'parent': 'b.0',\n  'new': True},\n {'type': 'Module',\n  'content': ['b.1'],\n  'literal': None,\n  'start': {'line': 0, 'ch': 0, 'pos': 0},\n  'end': {'line': 1, 'ch': 19, 'pos': 42},\n  'new': True}]"},"metadata":{}}]}]},{"vers":[{"created":294,"parent":"c.19.0","raw":[]}]},{"vers":[{"created":322,"parent":"c.20.0","raw":[]}]},{"vers":[{"created":329,"parent":"c.21.0","raw":[]}]}],"runs":[{"checkpointType":"l","timestamp":1556053501507,"notebook":0,"targetCells":[{"node":"m.0.0","changeType":1},{"node":"c.0.0","changeType":1},{"node":"c.1.0","changeType":1}]},{"checkpointType":"r","timestamp":1556053513970,"notebook":1,"targetCells":[{"node":"c.1.1","changeType":2,"run":true,"newOutput":[]}]},{"checkpointType":"s","timestamp":1556053516857,"notebook":1,"targetCells":[]},{"checkpointType":"l","timestamp":1556053521577,"notebook":1,"targetCells":[]},{"checkpointType":"s","timestamp":1556053561982,"notebook":1,"targetCells":[]},{"checkpointType":"s","timestamp":1556053682020,"notebook":2,"targetCells":[{"node":"c.1.2","changeType":2,"run":true,"newOutput":[]}]},{"checkpointType":"s","timestamp":1556053726302,"notebook":3,"targetCells":[{"node":"c.1.3","changeType":2,"run":true,"newOutput":[]}]},{"checkpointType":"s","timestamp":1556054643667,"notebook":4,"targetCells":[{"node":"c.1.4","changeType":2,"run":true,"newOutput":[]}]},{"checkpointType":"s","timestamp":1556054669269,"notebook":4,"targetCells":[]},{"checkpointType":"s","timestamp":1556054669529,"notebook":4,"targetCells":[]},{"checkpointType":"a","timestamp":1556122499918,"notebook":5,"targetCells":[{"node":"c.2.0","changeType":1}]},{"checkpointType":"r","timestamp":1556122543163,"notebook":6,"targetCells":[{"node":"c.2.1","changeType":2,"run":true,"newOutput":[]}]},{"checkpointType":"s","timestamp":1556122545627,"notebook":6,"targetCells":[]},{"checkpointType":"r","timestamp":1556122583379,"notebook":6,"targetCells":[{"node":"c.1.5","changeType":2,"run":true,"newOutput":["o.1.1"]}]},{"checkpointType":"r","timestamp":1556122611371,"notebook":7,"targetCells":[{"node":"c.1.6","changeType":2,"run":true,"newOutput":["o.1.2"]}]},{"checkpointType":"r","timestamp":1556122628570,"notebook":8,"targetCells":[{"node":"c.1.7","changeType":2,"run":true,"newOutput":["o.1.3"]}]},{"checkpointType":"s","timestamp":1556122756931,"notebook":8,"targetCells":[]},{"checkpointType":"r","timestamp":1556122786733,"notebook":9,"targetCells":[{"node":"c.2.2","changeType":2,"run":true,"newOutput":[]}]},{"checkpointType":"r","timestamp":1556122787225,"notebook":9,"targetCells":[{"node":"c.1.8","changeType":2,"run":true,"newOutput":[]}]},{"checkpointType":"s","timestamp":1556122803478,"notebook":9,"targetCells":[]},{"checkpointType":"a","timestamp":1556122859027,"notebook":10,"targetCells":[{"node":"c.3.0","changeType":1}]},{"checkpointType":"r","timestamp":1556122871382,"notebook":11,"targetCells":[{"node":"c.2.3","changeType":2,"run":true,"newOutput":[]}]},{"checkpointType":"r","timestamp":1556122872055,"notebook":11,"targetCells":[{"node":"c.1.8","changeType":2,"run":true,"newOutput":[]}]},{"checkpointType":"r","timestamp":1556122872415,"notebook":11,"targetCells":[{"node":"c.0.1","changeType":2,"run":true,"newOutput":["o.0.1"]}]},{"checkpointType":"s","timestamp":1556122883446,"notebook":11,"targetCells":[]},{"checkpointType":"a","timestamp":1556122938663,"notebook":12,"targetCells":[{"node":"c.4.0","changeType":1}]},{"checkpointType":"r","timestamp":1556122973275,"notebook":13,"targetCells":[{"node":"c.4.1","changeType":2,"run":true,"newOutput":["o.4.1"]}]},{"checkpointType":"r","timestamp":1556122973884,"notebook":13,"targetCells":[{"node":"c.1.8","changeType":2,"run":true,"newOutput":[]}]},{"checkpointType":"r","timestamp":1556122974208,"notebook":13,"targetCells":[{"node":"c.0.2","changeType":2,"run":true,"newOutput":["o.0.2"]}]},{"checkpointType":"s","timestamp":1556122996518,"notebook":13,"targetCells":[]},{"checkpointType":"s","timestamp":1556123116729,"notebook":14,"targetCells":[{"node":"c.1.9","changeType":2,"run":true,"newOutput":[]}]},{"checkpointType":"a","timestamp":1556123192384,"notebook":15,"targetCells":[{"node":"c.5.0","changeType":1}]},{"checkpointType":"s","timestamp":1556123194980,"notebook":15,"targetCells":[]},{"checkpointType":"r","timestamp":1556123261527,"notebook":16,"targetCells":[{"node":"c.5.1","changeType":2,"run":true,"newOutput":["o.5.1"]}]},{"checkpointType":"s","timestamp":1556123315162,"notebook":17,"targetCells":[{"node":"c.5.2","changeType":2,"run":true,"newOutput":[]}]},{"checkpointType":"r","timestamp":1556123386406,"notebook":18,"targetCells":[{"node":"c.2.4","changeType":2,"run":true,"newOutput":[]}]},{"checkpointType":"r","timestamp":1556123387223,"notebook":18,"targetCells":[{"node":"c.4.1","changeType":2,"run":true,"newOutput":[]}]},{"checkpointType":"r","timestamp":1556123392400,"notebook":18,"targetCells":[{"node":"c.1.9","changeType":2,"run":true,"newOutput":[]}]},{"checkpointType":"d","timestamp":1556123395385,"notebook":19,"targetCells":[{"node":"c.5.3","changeType":1.5,"index":1}]},{"checkpointType":"s","timestamp":1556123396725,"notebook":19,"targetCells":[]},{"checkpointType":"s","timestamp":1556123397599,"notebook":19,"targetCells":[]},{"checkpointType":"a","timestamp":1556124690633,"notebook":20,"targetCells":[{"node":"c.6.0","changeType":1}]},{"checkpointType":"s","timestamp":1556124735433,"notebook":21,"targetCells":[{"node":"c.6.1","changeType":2,"run":true,"newOutput":[]}]},{"checkpointType":"s","timestamp":1556124856430,"notebook":22,"targetCells":[{"node":"c.4.2","changeType":2,"run":true,"newOutput":[]}]},{"checkpointType":"r","timestamp":1556124878585,"notebook":23,"targetCells":[{"node":"c.2.5","changeType":2,"run":true,"newOutput":[]}]},{"checkpointType":"r","timestamp":1556124924327,"notebook":24,"targetCells":[{"node":"c.2.6","changeType":2,"run":true,"newOutput":[]}]},{"checkpointType":"d","timestamp":1556124927944,"notebook":25,"targetCells":[{"node":"c.6.2","changeType":1.5,"index":2}]},{"checkpointType":"s","timestamp":1556124930309,"notebook":25,"targetCells":[]},{"checkpointType":"r","timestamp":1556124935291,"notebook":25,"targetCells":[{"node":"c.4.3","changeType":2,"run":true,"newOutput":[]}]},{"checkpointType":"r","timestamp":1556124943451,"notebook":26,"targetCells":[{"node":"c.4.4","changeType":2,"run":true,"newOutput":["o.4.3"]}]},{"checkpointType":"s","timestamp":1556124947542,"notebook":26,"targetCells":[]},{"checkpointType":"s","timestamp":1556124948043,"notebook":26,"targetCells":[]},{"checkpointType":"l","timestamp":1556124954208,"notebook":26,"targetCells":[]},{"checkpointType":"r","timestamp":1556125002025,"notebook":27,"targetCells":[{"node":"c.2.7","changeType":2,"run":true,"newOutput":[]}]},{"checkpointType":"r","timestamp":1556125062862,"notebook":28,"targetCells":[{"node":"c.4.5","changeType":2,"run":true,"newOutput":["o.4.4"]}]},{"checkpointType":"s","timestamp":1556125074073,"notebook":28,"targetCells":[]},{"checkpointType":"r","timestamp":1556125100278,"notebook":29,"targetCells":[{"node":"c.0.3","changeType":2,"run":true,"newOutput":[]}]},{"checkpointType":"r","timestamp":1556125101782,"notebook":29,"targetCells":[{"node":"c.1.10","changeType":2,"run":true,"newOutput":["o.1.4"]}]},{"checkpointType":"r","timestamp":1556125112733,"notebook":30,"targetCells":[{"node":"c.0.4","changeType":2,"run":true,"newOutput":[]}]},{"checkpointType":"r","timestamp":1556125114425,"notebook":30,"targetCells":[{"node":"c.1.10","changeType":2,"run":true,"newOutput":[]}]},{"checkpointType":"s","timestamp":1556125194115,"notebook":31,"targetCells":[{"node":"c.0.5","changeType":2,"run":true,"newOutput":[]}]},{"checkpointType":"s","timestamp":1556125434169,"notebook":32,"targetCells":[{"node":"c.0.6","changeType":2,"run":true,"newOutput":[]}]},{"checkpointType":"r","timestamp":1556125593964,"notebook":32,"targetCells":[{"node":"c.2.7","changeType":2,"run":true,"newOutput":[]}]},{"checkpointType":"r","timestamp":1556125594495,"notebook":32,"targetCells":[{"node":"c.4.5","changeType":2,"run":true,"newOutput":[]}]},{"checkpointType":"r","timestamp":1556125596467,"notebook":32,"targetCells":[{"node":"c.1.10","changeType":2,"run":true,"newOutput":[]}]},{"checkpointType":"s","timestamp":1556125599633,"notebook":32,"targetCells":[]},{"checkpointType":"l","timestamp":1556125849124,"notebook":32,"targetCells":[]},{"checkpointType":"r","timestamp":1556125857532,"notebook":32,"targetCells":[{"node":"c.2.7","changeType":2,"run":true,"newOutput":[]}]},{"checkpointType":"r","timestamp":1556125857771,"notebook":32,"targetCells":[{"node":"c.4.5","changeType":2,"run":true,"newOutput":[]}]},{"checkpointType":"r","timestamp":1556125858883,"notebook":33,"targetCells":[{"node":"c.0.6","changeType":2,"run":true,"newOutput":[]}]},{"checkpointType":"r","timestamp":1556125871630,"notebook":33,"targetCells":[{"node":"c.1.11","changeType":2,"run":true,"newOutput":["o.1.6"]}]},{"checkpointType":"s","timestamp":1556125968914,"notebook":34,"targetCells":[{"node":"c.1.12","changeType":2,"run":true,"newOutput":[]},{"node":"c.0.7","changeType":2,"run":true,"newOutput":[]}]},{"checkpointType":"r","timestamp":1556125983757,"notebook":35,"targetCells":[{"node":"c.0.8","changeType":2,"run":true,"newOutput":[]}]},{"checkpointType":"r","timestamp":1556125984841,"notebook":35,"targetCells":[{"node":"c.1.12","changeType":2,"run":true,"newOutput":[]}]},{"checkpointType":"s","timestamp":1556126002780,"notebook":35,"targetCells":[]},{"checkpointType":"s","timestamp":1556128205319,"notebook":36,"targetCells":[{"node":"c.0.9","changeType":2,"run":true,"newOutput":[]}]},{"checkpointType":"s","timestamp":1556128326469,"notebook":37,"targetCells":[{"node":"c.0.10","changeType":2,"run":true,"newOutput":[]}]},{"checkpointType":"s","timestamp":1556128790316,"notebook":38,"targetCells":[{"node":"c.0.11","changeType":2,"run":true,"newOutput":[]}]},{"checkpointType":"s","timestamp":1556130111373,"notebook":39,"targetCells":[{"node":"c.0.12","changeType":2,"run":true,"newOutput":[]}]},{"checkpointType":"s","timestamp":1556130231416,"notebook":40,"targetCells":[{"node":"c.0.13","changeType":2,"run":true,"newOutput":[]}]},{"checkpointType":"s","timestamp":1556131914451,"notebook":41,"targetCells":[{"node":"c.0.14","changeType":2,"run":true,"newOutput":[]}]},{"checkpointType":"s","timestamp":1556132034506,"notebook":42,"targetCells":[{"node":"c.0.15","changeType":2,"run":true,"newOutput":[]}]},{"checkpointType":"s","timestamp":1556132154556,"notebook":43,"targetCells":[{"node":"c.0.16","changeType":2,"run":true,"newOutput":[]}]},{"checkpointType":"s","timestamp":1556132274602,"notebook":44,"targetCells":[{"node":"c.0.17","changeType":2,"run":true,"newOutput":[]}]},{"checkpointType":"s","timestamp":1556132394656,"notebook":45,"targetCells":[{"node":"c.0.18","changeType":2,"run":true,"newOutput":[]}]},{"checkpointType":"r","timestamp":1556132418307,"notebook":46,"targetCells":[{"node":"c.0.19","changeType":2,"run":true,"newOutput":[]}]},{"checkpointType":"r","timestamp":1556132453165,"notebook":47,"targetCells":[{"node":"c.0.20","changeType":2,"run":true,"newOutput":[]}]},{"checkpointType":"r","timestamp":1556132463222,"notebook":48,"targetCells":[{"node":"c.0.21","changeType":2,"run":true,"newOutput":[]}]},{"checkpointType":"s","timestamp":1556132514722,"notebook":49,"targetCells":[{"node":"c.1.12","changeType":2,"run":true,"newOutput":[]},{"node":"c.0.22","changeType":2,"run":true,"newOutput":[]}]},{"checkpointType":"r","timestamp":1556132527843,"notebook":50,"targetCells":[{"node":"c.0.23","changeType":2,"run":true,"newOutput":[]}]},{"checkpointType":"s","timestamp":1556132571425,"targetCells":[]},{"checkpointType":"l","timestamp":1556133750137,"notebook":50,"targetCells":[]},{"checkpointType":"r","timestamp":1556133766602,"notebook":50,"targetCells":[{"node":"c.2.7","changeType":2,"run":true,"newOutput":[]}]},{"checkpointType":"r","timestamp":1556133766887,"notebook":50,"targetCells":[{"node":"c.4.5","changeType":2,"run":true,"newOutput":[]}]},{"checkpointType":"r","timestamp":1556133770775,"notebook":51,"targetCells":[{"node":"c.0.23","changeType":2,"run":true,"newOutput":[]}]},{"checkpointType":"s","timestamp":1556133824556,"notebook":52,"targetCells":[{"node":"c.1.13","changeType":2,"run":true,"newOutput":["o.1.9"]},{"node":"c.0.24","changeType":2,"run":true,"newOutput":[]}]},{"checkpointType":"r","timestamp":1556133831246,"notebook":53,"targetCells":[{"node":"c.0.25","changeType":2,"run":true,"newOutput":[]}]},{"checkpointType":"r","timestamp":1556133836775,"notebook":54,"targetCells":[{"node":"c.0.26","changeType":2,"run":true,"newOutput":[]}]},{"checkpointType":"r","timestamp":1556133843190,"notebook":55,"targetCells":[{"node":"c.4.5","changeType":2,"run":true,"newOutput":[]}]},{"checkpointType":"r","timestamp":1556133843462,"notebook":55,"targetCells":[{"node":"c.1.13","changeType":2,"run":true,"newOutput":[]}]},{"checkpointType":"a","timestamp":1556133861478,"notebook":56,"targetCells":[{"node":"c.7.0","changeType":1}]},{"checkpointType":"r","timestamp":1556133861543,"notebook":56,"targetCells":[{"node":"c.3.1","changeType":2,"run":true,"newOutput":["o.3.1"]}]},{"checkpointType":"s","timestamp":1556133944636,"notebook":56,"targetCells":[]},{"checkpointType":"s","timestamp":1556134411874,"notebook":56,"targetCells":[]},{"checkpointType":"s","timestamp":1556291968687,"notebook":57,"targetCells":[{"node":"m.0.1","changeType":2,"run":true,"newOutput":[]},{"node":"c.1.13","changeType":2,"run":true,"newOutput":[]},{"node":"c.0.27","changeType":2,"run":true,"newOutput":[]}]},{"checkpointType":"s","timestamp":1556292088733,"notebook":58,"targetCells":[{"node":"m.0.2","changeType":2,"run":true,"newOutput":[]}]},{"checkpointType":"s","timestamp":1556292208776,"notebook":59,"targetCells":[{"node":"m.0.3","changeType":2,"run":true,"newOutput":[]}]},{"checkpointType":"s","timestamp":1556292328812,"notebook":60,"targetCells":[{"node":"m.0.4","changeType":2,"run":true,"newOutput":[]}]},{"checkpointType":"s","timestamp":1556292448849,"notebook":61,"targetCells":[{"node":"m.0.5","changeType":2,"run":true,"newOutput":[]}]},{"checkpointType":"s","timestamp":1556292491579,"notebook":62,"targetCells":[{"node":"m.0.6","changeType":2,"run":true,"newOutput":[]}]},{"checkpointType":"r","timestamp":1556292506249,"notebook":63,"targetCells":[{"node":"m.0.7","changeType":2,"run":true,"newOutput":[]}]},{"checkpointType":"r","timestamp":1556292536923,"notebook":64,"targetCells":[{"node":"m.0.8","changeType":2,"run":true,"newOutput":[]}]},{"checkpointType":"s","timestamp":1556292611628,"notebook":65,"targetCells":[{"node":"m.0.9","changeType":2,"run":true,"newOutput":[]}]},{"checkpointType":"s","timestamp":1556292701423,"notebook":66,"targetCells":[{"node":"m.0.10","changeType":2,"run":true,"newOutput":[]}]},{"checkpointType":"s","timestamp":1556292821456,"notebook":67,"targetCells":[{"node":"m.0.11","changeType":2,"run":true,"newOutput":[]}]},{"checkpointType":"r","timestamp":1556292869935,"notebook":68,"targetCells":[{"node":"m.0.12","changeType":2,"run":true,"newOutput":[]}]},{"checkpointType":"s","timestamp":1556292879484,"notebook":68,"targetCells":[]},{"checkpointType":"r","timestamp":1556292896901,"notebook":69,"targetCells":[{"node":"m.0.13","changeType":2,"run":true,"newOutput":[]}]},{"checkpointType":"s","timestamp":1556292999520,"notebook":70,"targetCells":[{"node":"m.0.14","changeType":2,"run":true,"newOutput":[]}]},{"checkpointType":"r","timestamp":1556293061067,"notebook":71,"targetCells":[{"node":"m.0.15","changeType":2,"run":true,"newOutput":[]}]},{"checkpointType":"r","timestamp":1556293068974,"notebook":72,"targetCells":[{"node":"m.0.16","changeType":2,"run":true,"newOutput":[]}]},{"checkpointType":"r","timestamp":1556293072891,"notebook":73,"targetCells":[{"node":"m.0.17","changeType":2,"run":true,"newOutput":[]}]},{"checkpointType":"r","timestamp":1556293075992,"notebook":74,"targetCells":[{"node":"m.0.18","changeType":2,"run":true,"newOutput":[]}]},{"checkpointType":"s","timestamp":1556293077404,"notebook":74,"targetCells":[]},{"checkpointType":"s","timestamp":1556293303453,"notebook":74,"targetCells":[]},{"checkpointType":"a","timestamp":1556296373074,"notebook":75,"targetCells":[{"node":"c.8.0","changeType":1}]},{"checkpointType":"s","timestamp":1556296400858,"notebook":76,"targetCells":[{"node":"c.8.1","changeType":2,"run":true,"newOutput":[]}]},{"checkpointType":"a","timestamp":1556296402402,"notebook":77,"targetCells":[{"node":"c.9.0","changeType":1}]},{"checkpointType":"s","timestamp":1556296520903,"notebook":78,"targetCells":[{"node":"c.9.1","changeType":2,"run":true,"newOutput":[]}]},{"checkpointType":"s","timestamp":1556296640939,"notebook":79,"targetCells":[{"node":"c.9.2","changeType":2,"run":true,"newOutput":[]}]},{"checkpointType":"r","timestamp":1556296687677,"notebook":80,"targetCells":[{"node":"c.9.3","changeType":2,"run":true,"newOutput":[]}]},{"checkpointType":"r","timestamp":1556296688146,"notebook":80,"targetCells":[{"node":"c.8.2","changeType":2,"run":true,"newOutput":["o.8.1"]}]},{"checkpointType":"r","timestamp":1556296718881,"notebook":81,"targetCells":[{"node":"c.8.3","changeType":2,"run":true,"newOutput":["o.8.2"]}]},{"checkpointType":"r","timestamp":1556296734634,"notebook":82,"targetCells":[{"node":"c.8.4","changeType":2,"run":true,"newOutput":["o.8.3"]}]},{"checkpointType":"r","timestamp":1556296751622,"notebook":83,"targetCells":[{"node":"c.8.5","changeType":2,"run":true,"newOutput":["o.8.4"]}]},{"checkpointType":"s","timestamp":1556296760986,"notebook":84,"targetCells":[{"node":"c.8.6","changeType":2,"run":true,"newOutput":[]}]},{"checkpointType":"r","timestamp":1556296781372,"notebook":85,"targetCells":[{"node":"c.8.7","changeType":2,"run":true,"newOutput":["o.8.5"]}]},{"checkpointType":"s","timestamp":1556296783886,"notebook":85,"targetCells":[]},{"checkpointType":"r","timestamp":1556296794042,"notebook":86,"targetCells":[{"node":"c.8.8","changeType":2,"run":true,"newOutput":["o.8.6"]}]},{"checkpointType":"r","timestamp":1556296795861,"notebook":87,"targetCells":[{"node":"c.8.9","changeType":2,"run":true,"newOutput":["o.8.7"]}]},{"checkpointType":"s","timestamp":1556296801858,"notebook":87,"targetCells":[]},{"checkpointType":"s","timestamp":1556297509203,"notebook":88,"targetCells":[{"node":"c.8.10","changeType":2,"run":true,"newOutput":[]}]},{"checkpointType":"r","timestamp":1556297525808,"notebook":89,"targetCells":[{"node":"c.8.11","changeType":2,"run":true,"newOutput":["o.8.8"]}]},{"checkpointType":"a","timestamp":1556297527503,"notebook":90,"targetCells":[{"node":"c.10.0","changeType":1}]},{"checkpointType":"r","timestamp":1556297614500,"notebook":91,"targetCells":[{"node":"c.10.1","changeType":2,"run":true,"newOutput":["o.10.1"]}]},{"checkpointType":"s","timestamp":1556297629245,"notebook":92,"targetCells":[{"node":"c.10.2","changeType":2,"run":true,"newOutput":[]}]},{"checkpointType":"r","timestamp":1556297671610,"notebook":93,"targetCells":[{"node":"c.10.3","changeType":2,"run":true,"newOutput":["o.10.2"]}]},{"checkpointType":"r","timestamp":1556297678892,"notebook":94,"targetCells":[{"node":"c.10.4","changeType":2,"run":true,"newOutput":["o.10.3"]}]},{"checkpointType":"r","timestamp":1556297688861,"notebook":95,"targetCells":[{"node":"c.10.5","changeType":2,"run":true,"newOutput":["o.10.4"]}]},{"checkpointType":"r","timestamp":1556297714577,"notebook":96,"targetCells":[{"node":"c.10.6","changeType":2,"run":true,"newOutput":["o.10.5"]}]},{"checkpointType":"s","timestamp":1556297749296,"notebook":97,"targetCells":[{"node":"c.10.7","changeType":2,"run":true,"newOutput":["o.10.6"]}]},{"checkpointType":"r","timestamp":1556297761122,"notebook":98,"targetCells":[{"node":"c.10.8","changeType":2,"run":true,"newOutput":["o.10.7"]}]},{"checkpointType":"a","timestamp":1556297796558,"notebook":99,"targetCells":[{"node":"c.11.0","changeType":1}]},{"checkpointType":"r","timestamp":1556297801771,"notebook":100,"targetCells":[{"node":"c.11.1","changeType":2,"run":true,"newOutput":["o.11.1"]}]},{"checkpointType":"d","timestamp":1556297830457,"notebook":101,"targetCells":[{"node":"c.11.2","changeType":1.5,"index":4}]},{"checkpointType":"s","timestamp":1556297869337,"notebook":102,"targetCells":[{"node":"c.10.9","changeType":2,"run":true,"newOutput":["o.10.8"]}]},{"checkpointType":"r","timestamp":1556297885478,"notebook":103,"targetCells":[{"node":"c.10.10","changeType":2,"run":true,"newOutput":["o.10.9"]}]},{"checkpointType":"r","timestamp":1556297895186,"notebook":104,"targetCells":[{"node":"c.8.12","changeType":2,"run":true,"newOutput":["o.8.9"]}]},{"checkpointType":"r","timestamp":1556297917457,"notebook":105,"targetCells":[{"node":"c.10.11","changeType":2,"run":true,"newOutput":["o.10.10"]}]},{"checkpointType":"s","timestamp":1556297989381,"notebook":106,"targetCells":[{"node":"c.10.12","changeType":2,"run":true,"newOutput":[]}]},{"checkpointType":"r","timestamp":1556298005686,"notebook":107,"targetCells":[{"node":"c.10.13","changeType":2,"run":true,"newOutput":["o.10.11"]}]},{"checkpointType":"r","timestamp":1556298047406,"notebook":108,"targetCells":[{"node":"c.10.14","changeType":2,"run":true,"newOutput":["o.10.12"]}]},{"checkpointType":"s","timestamp":1556298109424,"notebook":109,"targetCells":[{"node":"c.10.15","changeType":2,"run":true,"newOutput":[]}]},{"checkpointType":"r","timestamp":1556298111890,"notebook":110,"targetCells":[{"node":"c.8.13","changeType":2,"run":true,"newOutput":["o.8.10"]}]},{"checkpointType":"r","timestamp":1556298139926,"notebook":111,"targetCells":[{"node":"c.10.16","changeType":2,"run":true,"newOutput":["o.10.13"]}]},{"checkpointType":"a","timestamp":1556298154215,"notebook":112,"targetCells":[{"node":"c.12.0","changeType":1}]},{"checkpointType":"r","timestamp":1556298156655,"notebook":113,"targetCells":[{"node":"m.1.0","changeType":2,"run":true,"newOutput":[]}]},{"checkpointType":"r","timestamp":1556298165748,"notebook":114,"targetCells":[{"node":"m.1.1","changeType":2,"run":true,"newOutput":[]}]},{"checkpointType":"d","timestamp":1556298176872,"notebook":115,"targetCells":[{"node":"m.1.2","changeType":1.5,"index":1}]},{"checkpointType":"s","timestamp":1556298177700,"notebook":115,"targetCells":[]},{"checkpointType":"r","timestamp":1556298265793,"notebook":116,"targetCells":[{"node":"c.10.17","changeType":2,"run":true,"newOutput":["o.10.14"]}]},{"checkpointType":"r","timestamp":1556298286685,"notebook":117,"targetCells":[{"node":"c.10.18","changeType":2,"run":true,"newOutput":["o.10.15"]}]},{"checkpointType":"a","timestamp":1556298291802,"notebook":118,"targetCells":[{"node":"c.13.0","changeType":1}]},{"checkpointType":"s","timestamp":1556298297744,"notebook":119,"targetCells":[{"node":"c.13.1","changeType":2,"run":true,"newOutput":[]}]},{"checkpointType":"r","timestamp":1556298409490,"notebook":120,"targetCells":[{"node":"c.13.2","changeType":2,"run":true,"newOutput":["o.13.1"]}]},{"checkpointType":"s","timestamp":1556298417796,"notebook":120,"targetCells":[]},{"checkpointType":"r","timestamp":1556298434161,"notebook":121,"targetCells":[{"node":"c.13.3","changeType":2,"run":true,"newOutput":["o.13.2"]}]},{"checkpointType":"r","timestamp":1556298486905,"notebook":122,"targetCells":[{"node":"c.13.4","changeType":2,"run":true,"newOutput":["o.13.3"]}]},{"checkpointType":"r","timestamp":1556298503420,"notebook":123,"targetCells":[{"node":"c.13.5","changeType":2,"run":true,"newOutput":["o.13.4"]}]},{"checkpointType":"s","timestamp":1556298538490,"notebook":124,"targetCells":[{"node":"c.13.6","changeType":2,"run":true,"newOutput":[]}]},{"checkpointType":"r","timestamp":1556298553403,"notebook":125,"targetCells":[{"node":"c.13.7","changeType":2,"run":true,"newOutput":["o.13.5"]}]},{"checkpointType":"r","timestamp":1556298572983,"notebook":126,"targetCells":[{"node":"c.2.8","changeType":2,"run":true,"newOutput":[]}]},{"checkpointType":"r","timestamp":1556298573537,"notebook":126,"targetCells":[{"node":"c.9.3","changeType":2,"run":true,"newOutput":[]}]},{"checkpointType":"r","timestamp":1556298573837,"notebook":126,"targetCells":[{"node":"c.8.13","changeType":2,"run":true,"newOutput":[]}]},{"checkpointType":"r","timestamp":1556298574193,"notebook":126,"targetCells":[{"node":"c.10.18","changeType":2,"run":true,"newOutput":[]}]},{"checkpointType":"r","timestamp":1556298574802,"notebook":126,"targetCells":[{"node":"c.13.7","changeType":2,"run":true,"newOutput":[]}]},{"checkpointType":"r","timestamp":1556298621252,"notebook":127,"targetCells":[{"node":"c.13.8","changeType":2,"run":true,"newOutput":["o.13.7"]}]},{"checkpointType":"s","timestamp":1556298658536,"notebook":127,"targetCells":[]},{"checkpointType":"r","timestamp":1556298691205,"notebook":128,"targetCells":[{"node":"c.13.9","changeType":2,"run":true,"newOutput":["o.13.8"]}]},{"checkpointType":"a","timestamp":1556298705027,"notebook":129,"targetCells":[{"node":"c.14.0","changeType":1}]},{"checkpointType":"r","timestamp":1556298735156,"notebook":130,"targetCells":[{"node":"c.14.1","changeType":2,"run":true,"newOutput":["o.14.1"]}]},{"checkpointType":"r","timestamp":1556298742235,"notebook":131,"targetCells":[{"node":"c.14.2","changeType":2,"run":true,"newOutput":[]}]},{"checkpointType":"r","timestamp":1556298759548,"notebook":132,"targetCells":[{"node":"c.14.3","changeType":2,"run":true,"newOutput":["o.14.2"]}]},{"checkpointType":"r","timestamp":1556298767278,"notebook":133,"targetCells":[{"node":"c.13.10","changeType":2,"run":true,"newOutput":["o.13.9"]}]},{"checkpointType":"s","timestamp":1556298778586,"notebook":134,"targetCells":[{"node":"c.13.11","changeType":2,"run":true,"newOutput":[]}]},{"checkpointType":"r","timestamp":1556298799406,"notebook":135,"targetCells":[{"node":"c.14.4","changeType":2,"run":true,"newOutput":["o.14.3"]}]},{"checkpointType":"r","timestamp":1556298806554,"notebook":136,"targetCells":[{"node":"c.14.5","changeType":2,"run":true,"newOutput":["o.14.4"]}]},{"checkpointType":"r","timestamp":1556298861160,"notebook":137,"targetCells":[{"node":"c.13.12","changeType":2,"run":true,"newOutput":["o.13.10"]}]},{"checkpointType":"r","timestamp":1556298887105,"notebook":138,"targetCells":[{"node":"c.13.13","changeType":2,"run":true,"newOutput":["o.13.11"]}]},{"checkpointType":"s","timestamp":1556298898628,"notebook":138,"targetCells":[]},{"checkpointType":"r","timestamp":1556298901410,"notebook":138,"targetCells":[{"node":"c.14.6","changeType":2,"run":true,"newOutput":["o.14.5"]}]},{"checkpointType":"r","timestamp":1556298907351,"notebook":139,"targetCells":[{"node":"c.14.7","changeType":2,"run":true,"newOutput":["o.14.6"]}]},{"checkpointType":"r","timestamp":1556298912077,"notebook":140,"targetCells":[{"node":"c.14.8","changeType":2,"run":true,"newOutput":["o.14.7"]}]},{"checkpointType":"r","timestamp":1556298915431,"notebook":141,"targetCells":[{"node":"c.14.9","changeType":2,"run":true,"newOutput":["o.14.8"]}]},{"checkpointType":"r","timestamp":1556298926011,"notebook":142,"targetCells":[{"node":"c.13.14","changeType":2,"run":true,"newOutput":["o.13.12"]}]},{"checkpointType":"r","timestamp":1556298955707,"notebook":143,"targetCells":[{"node":"c.14.10","changeType":2,"run":true,"newOutput":["o.14.9"]}]},{"checkpointType":"r","timestamp":1556298970191,"notebook":144,"targetCells":[{"node":"c.14.11","changeType":2,"run":true,"newOutput":["o.14.10"]}]},{"checkpointType":"r","timestamp":1556298990551,"notebook":145,"targetCells":[{"node":"c.14.12","changeType":2,"run":true,"newOutput":["o.14.11"]}]},{"checkpointType":"r","timestamp":1556298999924,"notebook":146,"targetCells":[{"node":"c.13.15","changeType":2,"run":true,"newOutput":["o.13.13"]}]},{"checkpointType":"r","timestamp":1556299007758,"notebook":147,"targetCells":[{"node":"c.14.13","changeType":2,"run":true,"newOutput":["o.14.12"]}]},{"checkpointType":"s","timestamp":1556299018674,"notebook":147,"targetCells":[]},{"checkpointType":"r","timestamp":1556299022998,"notebook":148,"targetCells":[{"node":"c.13.16","changeType":2,"run":true,"newOutput":["o.13.14"]}]},{"checkpointType":"r","timestamp":1556299052884,"notebook":149,"targetCells":[{"node":"c.14.14","changeType":2,"run":true,"newOutput":["o.14.13"]}]},{"checkpointType":"r","timestamp":1556299056767,"notebook":150,"targetCells":[{"node":"c.14.15","changeType":2,"run":true,"newOutput":["o.14.14"]}]},{"checkpointType":"r","timestamp":1556299063928,"notebook":151,"targetCells":[{"node":"c.14.16","changeType":2,"run":true,"newOutput":["o.14.15"]}]},{"checkpointType":"r","timestamp":1556299072810,"notebook":152,"targetCells":[{"node":"c.14.17","changeType":2,"run":true,"newOutput":["o.14.16"]}]},{"checkpointType":"r","timestamp":1556299082396,"notebook":153,"targetCells":[{"node":"c.14.18","changeType":2,"run":true,"newOutput":["o.14.17"]}]},{"checkpointType":"r","timestamp":1556299088294,"notebook":154,"targetCells":[{"node":"c.14.19","changeType":2,"run":true,"newOutput":["o.14.18"]}]},{"checkpointType":"r","timestamp":1556299091086,"notebook":155,"targetCells":[{"node":"c.14.20","changeType":2,"run":true,"newOutput":["o.14.19"]}]},{"checkpointType":"r","timestamp":1556299106126,"notebook":156,"targetCells":[{"node":"c.14.21","changeType":2,"run":true,"newOutput":["o.14.20"]}]},{"checkpointType":"r","timestamp":1556299128127,"notebook":157,"targetCells":[{"node":"c.13.17","changeType":2,"run":true,"newOutput":["o.13.15"]}]},{"checkpointType":"s","timestamp":1556299138718,"notebook":157,"targetCells":[]},{"checkpointType":"r","timestamp":1556299144706,"notebook":158,"targetCells":[{"node":"c.13.18","changeType":2,"run":true,"newOutput":["o.13.16"]}]},{"checkpointType":"r","timestamp":1556299163946,"notebook":159,"targetCells":[{"node":"c.14.22","changeType":2,"run":true,"newOutput":["o.14.21"]}]},{"checkpointType":"r","timestamp":1556299169573,"notebook":160,"targetCells":[{"node":"c.14.23","changeType":2,"run":true,"newOutput":["o.14.22"]}]},{"checkpointType":"r","timestamp":1556299174180,"notebook":161,"targetCells":[{"node":"c.14.24","changeType":2,"run":true,"newOutput":["o.14.23"]}]},{"checkpointType":"r","timestamp":1556299176442,"notebook":162,"targetCells":[{"node":"c.14.25","changeType":2,"run":true,"newOutput":["o.14.24"]}]},{"checkpointType":"s","timestamp":1556299258820,"notebook":163,"targetCells":[{"node":"c.13.19","changeType":2,"run":true,"newOutput":["o.13.17"]}]},{"checkpointType":"r","timestamp":1556299278964,"notebook":164,"targetCells":[{"node":"c.13.20","changeType":2,"run":true,"newOutput":["o.13.18"]}]},{"checkpointType":"r","timestamp":1556299301241,"notebook":165,"targetCells":[{"node":"c.14.26","changeType":2,"run":true,"newOutput":["o.14.25"]}]},{"checkpointType":"r","timestamp":1556299320291,"notebook":166,"targetCells":[{"node":"c.14.27","changeType":2,"run":true,"newOutput":["o.14.26"]}]},{"checkpointType":"r","timestamp":1556299349541,"notebook":167,"targetCells":[{"node":"c.14.28","changeType":2,"run":true,"newOutput":["o.14.27"]}]},{"checkpointType":"r","timestamp":1556299356693,"notebook":168,"targetCells":[{"node":"c.14.29","changeType":2,"run":true,"newOutput":["o.14.28"]}]},{"checkpointType":"s","timestamp":1556299378868,"notebook":169,"targetCells":[{"node":"c.14.30","changeType":2,"run":true,"newOutput":[]}]},{"checkpointType":"r","timestamp":1556299379722,"notebook":170,"targetCells":[{"node":"c.14.31","changeType":2,"run":true,"newOutput":["o.14.29"]}]},{"checkpointType":"r","timestamp":1556299418342,"notebook":171,"targetCells":[{"node":"c.14.32","changeType":2,"run":true,"newOutput":["o.14.30"]}]},{"checkpointType":"r","timestamp":1556299455501,"notebook":172,"targetCells":[{"node":"c.14.33","changeType":2,"run":true,"newOutput":["o.14.31"]}]},{"checkpointType":"r","timestamp":1556299472652,"notebook":173,"targetCells":[{"node":"c.14.34","changeType":2,"run":true,"newOutput":[]}]},{"checkpointType":"r","timestamp":1556299478802,"notebook":174,"targetCells":[{"node":"c.14.35","changeType":2,"run":true,"newOutput":[]}]},{"checkpointType":"s","timestamp":1556299498916,"notebook":175,"targetCells":[{"node":"c.14.36","changeType":2,"run":true,"newOutput":[]}]},{"checkpointType":"r","timestamp":1556299499010,"notebook":175,"targetCells":[{"node":"c.14.36","changeType":2,"run":true,"newOutput":[]}]},{"checkpointType":"d","timestamp":1556299507800,"notebook":176,"targetCells":[{"node":"c.14.37","changeType":1.5,"index":5}]},{"checkpointType":"r","timestamp":1556299529524,"notebook":177,"targetCells":[{"node":"c.13.21","changeType":2,"run":true,"newOutput":["o.13.19"]}]},{"checkpointType":"r","timestamp":1556299531661,"notebook":178,"targetCells":[{"node":"c.13.22","changeType":2,"run":true,"newOutput":["o.13.20"]}]},{"checkpointType":"r","timestamp":1556299535482,"notebook":179,"targetCells":[{"node":"c.13.23","changeType":2,"run":true,"newOutput":["o.13.21"]}]},{"checkpointType":"s","timestamp":1556299560021,"notebook":179,"targetCells":[]},{"checkpointType":"r","timestamp":1556300559149,"notebook":180,"targetCells":[{"node":"c.13.24","changeType":2,"run":true,"newOutput":["o.13.22"]}]},{"checkpointType":"s","timestamp":1556300564042,"notebook":181,"targetCells":[{"node":"c.13.25","changeType":2,"run":true,"newOutput":[]}]},{"checkpointType":"r","timestamp":1556300681205,"notebook":182,"targetCells":[{"node":"c.13.26","changeType":2,"run":true,"newOutput":["o.13.23"]}]},{"checkpointType":"s","timestamp":1556300684092,"notebook":182,"targetCells":[]},{"checkpointType":"r","timestamp":1556300715390,"notebook":183,"targetCells":[{"node":"c.13.27","changeType":2,"run":true,"newOutput":["o.13.24"]}]},{"checkpointType":"r","timestamp":1556300795362,"notebook":184,"targetCells":[{"node":"c.13.28","changeType":2,"run":true,"newOutput":["o.13.25"]}]},{"checkpointType":"a","timestamp":1556300797056,"notebook":185,"targetCells":[{"node":"c.15.0","changeType":1}]},{"checkpointType":"s","timestamp":1556300804139,"notebook":186,"targetCells":[{"node":"c.15.1","changeType":2,"run":true,"newOutput":[]}]},{"checkpointType":"r","timestamp":1556300849926,"notebook":187,"targetCells":[{"node":"c.15.2","changeType":2,"run":true,"newOutput":["o.15.1"]}]},{"checkpointType":"s","timestamp":1556300924188,"notebook":188,"targetCells":[{"node":"c.15.3","changeType":2,"run":true,"newOutput":[]}]},{"checkpointType":"s","timestamp":1556301044242,"notebook":189,"targetCells":[{"node":"c.15.4","changeType":2,"run":true,"newOutput":[]}]},{"checkpointType":"r","timestamp":1556301067033,"notebook":190,"targetCells":[{"node":"c.15.5","changeType":2,"run":true,"newOutput":["o.15.2"]}]},{"checkpointType":"d","timestamp":1556301104726,"notebook":191,"targetCells":[{"node":"c.4.6","changeType":1.5,"index":7}]},{"checkpointType":"d","timestamp":1556301107574,"notebook":192,"targetCells":[{"node":"c.1.14","changeType":1.5,"index":7}]},{"checkpointType":"d","timestamp":1556301108120,"notebook":193,"targetCells":[{"node":"c.0.28","changeType":1.5,"index":7}]},{"checkpointType":"d","timestamp":1556301109034,"notebook":194,"targetCells":[{"node":"c.3.2","changeType":1.5,"index":7}]},{"checkpointType":"s","timestamp":1556301110309,"notebook":194,"targetCells":[]},{"checkpointType":"s","timestamp":1556301134977,"notebook":194,"targetCells":[]},{"checkpointType":"r","timestamp":1556301182065,"notebook":195,"targetCells":[{"node":"c.2.9","changeType":2,"run":true,"newOutput":[]}]},{"checkpointType":"r","timestamp":1556301182271,"notebook":195,"targetCells":[{"node":"c.9.3","changeType":2,"run":true,"newOutput":[]}]},{"checkpointType":"r","timestamp":1556301182451,"notebook":195,"targetCells":[{"node":"c.8.13","changeType":2,"run":true,"newOutput":[]}]},{"checkpointType":"r","timestamp":1556301182631,"notebook":195,"targetCells":[{"node":"c.10.18","changeType":2,"run":true,"newOutput":[]}]},{"checkpointType":"r","timestamp":1556301182786,"notebook":195,"targetCells":[{"node":"c.13.28","changeType":2,"run":true,"newOutput":[]}]},{"checkpointType":"r","timestamp":1556301182965,"notebook":195,"targetCells":[{"node":"c.15.6","changeType":2,"run":true,"newOutput":["o.15.3"]}]},{"checkpointType":"a","timestamp":1556301183130,"notebook":196,"targetCells":[{"node":"c.16.0","changeType":1}]},{"checkpointType":"r","timestamp":1556301183157,"notebook":196,"targetCells":[{"node":"c.7.1","changeType":2,"run":true,"newOutput":["o.7.1"]}]},{"checkpointType":"d","timestamp":1556301188488,"notebook":197,"targetCells":[{"node":"c.16.1","changeType":1.5,"index":8}]},{"checkpointType":"s","timestamp":1556301255012,"notebook":198,"targetCells":[{"node":"c.7.2","changeType":2,"run":true,"newOutput":[]}]},{"checkpointType":"s","timestamp":1556301277319,"notebook":199,"targetCells":[{"node":"c.7.3","changeType":2,"run":true,"newOutput":[]}]},{"checkpointType":"s","timestamp":1556301318820,"notebook":200,"targetCells":[{"node":"c.7.4","changeType":2,"run":true,"newOutput":[]}]},{"checkpointType":"r","timestamp":1556301431794,"notebook":201,"targetCells":[{"node":"c.15.7","changeType":2,"run":true,"newOutput":["o.15.4"]}]},{"checkpointType":"r","timestamp":1556301435466,"notebook":202,"targetCells":[{"node":"c.15.8","changeType":2,"run":true,"newOutput":["o.15.5"]}]},{"checkpointType":"s","timestamp":1556301438863,"notebook":202,"targetCells":[]},{"checkpointType":"a","timestamp":1556301468864,"notebook":203,"targetCells":[{"node":"c.17.0","changeType":1}]},{"checkpointType":"r","timestamp":1556301468889,"notebook":203,"targetCells":[{"node":"c.7.5","changeType":2,"run":true,"newOutput":["o.7.2"]}]},{"checkpointType":"r","timestamp":1556301474008,"notebook":204,"targetCells":[{"node":"c.7.6","changeType":2,"run":true,"newOutput":["o.7.3"]}]},{"checkpointType":"r","timestamp":1556301479822,"notebook":205,"targetCells":[{"node":"c.7.7","changeType":2,"run":true,"newOutput":["o.7.4"]}]},{"checkpointType":"s","timestamp":1556301558907,"notebook":206,"targetCells":[{"node":"c.17.1","changeType":2,"run":true,"newOutput":[]}]},{"checkpointType":"a","timestamp":1556301568081,"notebook":207,"targetCells":[{"node":"c.18.0","changeType":1}]},{"checkpointType":"r","timestamp":1556301568123,"notebook":207,"targetCells":[{"node":"c.17.2","changeType":2,"run":true,"newOutput":["o.17.1"]}]},{"checkpointType":"r","timestamp":1556301572199,"notebook":208,"targetCells":[{"node":"c.17.3","changeType":2,"run":true,"newOutput":["o.17.2"]}]},{"checkpointType":"d","timestamp":1556301579410,"notebook":209,"targetCells":[{"node":"c.17.4","changeType":1.5,"index":8}]},{"checkpointType":"r","timestamp":1556301584862,"notebook":210,"targetCells":[{"node":"c.7.8","changeType":2,"run":true,"newOutput":["o.7.5"]}]},{"checkpointType":"s","timestamp":1556301678964,"notebook":210,"targetCells":[]},{"checkpointType":"s","timestamp":1556302159512,"notebook":211,"targetCells":[{"node":"c.7.8","changeType":2,"run":true,"newOutput":[]},{"node":"c.18.1","changeType":2,"run":true,"newOutput":[]}]},{"checkpointType":"s","timestamp":1556302279567,"notebook":212,"targetCells":[{"node":"c.18.2","changeType":2,"run":true,"newOutput":[]}]},{"checkpointType":"s","timestamp":1556302399632,"notebook":213,"targetCells":[{"node":"c.18.3","changeType":2,"run":true,"newOutput":[]}]},{"checkpointType":"s","timestamp":1556302640536,"notebook":214,"targetCells":[{"node":"c.18.4","changeType":2,"run":true,"newOutput":[]}]},{"checkpointType":"a","timestamp":1556302719331,"notebook":215,"targetCells":[{"node":"c.19.0","changeType":1}]},{"checkpointType":"r","timestamp":1556302741208,"notebook":215,"targetCells":[{"node":"c.18.5","changeType":2,"run":true,"newOutput":["o.18.1"]}]},{"checkpointType":"s","timestamp":1556302760584,"notebook":216,"targetCells":[{"node":"c.18.6","changeType":2,"run":true,"newOutput":[]}]},{"checkpointType":"s","timestamp":1556302769508,"notebook":217,"targetCells":[{"node":"c.18.7","changeType":2,"run":true,"newOutput":[]}]},{"checkpointType":"r","timestamp":1556302829045,"notebook":218,"targetCells":[{"node":"c.8.14","changeType":2,"run":true,"newOutput":["o.8.13"]}]},{"checkpointType":"r","timestamp":1556302871639,"notebook":219,"targetCells":[{"node":"c.9.4","changeType":2,"run":true,"newOutput":[]}]},{"checkpointType":"r","timestamp":1556302872531,"notebook":219,"targetCells":[{"node":"c.8.14","changeType":2,"run":true,"newOutput":[]}]},{"checkpointType":"r","timestamp":1556302885024,"notebook":220,"targetCells":[{"node":"c.8.15","changeType":2,"run":true,"newOutput":["o.8.15"]}]},{"checkpointType":"r","timestamp":1556302885641,"notebook":220,"targetCells":[{"node":"c.10.18","changeType":2,"run":true,"newOutput":[]}]},{"checkpointType":"r","timestamp":1556302885821,"notebook":220,"targetCells":[{"node":"c.13.28","changeType":2,"run":true,"newOutput":[]}]},{"checkpointType":"r","timestamp":1556302886012,"notebook":220,"targetCells":[{"node":"c.15.8","changeType":2,"run":true,"newOutput":[]}]},{"checkpointType":"r","timestamp":1556302886195,"notebook":220,"targetCells":[{"node":"c.7.8","changeType":2,"run":true,"newOutput":[]}]},{"checkpointType":"r","timestamp":1556302886398,"notebook":220,"targetCells":[{"node":"c.18.7","changeType":2,"run":true,"newOutput":[]}]},{"checkpointType":"s","timestamp":1556302889577,"notebook":220,"targetCells":[]},{"checkpointType":"s","timestamp":1556400352790,"notebook":220,"targetCells":[]},{"checkpointType":"l","timestamp":1556400357197,"notebook":220,"targetCells":[]},{"checkpointType":"s","timestamp":1556401039652,"notebook":221,"targetCells":[{"node":"c.18.8","changeType":2,"run":true,"newOutput":["o.18.3"]}]},{"checkpointType":"r","timestamp":1556401155413,"notebook":222,"targetCells":[{"node":"c.18.9","changeType":2,"run":true,"newOutput":["o.18.4"]}]},{"checkpointType":"s","timestamp":1556401159708,"notebook":222,"targetCells":[]},{"checkpointType":"r","timestamp":1556401204346,"notebook":222,"targetCells":[{"node":"m.0.18","changeType":0,"run":true,"newOutput":[]}]},{"checkpointType":"r","timestamp":1556401204696,"notebook":222,"targetCells":[{"node":"c.2.9","changeType":2,"run":true,"newOutput":[]}]},{"checkpointType":"r","timestamp":1556401205034,"notebook":222,"targetCells":[{"node":"c.9.4","changeType":2,"run":true,"newOutput":[]}]},{"checkpointType":"r","timestamp":1556401205343,"notebook":222,"targetCells":[{"node":"c.8.15","changeType":2,"run":true,"newOutput":[]}]},{"checkpointType":"r","timestamp":1556401205611,"notebook":222,"targetCells":[{"node":"c.10.18","changeType":2,"run":true,"newOutput":[]}]},{"checkpointType":"r","timestamp":1556401205817,"notebook":222,"targetCells":[{"node":"c.13.28","changeType":2,"run":true,"newOutput":[]}]},{"checkpointType":"r","timestamp":1556401206072,"notebook":222,"targetCells":[{"node":"c.15.8","changeType":2,"run":true,"newOutput":[]}]},{"checkpointType":"r","timestamp":1556401206393,"notebook":222,"targetCells":[{"node":"c.7.8","changeType":2,"run":true,"newOutput":[]}]},{"checkpointType":"r","timestamp":1556401206687,"notebook":222,"targetCells":[{"node":"c.18.9","changeType":2,"run":true,"newOutput":[]}]},{"checkpointType":"a","timestamp":1556401206971,"notebook":223,"targetCells":[{"node":"c.20.0","changeType":1}]},{"checkpointType":"r","timestamp":1556401206972,"notebook":223,"targetCells":[{"node":"c.19.0","changeType":2,"run":true,"newOutput":[]}]},{"checkpointType":"s","timestamp":1556401279755,"notebook":223,"targetCells":[]},{"checkpointType":"s","timestamp":1556401399801,"notebook":224,"targetCells":[{"node":"c.13.29","changeType":2,"run":true,"newOutput":[]}]},{"checkpointType":"r","timestamp":1556401404444,"notebook":224,"targetCells":[{"node":"c.13.29","changeType":2,"run":true,"newOutput":[]}]},{"checkpointType":"s","timestamp":1556401519853,"notebook":224,"targetCells":[]},{"checkpointType":"r","timestamp":1556401576134,"notebook":225,"targetCells":[{"node":"c.13.30","changeType":2,"run":true,"newOutput":["o.13.27"]}]},{"checkpointType":"a","timestamp":1556401577878,"notebook":226,"targetCells":[{"node":"c.21.0","changeType":1}]},{"checkpointType":"s","timestamp":1556401633597,"notebook":227,"targetCells":[{"node":"c.21.1","changeType":2,"run":true,"newOutput":[]}]},{"checkpointType":"s","timestamp":1556401634369,"notebook":227,"targetCells":[]},{"checkpointType":"s","timestamp":1556566313947,"notebook":227,"targetCells":[{"node":"c.21.1","changeType":2,"run":true,"newOutput":[]}]},{"checkpointType":"s","timestamp":1556566585560,"notebook":228,"targetCells":[{"node":"c.21.2","changeType":2,"run":true,"newOutput":[]}]},{"checkpointType":"d","timestamp":1556664942030,"notebook":229,"targetCells":[{"node":"c.20.1","changeType":1.5,"index":11}]},{"checkpointType":"d","timestamp":1556664942790,"notebook":230,"targetCells":[{"node":"c.19.1","changeType":1.5,"index":10}]},{"checkpointType":"s","timestamp":1556664944605,"notebook":230,"targetCells":[]}]}