[{"nodey":0,"versions":[{"type":"Module","content":["1.0","2.0","3.0","4.0","5.0","6.0","7.0","8.0","9.0","10.0"]}]},{"nodey":1,"versions":[{"type":"COMMENT","literal":"#%matplotlib inline"}]},{"nodey":2,"versions":[{"type":"NAME","literal":"import"}]},{"nodey":3,"versions":[{"type":"NAME","literal":"numpy"}]},{"nodey":4,"versions":[{"type":"NAME","literal":"as"}]},{"nodey":5,"versions":[{"type":"NAME","literal":"np"}]},{"nodey":6,"versions":[{"type":"NAME","literal":"import"}]},{"nodey":7,"versions":[{"type":"NAME","literal":"matplotlib"}]},{"nodey":8,"versions":[{"type":"NAME","literal":"pyplot"}]},{"nodey":9,"versions":[{"type":"NAME","literal":"as"}]},{"nodey":10,"versions":[{"type":"NAME","literal":"plt"}]},{"nodey":11,"versions":[{"type":"Module","content":["12.0","32.0","43.0"]}]},{"nodey":12,"versions":[{"type":"FunctionDef","content":["13.0","14.0","15.0","18.0"]}]},{"nodey":13,"versions":[{"type":"NAME","literal":"def"}]},{"nodey":14,"versions":[{"type":"NAME","literal":"f"}]},{"nodey":15,"versions":[{"type":"arguments","content":["16.0"]}]},{"nodey":16,"versions":[{"type":"arg","content":["17.0"]}]},{"nodey":17,"versions":[{"type":"NAME","literal":"x"}]},{"nodey":18,"versions":[{"type":"Return","content":["19.0","20.0"]}]},{"nodey":19,"versions":[{"type":"NAME","literal":"return"}]},{"nodey":20,"versions":[{"type":"BinOp","content":["21.0","22.0","23.0","24.0","25.0","30.0"]}]},{"nodey":21,"versions":[{"type":"NAME","literal":"x"}]},{"nodey":22,"versions":[{"type":"NUMBER","literal":"3"}]},{"nodey":23,"versions":[{"type":"NAME","literal":"x"}]},{"nodey":24,"versions":[{"type":"NUMBER","literal":"5"}]},{"nodey":25,"versions":[{"type":"BinOp","content":["26.0"]}]},{"nodey":26,"versions":[{"type":"BinOp","content":["27.0","28.0"]}]},{"nodey":27,"versions":[{"type":"NAME","literal":"x"}]},{"nodey":28,"versions":[{"type":"Num","content":["29.0"]}]},{"nodey":29,"versions":[{"type":"NUMBER","literal":"7"}]},{"nodey":30,"versions":[{"type":"Num","content":["31.0"]}]},{"nodey":31,"versions":[{"type":"NUMBER","literal":"85"}]},{"nodey":32,"versions":[{"type":"Assign","content":["33.0","34.0"]}]},{"nodey":33,"versions":[{"type":"NAME","literal":"x"}]},{"nodey":34,"versions":[{"type":"Call","content":["35.0","36.0","37.0","39.0","41.0"]}]},{"nodey":35,"versions":[{"type":"NAME","literal":"np"}]},{"nodey":36,"versions":[{"type":"NAME","literal":"linspace"}]},{"nodey":37,"versions":[{"type":"Num","content":["38.0"]}]},{"nodey":38,"versions":[{"type":"NUMBER","literal":"0"}]},{"nodey":39,"versions":[{"type":"Num","content":["40.0"]}]},{"nodey":40,"versions":[{"type":"NUMBER","literal":"10"}]},{"nodey":41,"versions":[{"type":"Num","content":["42.0"]}]},{"nodey":42,"versions":[{"type":"NUMBER","literal":"200"}]},{"nodey":43,"versions":[{"type":"Assign","content":["44.0","45.0"]}]},{"nodey":44,"versions":[{"type":"NAME","literal":"y"}]},{"nodey":45,"versions":[{"type":"Call","content":["46.0","47.0"]}]},{"nodey":46,"versions":[{"type":"NAME","literal":"f"}]},{"nodey":47,"versions":[{"type":"NAME","literal":"x"}]},{"nodey":48,"versions":[{"type":"Module","content":["49.0","59.0","64.0","72.0"]}]},{"nodey":49,"versions":[{"type":"Assign","content":["50.0","53.0"]}]},{"nodey":50,"versions":[{"type":"Tuple","content":["51.0","52.0"]}]},{"nodey":51,"versions":[{"type":"NAME","literal":"a"}]},{"nodey":52,"versions":[{"type":"NAME","literal":"b"}]},{"nodey":53,"versions":[{"type":"Tuple","content":["54.0","56.0"]}]},{"nodey":54,"versions":[{"type":"Num","content":["55.0"]}]},{"nodey":55,"versions":[{"type":"NUMBER","literal":"1"}]},{"nodey":56,"versions":[{"type":"Num","content":["57.0","58.0"]}]},{"nodey":57,"versions":[{"type":"NUMBER","literal":"8"}]},{"nodey":58,"versions":[{"type":"COMMENT","literal":"# the left and right boundaries"}]},{"nodey":59,"versions":[{"type":"Assign","content":["60.0","61.0"]}]},{"nodey":60,"versions":[{"type":"NAME","literal":"N"}]},{"nodey":61,"versions":[{"type":"Num","content":["62.0","63.0"]}]},{"nodey":62,"versions":[{"type":"NUMBER","literal":"5"}]},{"nodey":63,"versions":[{"type":"COMMENT","literal":"# the number of points"}]},{"nodey":64,"versions":[{"type":"Assign","content":["65.0","66.0"]}]},{"nodey":65,"versions":[{"type":"NAME","literal":"xint"}]},{"nodey":66,"versions":[{"type":"Call","content":["67.0","68.0","69.0","70.0","71.0"]}]},{"nodey":67,"versions":[{"type":"NAME","literal":"np"}]},{"nodey":68,"versions":[{"type":"NAME","literal":"linspace"}]},{"nodey":69,"versions":[{"type":"NAME","literal":"a"}]},{"nodey":70,"versions":[{"type":"NAME","literal":"b"}]},{"nodey":71,"versions":[{"type":"NAME","literal":"N"}]},{"nodey":72,"versions":[{"type":"Assign","content":["73.0","74.0"]}]},{"nodey":73,"versions":[{"type":"NAME","literal":"yint"}]},{"nodey":74,"versions":[{"type":"Call","content":["75.0","76.0"]}]},{"nodey":75,"versions":[{"type":"NAME","literal":"f"}]},{"nodey":76,"versions":[{"type":"NAME","literal":"xint"}]},{"nodey":77,"versions":[{"type":"Module","output":[{"output":{"ename":"TypeError","evalue":"alpha must be a float or None","output_type":"error","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m~/miniconda/envs/jupyterlab-ext/lib/python3.6/site-packages/matplotlib/collections.py\u001b[0m in \u001b[0;36mset_alpha\u001b[0;34m(self, alpha)\u001b[0m\n\u001b[1;32m    779\u001b[0m             \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 780\u001b[0;31m                 \u001b[0mfloat\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0malpha\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    781\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0mTypeError\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mTypeError\u001b[0m: float() argument must be a string or a number, not 'list'","\nDuring handling of the above exception, another exception occurred:\n","\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-13-a98d536d57da>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mplot\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mx\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlw\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m2\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0maxis\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m9\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m0\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m140\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 3\u001b[0;31m \u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfill_between\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mxint\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m0\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0myint\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mfacecolor\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m'gray'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0malpha\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mplot\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mx\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlw\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m3\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      4\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtext\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m0.5\u001b[0m \u001b[0;34m*\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0ma\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0mb\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m30\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34mr\"$\\int_a^b f(x)dx$\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mhorizontalalignment\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m'center'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mfontsize\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m20\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m~/miniconda/envs/jupyterlab-ext/lib/python3.6/site-packages/matplotlib/pyplot.py\u001b[0m in \u001b[0;36mfill_between\u001b[0;34m(x, y1, y2, where, interpolate, step, hold, data, **kwargs)\u001b[0m\n\u001b[1;32m   3052\u001b[0m         ret = ax.fill_between(x, y1, y2=y2, where=where,\n\u001b[1;32m   3053\u001b[0m                               \u001b[0minterpolate\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0minterpolate\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mstep\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mstep\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdata\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mdata\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 3054\u001b[0;31m                               **kwargs)\n\u001b[0m\u001b[1;32m   3055\u001b[0m     \u001b[0;32mfinally\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3056\u001b[0m         \u001b[0max\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_hold\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mwashold\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m~/miniconda/envs/jupyterlab-ext/lib/python3.6/site-packages/matplotlib/__init__.py\u001b[0m in \u001b[0;36minner\u001b[0;34m(ax, *args, **kwargs)\u001b[0m\n\u001b[1;32m   1853\u001b[0m                         \u001b[0;34m\"the Matplotlib list!)\"\u001b[0m \u001b[0;34m%\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0mlabel_namer\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mfunc\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__name__\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1854\u001b[0m                         RuntimeWarning, stacklevel=2)\n\u001b[0;32m-> 1855\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mfunc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0max\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1856\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1857\u001b[0m         inner.__doc__ = _add_data_doc(inner.__doc__,\n","\u001b[0;32m~/miniconda/envs/jupyterlab-ext/lib/python3.6/site-packages/matplotlib/axes/_axes.py\u001b[0m in \u001b[0;36mfill_between\u001b[0;34m(self, x, y1, y2, where, interpolate, step, **kwargs)\u001b[0m\n\u001b[1;32m   5149\u001b[0m             \u001b[0mpolys\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mappend\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   5150\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 5151\u001b[0;31m         \u001b[0mcollection\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mmcoll\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mPolyCollection\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mpolys\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   5152\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   5153\u001b[0m         \u001b[0;31m# now update the datalim and autoscale\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m~/miniconda/envs/jupyterlab-ext/lib/python3.6/site-packages/matplotlib/collections.py\u001b[0m in \u001b[0;36m__init__\u001b[0;34m(self, verts, sizes, closed, **kwargs)\u001b[0m\n\u001b[1;32m    959\u001b[0m         \u001b[0;34m%\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mCollection\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0ms\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    960\u001b[0m         \"\"\"\n\u001b[0;32m--> 961\u001b[0;31m         \u001b[0mCollection\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__init__\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    962\u001b[0m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mset_sizes\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0msizes\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    963\u001b[0m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mset_verts\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mverts\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mclosed\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m~/miniconda/envs/jupyterlab-ext/lib/python3.6/site-packages/matplotlib/collections.py\u001b[0m in \u001b[0;36m__init__\u001b[0;34m(self, edgecolors, facecolors, linewidths, linestyles, capstyle, joinstyle, antialiaseds, offsets, transOffset, norm, cmap, pickradius, hatch, urls, offset_position, zorder, **kwargs)\u001b[0m\n\u001b[1;32m    168\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    169\u001b[0m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_path_effects\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 170\u001b[0;31m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mupdate\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    171\u001b[0m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_paths\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    172\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m~/miniconda/envs/jupyterlab-ext/lib/python3.6/site-packages/matplotlib/artist.py\u001b[0m in \u001b[0;36mupdate\u001b[0;34m(self, props)\u001b[0m\n\u001b[1;32m    886\u001b[0m         \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    887\u001b[0m             ret = [_update_property(self, k, v)\n\u001b[0;32m--> 888\u001b[0;31m                    for k, v in props.items()]\n\u001b[0m\u001b[1;32m    889\u001b[0m         \u001b[0;32mfinally\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    890\u001b[0m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0meventson\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mstore\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m~/miniconda/envs/jupyterlab-ext/lib/python3.6/site-packages/matplotlib/artist.py\u001b[0m in \u001b[0;36m<listcomp>\u001b[0;34m(.0)\u001b[0m\n\u001b[1;32m    886\u001b[0m         \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    887\u001b[0m             ret = [_update_property(self, k, v)\n\u001b[0;32m--> 888\u001b[0;31m                    for k, v in props.items()]\n\u001b[0m\u001b[1;32m    889\u001b[0m         \u001b[0;32mfinally\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    890\u001b[0m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0meventson\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mstore\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m~/miniconda/envs/jupyterlab-ext/lib/python3.6/site-packages/matplotlib/artist.py\u001b[0m in \u001b[0;36m_update_property\u001b[0;34m(self, k, v)\u001b[0m\n\u001b[1;32m    880\u001b[0m                 \u001b[0;32mif\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0mcallable\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfunc\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    881\u001b[0m                     \u001b[0;32mraise\u001b[0m \u001b[0mAttributeError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'Unknown property %s'\u001b[0m \u001b[0;34m%\u001b[0m \u001b[0mk\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 882\u001b[0;31m                 \u001b[0;32mreturn\u001b[0m \u001b[0mfunc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mv\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    883\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    884\u001b[0m         \u001b[0mstore\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0meventson\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m~/miniconda/envs/jupyterlab-ext/lib/python3.6/site-packages/matplotlib/collections.py\u001b[0m in \u001b[0;36mset_alpha\u001b[0;34m(self, alpha)\u001b[0m\n\u001b[1;32m    780\u001b[0m                 \u001b[0mfloat\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0malpha\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    781\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0mTypeError\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 782\u001b[0;31m                 \u001b[0;32mraise\u001b[0m \u001b[0mTypeError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'alpha must be a float or None'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    783\u001b[0m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mupdate_dict\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'array'\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mTrue\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    784\u001b[0m         \u001b[0martist\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mArtist\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mset_alpha\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0malpha\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mTypeError\u001b[0m: alpha must be a float or None"]}},{"output":{"output_type":"display_data","data":{"image/png":"\n","text/plain":"<Figure size 432x288 with 1 Axes>"},"metadata":{}}}],"content":["78.0","88.0","101.0","124.0","146.0","147.0"]}]},{"nodey":78,"versions":[{"type":"Expr","content":["79.0"]}]},{"nodey":79,"versions":[{"type":"Call","content":["80.0","81.0","82.0","83.0","84.0","85.0"]}]},{"nodey":80,"versions":[{"type":"NAME","literal":"plt"}]},{"nodey":81,"versions":[{"type":"NAME","literal":"plot"}]},{"nodey":82,"versions":[{"type":"NAME","literal":"x"}]},{"nodey":83,"versions":[{"type":"NAME","literal":"y"}]},{"nodey":84,"versions":[{"type":"NAME","literal":"lw"}]},{"nodey":85,"versions":[{"type":"keyword","content":["86.0"]}]},{"nodey":86,"versions":[{"type":"Num","content":["87.0"]}]},{"nodey":87,"versions":[{"type":"NUMBER","literal":"2"}]},{"nodey":88,"versions":[{"type":"Expr","content":["89.0"]}]},{"nodey":89,"versions":[{"type":"Call","content":["90.0","91.0","92.0"]}]},{"nodey":90,"versions":[{"type":"NAME","literal":"plt"}]},{"nodey":91,"versions":[{"type":"NAME","literal":"axis"}]},{"nodey":92,"versions":[{"type":"List","content":["93.0","95.0","97.0","99.0"]}]},{"nodey":93,"versions":[{"type":"Num","content":["94.0"]}]},{"nodey":94,"versions":[{"type":"NUMBER","literal":"0"}]},{"nodey":95,"versions":[{"type":"Num","content":["96.0"]}]},{"nodey":96,"versions":[{"type":"NUMBER","literal":"9"}]},{"nodey":97,"versions":[{"type":"Num","content":["98.0"]}]},{"nodey":98,"versions":[{"type":"NUMBER","literal":"0"}]},{"nodey":99,"versions":[{"type":"Num","content":["100.0"]}]},{"nodey":100,"versions":[{"type":"NUMBER","literal":"140"}]},{"nodey":101,"versions":[{"type":"Expr","content":["102.0"]}]},{"nodey":102,"versions":[{"type":"Call","content":["103.0","104.0","105.0","106.0","108.0","109.0","110.0","114.0"]}]},{"nodey":103,"versions":[{"type":"NAME","literal":"plt"}]},{"nodey":104,"versions":[{"type":"NAME","literal":"fill_between"}]},{"nodey":105,"versions":[{"type":"NAME","literal":"xint"}]},{"nodey":106,"versions":[{"type":"Num","content":["107.0"]}]},{"nodey":107,"versions":[{"type":"NUMBER","literal":"0"}]},{"nodey":108,"versions":[{"type":"NAME","literal":"yint"}]},{"nodey":109,"versions":[{"type":"NAME","literal":"facecolor"}]},{"nodey":110,"versions":[{"type":"keyword","content":["111.0"]}]},{"nodey":111,"versions":[{"type":"Str","content":["112.0","113.0"]}]},{"nodey":112,"versions":[{"type":"STRING","literal":"'gray'"}]},{"nodey":113,"versions":[{"type":"NAME","literal":"alpha"}]},{"nodey":114,"versions":[{"type":"keyword","content":["115.0"]}]},{"nodey":115,"versions":[{"type":"Call","content":["116.0","117.0","118.0","119.0","120.0","121.0"]}]},{"nodey":116,"versions":[{"type":"NAME","literal":"plt"}]},{"nodey":117,"versions":[{"type":"NAME","literal":"plot"}]},{"nodey":118,"versions":[{"type":"NAME","literal":"x"}]},{"nodey":119,"versions":[{"type":"NAME","literal":"y"}]},{"nodey":120,"versions":[{"type":"NAME","literal":"lw"}]},{"nodey":121,"versions":[{"type":"keyword","content":["122.0"]}]},{"nodey":122,"versions":[{"type":"Num","content":["123.0"]}]},{"nodey":123,"versions":[{"type":"NUMBER","literal":"3"}]},{"nodey":124,"versions":[{"type":"Expr","content":["125.0"]}]},{"nodey":125,"versions":[{"type":"Call","content":["126.0","127.0","128.0","134.0","136.0","139.0","143.0"]}]},{"nodey":126,"versions":[{"type":"NAME","literal":"plt"}]},{"nodey":127,"versions":[{"type":"NAME","literal":"text"}]},{"nodey":128,"versions":[{"type":"BinOp","content":["129.0","131.0"]}]},{"nodey":129,"versions":[{"type":"Num","content":["130.0"]}]},{"nodey":130,"versions":[{"type":"NUMBER","literal":"0.5"}]},{"nodey":131,"versions":[{"type":"BinOp","content":["132.0","133.0"]}]},{"nodey":132,"versions":[{"type":"NAME","literal":"a"}]},{"nodey":133,"versions":[{"type":"NAME","literal":"b"}]},{"nodey":134,"versions":[{"type":"Num","content":["135.0"]}]},{"nodey":135,"versions":[{"type":"NUMBER","literal":"30"}]},{"nodey":136,"versions":[{"type":"Str","content":["137.0","138.0"]}]},{"nodey":137,"versions":[{"type":"STRING","literal":"r\"$\\int_a^b f(x)dx$\""}]},{"nodey":138,"versions":[{"type":"NAME","literal":"horizontalalignment"}]},{"nodey":139,"versions":[{"type":"keyword","content":["140.0"]}]},{"nodey":140,"versions":[{"type":"Str","content":["141.0","142.0"]}]},{"nodey":141,"versions":[{"type":"STRING","literal":"'center'"}]},{"nodey":142,"versions":[{"type":"NAME","literal":"fontsize"}]},{"nodey":143,"versions":[{"type":"keyword","content":["144.0"]}]},{"nodey":144,"versions":[{"type":"Num","content":["145.0"]}]},{"nodey":145,"versions":[{"type":"NUMBER","literal":"20"}]},{"nodey":146,"versions":[{"type":"COMMENT","literal":"# fooland"}]},{"nodey":147,"versions":[{"type":"Expr","content":["148.0"]}]},{"nodey":148,"versions":[{"type":"Call","content":["149.0","150.0"]}]},{"nodey":149,"versions":[{"type":"NAME","literal":"print"}]},{"nodey":150,"versions":[{"type":"Str","content":["151.0"]}]},{"nodey":151,"versions":[{"type":"STRING","literal":"\"Hi!\""}]},{"nodey":152,"versions":[{"type":"Module","content":["153.0","154.0","155.0","156.0","157.0","158.0","159.0","160.0","161.0","162.0","171.0","197.0","206.0"]}]},{"nodey":153,"versions":[{"type":"NAME","literal":"from"}]},{"nodey":154,"versions":[{"type":"NAME","literal":"__future__"}]},{"nodey":155,"versions":[{"type":"NAME","literal":"import"}]},{"nodey":156,"versions":[{"type":"NAME","literal":"print_function"}]},{"nodey":157,"versions":[{"type":"NAME","literal":"from"}]},{"nodey":158,"versions":[{"type":"NAME","literal":"scipy"}]},{"nodey":159,"versions":[{"type":"NAME","literal":"integrate"}]},{"nodey":160,"versions":[{"type":"NAME","literal":"import"}]},{"nodey":161,"versions":[{"type":"NAME","literal":"quad"}]},{"nodey":162,"versions":[{"type":"Assign","content":["163.0","166.0"]}]},{"nodey":163,"versions":[{"type":"Tuple","content":["164.0","165.0"]}]},{"nodey":164,"versions":[{"type":"NAME","literal":"integral"}]},{"nodey":165,"versions":[{"type":"NAME","literal":"error"}]},{"nodey":166,"versions":[{"type":"Call","content":["167.0","168.0","169.0","170.0"]}]},{"nodey":167,"versions":[{"type":"NAME","literal":"quad"}]},{"nodey":168,"versions":[{"type":"NAME","literal":"f"}]},{"nodey":169,"versions":[{"type":"NAME","literal":"a9"}]},{"nodey":170,"versions":[{"type":"NAME","literal":"b"}]},{"nodey":171,"versions":[{"type":"Assign","content":["172.0","173.0"]}]},{"nodey":172,"versions":[{"type":"NAME","literal":"integral_trapezoid"}]},{"nodey":173,"versions":[{"type":"BinOp","content":["174.0","195.0"]}]},{"nodey":174,"versions":[{"type":"Call","content":["175.0","176.0"]}]},{"nodey":175,"versions":[{"type":"NAME","literal":"sum"}]},{"nodey":176,"versions":[{"type":"BinOp","content":["177.0","186.0"]}]},{"nodey":177,"versions":[{"type":"BinOp","content":["178.0","183.0"]}]},{"nodey":178,"versions":[{"type":"Subscript","content":["179.0","180.0"]}]},{"nodey":179,"versions":[{"type":"NAME","literal":"xint"}]},{"nodey":180,"versions":[{"type":"Slice","content":["181.0"]}]},{"nodey":181,"versions":[{"type":"Num","content":["182.0"]}]},{"nodey":182,"versions":[{"type":"NUMBER","literal":"1"}]},{"nodey":183,"versions":[{"type":"Subscript","content":["184.0","185.0"]}]},{"nodey":184,"versions":[{"type":"NAME","literal":"xint"}]},{"nodey":185,"versions":[{"type":"NUMBER","literal":"1"}]},{"nodey":186,"versions":[{"type":"BinOp","content":["187.0","192.0"]}]},{"nodey":187,"versions":[{"type":"Subscript","content":["188.0","189.0"]}]},{"nodey":188,"versions":[{"type":"NAME","literal":"yint"}]},{"nodey":189,"versions":[{"type":"Slice","content":["190.0"]}]},{"nodey":190,"versions":[{"type":"Num","content":["191.0"]}]},{"nodey":191,"versions":[{"type":"NUMBER","literal":"1"}]},{"nodey":192,"versions":[{"type":"Subscript","content":["193.0","194.0"]}]},{"nodey":193,"versions":[{"type":"NAME","literal":"yint"}]},{"nodey":194,"versions":[{"type":"NUMBER","literal":"1"}]},{"nodey":195,"versions":[{"type":"Num","content":["196.0"]}]},{"nodey":196,"versions":[{"type":"NUMBER","literal":"2"}]},{"nodey":197,"versions":[{"type":"Expr","content":["198.0"]}]},{"nodey":198,"versions":[{"type":"Call","content":["199.0","200.0","202.0","203.0","205.0"]}]},{"nodey":199,"versions":[{"type":"NAME","literal":"print"}]},{"nodey":200,"versions":[{"type":"Str","content":["201.0"]}]},{"nodey":201,"versions":[{"type":"STRING","literal":"\"The integral is:\""}]},{"nodey":202,"versions":[{"type":"NAME","literal":"integral"}]},{"nodey":203,"versions":[{"type":"Str","content":["204.0"]}]},{"nodey":204,"versions":[{"type":"STRING","literal":"\"+/-\""}]},{"nodey":205,"versions":[{"type":"NAME","literal":"errort"}]},{"nodey":206,"versions":[{"type":"Expr","content":["207.0"]}]},{"nodey":207,"versions":[{"type":"Call","content":["208.0","209.0","211.0","214.0","216.0"]}]},{"nodey":208,"versions":[{"type":"NAME","literal":"print"}]},{"nodey":209,"versions":[{"type":"Str","content":["210.0"]}]},{"nodey":210,"versions":[{"type":"STRING","literal":"\"The trapezoid approximation with\""}]},{"nodey":211,"versions":[{"type":"Call","content":["212.0","213.0"]}]},{"nodey":212,"versions":[{"type":"NAME","literal":"len"}]},{"nodey":213,"versions":[{"type":"NAME","literal":"xint"}]},{"nodey":214,"versions":[{"type":"Str","content":["215.0"]}]},{"nodey":215,"versions":[{"type":"STRING","literal":"\"points is:\""}]},{"nodey":216,"versions":[{"type":"NAME","literal":"integral_trapezoid"}]}]